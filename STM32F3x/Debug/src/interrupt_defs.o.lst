   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"interrupt_defs.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_i2d
  20              		.global	__aeabi_dmul
  21              		.global	__aeabi_dcmpgt
  22              		.global	__aeabi_dcmplt
  23              		.align	2
  24              		.global	TIM7_IRQHandler
  25              		.thumb
  26              		.thumb_func
  28              	TIM7_IRQHandler:
  29              	.LFB111:
  30              		.file 1 "../src/interrupt_defs.cpp"
   1:../src/interrupt_defs.cpp **** /*
   2:../src/interrupt_defs.cpp ****  * interrupt_defs.cpp
   3:../src/interrupt_defs.cpp ****  *
   4:../src/interrupt_defs.cpp ****  *  Created on: Feb 19, 2013
   5:../src/interrupt_defs.cpp ****  *      Author: root
   6:../src/interrupt_defs.cpp ****  */
   7:../src/interrupt_defs.cpp **** 
   8:../src/interrupt_defs.cpp **** #include "common_headers.h"
   9:../src/interrupt_defs.cpp **** #include "stm32f3_discovery_l3gd20.h"
  10:../src/interrupt_defs.cpp **** 
  11:../src/interrupt_defs.cpp **** #include "encoder.h"
  12:../src/interrupt_defs.cpp **** 
  13:../src/interrupt_defs.cpp **** //#include <stdio.h>
  14:../src/interrupt_defs.cpp **** #include <math.h>
  15:../src/interrupt_defs.cpp **** 
  16:../src/interrupt_defs.cpp **** // ISR definitions need to go here, to avoid C++ name-mangling
  17:../src/interrupt_defs.cpp **** 
  18:../src/interrupt_defs.cpp **** extern "C"
  19:../src/interrupt_defs.cpp **** {
  20:../src/interrupt_defs.cpp **** extern volatile float gyro_angle_x;
  21:../src/interrupt_defs.cpp **** extern encoderState left_enc, right_enc;
  22:../src/interrupt_defs.cpp **** extern int gyro_bias_x, adcval;
  23:../src/interrupt_defs.cpp **** extern volatile int led_matrix[8];
  24:../src/interrupt_defs.cpp **** extern volatile int led_iter;
  25:../src/interrupt_defs.cpp **** extern int new_data;
  26:../src/interrupt_defs.cpp **** extern uint8_t adc2_new_data;
  27:../src/interrupt_defs.cpp **** extern uint8_t adc3_awd1, adc3_awd2;
  28:../src/interrupt_defs.cpp **** 
  29:../src/interrupt_defs.cpp **** extern int count, stage;
  30:../src/interrupt_defs.cpp **** 
  31:../src/interrupt_defs.cpp **** extern float drive_cmd;// = 0.0f;
  32:../src/interrupt_defs.cpp **** extern float err;// = 0.0f;
  33:../src/interrupt_defs.cpp **** extern float last_err;// = 0.0f;
  34:../src/interrupt_defs.cpp **** extern float diff_err;
  35:../src/interrupt_defs.cpp **** extern float rt;// = 0.0f;
  36:../src/interrupt_defs.cpp **** extern float d_front;// = 1.0f;
  37:../src/interrupt_defs.cpp **** extern float integral;
  38:../src/interrupt_defs.cpp **** 
  39:../src/interrupt_defs.cpp **** extern float left, right;
  40:../src/interrupt_defs.cpp **** 
  41:../src/interrupt_defs.cpp **** extern __IO uint32_t adcData[2];
  42:../src/interrupt_defs.cpp **** extern __IO uint32_t adc2_data[2];
  43:../src/interrupt_defs.cpp **** 
  44:../src/interrupt_defs.cpp **** extern int state;
  45:../src/interrupt_defs.cpp **** 
  46:../src/interrupt_defs.cpp **** extern int leds_on;
  47:../src/interrupt_defs.cpp **** extern float match_time_counter, t_firefight_start;
  48:../src/interrupt_defs.cpp **** 
  49:../src/interrupt_defs.cpp **** void update_pid(void);
  50:../src/interrupt_defs.cpp **** 
  51:../src/interrupt_defs.cpp **** 	void TIM7_IRQHandler(void) // ISR that performs encoder state update:
  52:../src/interrupt_defs.cpp **** 										// Runs every DT milliseconds
  53:../src/interrupt_defs.cpp **** 	{
  31              		.loc 1 53 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 96
  34              		@ frame_needed = 1, uses_anonymous_args = 0
  35 0000 90B5     		push	{r4, r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 12
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 99B0     		sub	sp, sp, #100
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 112
  44 0004 00AF     		add	r7, sp, #0
  45              	.LCFI2:
  46              		.cfi_def_cfa_register 7
  47              	.LBB2:
  54:../src/interrupt_defs.cpp **** 		float left_out, right_out;
  55:../src/interrupt_defs.cpp **** 		int error, abs_err;
  56:../src/interrupt_defs.cpp **** 
  57:../src/interrupt_defs.cpp **** 		TIM_ClearITPendingBit(TIM7, TIM_IT_Update);
  48              		.loc 1 57 0
  49 0006 4FF4A050 		mov	r0, #5120
  50 000a C4F20000 		movt	r0, 16384
  51 000e 4FF00101 		mov	r1, #1
  52 0012 FFF7FEFF 		bl	TIM_ClearITPendingBit
  58:../src/interrupt_defs.cpp **** 
  59:../src/interrupt_defs.cpp **** 		encoderState left_temp, right_temp;
  60:../src/interrupt_defs.cpp **** 
  61:../src/interrupt_defs.cpp **** 		left_temp.position = left_enc.position;
  53              		.loc 1 61 0
  54 0016 40F20003 		movw	r3, #:lower16:left_enc
  55 001a C0F20003 		movt	r3, #:upper16:left_enc
  56 001e 1B68     		ldr	r3, [r3, #0]
  57 0020 3B60     		str	r3, [r7, #0]
  62:../src/interrupt_defs.cpp **** 		left_temp.speed = left_enc.speed;
  58              		.loc 1 62 0
  59 0022 40F20003 		movw	r3, #:lower16:left_enc
  60 0026 C0F20003 		movt	r3, #:upper16:left_enc
  61 002a 5B68     		ldr	r3, [r3, #4]	@ float
  62 002c 7B60     		str	r3, [r7, #4]	@ float
  63:../src/interrupt_defs.cpp **** 		left_temp.acceleration = left_enc.acceleration;
  63              		.loc 1 63 0
  64 002e 40F20003 		movw	r3, #:lower16:left_enc
  65 0032 C0F20003 		movt	r3, #:upper16:left_enc
  66 0036 9B68     		ldr	r3, [r3, #8]	@ float
  67 0038 BB60     		str	r3, [r7, #8]	@ float
  64:../src/interrupt_defs.cpp **** 
  65:../src/interrupt_defs.cpp **** 		right_temp.position = right_enc.position;
  68              		.loc 1 65 0
  69 003a 40F20003 		movw	r3, #:lower16:right_enc
  70 003e C0F20003 		movt	r3, #:upper16:right_enc
  71 0042 1B68     		ldr	r3, [r3, #0]
  72 0044 BB62     		str	r3, [r7, #40]
  66:../src/interrupt_defs.cpp **** 		right_temp.speed = right_enc.speed;
  73              		.loc 1 66 0
  74 0046 40F20003 		movw	r3, #:lower16:right_enc
  75 004a C0F20003 		movt	r3, #:upper16:right_enc
  76 004e 5B68     		ldr	r3, [r3, #4]	@ float
  77 0050 FB62     		str	r3, [r7, #44]	@ float
  67:../src/interrupt_defs.cpp **** 		right_temp.acceleration = right_enc.acceleration;
  78              		.loc 1 67 0
  79 0052 40F20003 		movw	r3, #:lower16:right_enc
  80 0056 C0F20003 		movt	r3, #:upper16:right_enc
  81 005a 9B68     		ldr	r3, [r3, #8]	@ float
  82 005c 3B63     		str	r3, [r7, #48]	@ float
  68:../src/interrupt_defs.cpp **** 
  69:../src/interrupt_defs.cpp **** 		left_enc.position = left_temp.position + (int16_t)TIM_GetCounter(TIM4); //Instead of TIM2 on othe
  83              		.loc 1 69 0
  84 005e 3C68     		ldr	r4, [r7, #0]
  85 0060 4FF40060 		mov	r0, #2048
  86 0064 C4F20000 		movt	r0, 16384
  87 0068 FFF7FEFF 		bl	TIM_GetCounter
  88 006c 0346     		mov	r3, r0
  89 006e 9BB2     		uxth	r3, r3
  90 0070 1BB2     		sxth	r3, r3
  91 0072 E218     		adds	r2, r4, r3
  92 0074 40F20003 		movw	r3, #:lower16:left_enc
  93 0078 C0F20003 		movt	r3, #:upper16:left_enc
  94 007c 1A60     		str	r2, [r3, #0]
  70:../src/interrupt_defs.cpp **** 		TIM_SetCounter(TIM4, 0);
  95              		.loc 1 70 0
  96 007e 4FF40060 		mov	r0, #2048
  97 0082 C4F20000 		movt	r0, 16384
  98 0086 4FF00001 		mov	r1, #0
  99 008a FFF7FEFF 		bl	TIM_SetCounter
  71:../src/interrupt_defs.cpp **** 		left_enc.speed = (float)((left_enc.position - left_temp.position)*1000)/(float)DT_ENCODER; // Sin
 100              		.loc 1 71 0
 101 008e 40F20003 		movw	r3, #:lower16:left_enc
 102 0092 C0F20003 		movt	r3, #:upper16:left_enc
 103 0096 1A68     		ldr	r2, [r3, #0]
 104 0098 3B68     		ldr	r3, [r7, #0]
 105 009a D31A     		subs	r3, r2, r3
 106 009c 4FF47A72 		mov	r2, #1000
 107 00a0 02FB03F3 		mul	r3, r2, r3
 108 00a4 07EE903A 		fmsr	s15, r3	@ int
 109 00a8 B8EEE77A 		fsitos	s14, s15
 110 00ac F3EE097A 		fconsts	s15, #57
 111 00b0 C7EE277A 		fdivs	s15, s14, s15
 112 00b4 40F20003 		movw	r3, #:lower16:left_enc
 113 00b8 C0F20003 		movt	r3, #:upper16:left_enc
 114 00bc C3ED017A 		fsts	s15, [r3, #4]
  72:../src/interrupt_defs.cpp **** 		left_enc.acceleration = (float)((left_enc.speed - left_temp.speed)*1000)/(float)DT_ENCODER;
 115              		.loc 1 72 0
 116 00c0 40F20003 		movw	r3, #:lower16:left_enc
 117 00c4 C0F20003 		movt	r3, #:upper16:left_enc
 118 00c8 93ED017A 		flds	s14, [r3, #4]
 119 00cc D7ED017A 		flds	s15, [r7, #4]
 120 00d0 37EE677A 		fsubs	s14, s14, s15
 121 00d4 DFEDDA7A 		flds	s15, .L32+8
 122 00d8 27EE277A 		fmuls	s14, s14, s15
 123 00dc F3EE097A 		fconsts	s15, #57
 124 00e0 C7EE277A 		fdivs	s15, s14, s15
 125 00e4 40F20003 		movw	r3, #:lower16:left_enc
 126 00e8 C0F20003 		movt	r3, #:upper16:left_enc
 127 00ec C3ED027A 		fsts	s15, [r3, #8]
  73:../src/interrupt_defs.cpp **** 
  74:../src/interrupt_defs.cpp **** 		right_enc.position = right_temp.position + (int16_t)(TIM_GetCounter(TIM8));
 128              		.loc 1 74 0
 129 00f0 BC6A     		ldr	r4, [r7, #40]
 130 00f2 4FF45050 		mov	r0, #13312
 131 00f6 C4F20100 		movt	r0, 16385
 132 00fa FFF7FEFF 		bl	TIM_GetCounter
 133 00fe 0346     		mov	r3, r0
 134 0100 9BB2     		uxth	r3, r3
 135 0102 1BB2     		sxth	r3, r3
 136 0104 E218     		adds	r2, r4, r3
 137 0106 40F20003 		movw	r3, #:lower16:right_enc
 138 010a C0F20003 		movt	r3, #:upper16:right_enc
 139 010e 1A60     		str	r2, [r3, #0]
  75:../src/interrupt_defs.cpp **** 		TIM_SetCounter(TIM8, 0); // To get around the stupid 16-bit counter limitation present on all tim
 140              		.loc 1 75 0
 141 0110 4FF45050 		mov	r0, #13312
 142 0114 C4F20100 		movt	r0, 16385
 143 0118 4FF00001 		mov	r1, #0
 144 011c FFF7FEFF 		bl	TIM_SetCounter
  76:../src/interrupt_defs.cpp **** 		right_enc.speed = (float)((right_enc.position - right_temp.position)*1000)/(float)DT_ENCODER;
 145              		.loc 1 76 0
 146 0120 40F20003 		movw	r3, #:lower16:right_enc
 147 0124 C0F20003 		movt	r3, #:upper16:right_enc
 148 0128 1A68     		ldr	r2, [r3, #0]
 149 012a BB6A     		ldr	r3, [r7, #40]
 150 012c D31A     		subs	r3, r2, r3
 151 012e 4FF47A72 		mov	r2, #1000
 152 0132 02FB03F3 		mul	r3, r2, r3
 153 0136 07EE903A 		fmsr	s15, r3	@ int
 154 013a B8EEE77A 		fsitos	s14, s15
 155 013e F3EE097A 		fconsts	s15, #57
 156 0142 C7EE277A 		fdivs	s15, s14, s15
 157 0146 40F20003 		movw	r3, #:lower16:right_enc
 158 014a C0F20003 		movt	r3, #:upper16:right_enc
 159 014e C3ED017A 		fsts	s15, [r3, #4]
  77:../src/interrupt_defs.cpp **** 		right_enc.acceleration = (float)((right_enc.speed - right_temp.speed)*1000)/(float)DT_ENCODER;
 160              		.loc 1 77 0
 161 0152 40F20003 		movw	r3, #:lower16:right_enc
 162 0156 C0F20003 		movt	r3, #:upper16:right_enc
 163 015a 93ED017A 		flds	s14, [r3, #4]
 164 015e D7ED0B7A 		flds	s15, [r7, #44]
 165 0162 37EE677A 		fsubs	s14, s14, s15
 166 0166 DFEDB67A 		flds	s15, .L32+8
 167 016a 27EE277A 		fmuls	s14, s14, s15
 168 016e F3EE097A 		fconsts	s15, #57
 169 0172 C7EE277A 		fdivs	s15, s14, s15
 170 0176 40F20003 		movw	r3, #:lower16:right_enc
 171 017a C0F20003 		movt	r3, #:upper16:right_enc
 172 017e C3ED027A 		fsts	s15, [r3, #8]
  78:../src/interrupt_defs.cpp **** 
  79:../src/interrupt_defs.cpp **** 		if(left_enc.m == MODE_POSITION)
 173              		.loc 1 79 0
 174 0182 40F20003 		movw	r3, #:lower16:left_enc
 175 0186 C0F20003 		movt	r3, #:upper16:left_enc
 176 018a 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 177 018e 012B     		cmp	r3, #1
 178 0190 5DD1     		bne	.L2
  80:../src/interrupt_defs.cpp **** 		{
  81:../src/interrupt_defs.cpp **** 			left_out = ((float)k_p * (float)(left_enc.position_target - left_enc.position))
  82:../src/interrupt_defs.cpp **** 					+ ((float)k_i*(float)(left_enc.integral))
  83:../src/interrupt_defs.cpp **** 					+ ((float)k_d*(float)left_enc.speed);
 179              		.loc 1 83 0
 180 0192 40F20003 		movw	r3, #:lower16:left_enc
 181 0196 C0F20003 		movt	r3, #:upper16:left_enc
 182 019a DA68     		ldr	r2, [r3, #12]
 183 019c 40F20003 		movw	r3, #:lower16:left_enc
 184 01a0 C0F20003 		movt	r3, #:upper16:left_enc
 185 01a4 1B68     		ldr	r3, [r3, #0]
 186 01a6 D31A     		subs	r3, r2, r3
 187 01a8 07EE103A 		fmsr	s14, r3	@ int
 188 01ac F8EEC77A 		fsitos	s15, s14
 189 01b0 37EEA77A 		fadds	s14, s15, s15
 190 01b4 40F20003 		movw	r3, #:lower16:left_enc
 191 01b8 C0F20003 		movt	r3, #:upper16:left_enc
 192 01bc D3ED057A 		flds	s15, [r3, #20]	@ int
 193 01c0 F8EEE76A 		fsitos	s13, s15
 194 01c4 DFED9F7A 		flds	s15, .L32+12
 195 01c8 66EEA77A 		fmuls	s15, s13, s15
 196 01cc 37EE277A 		fadds	s14, s14, s15
 197 01d0 40F20003 		movw	r3, #:lower16:left_enc
 198 01d4 C0F20003 		movt	r3, #:upper16:left_enc
 199 01d8 D3ED016A 		flds	s13, [r3, #4]
 200 01dc DFED9A7A 		flds	s15, .L32+16
 201 01e0 66EEA77A 		fmuls	s15, s13, s15
 202 01e4 77EE277A 		fadds	s15, s14, s15
 203 01e8 C7ED177A 		fsts	s15, [r7, #92]
  84:../src/interrupt_defs.cpp **** 			left_out = (left_out > 100) ? 100 : ((left_out < -100) ? -100 : left_out);
 204              		.loc 1 84 0
 205 01ec 97ED177A 		flds	s14, [r7, #92]
 206 01f0 DFED967A 		flds	s15, .L32+20
 207 01f4 B4EEE77A 		fcmpes	s14, s15
 208 01f8 F1EE10FA 		fmstat
 209 01fc 04DD     		ble	.L28
 210              	.L24:
 211              		.loc 1 84 0 is_stmt 0 discriminator 1
 212 01fe 4FF00003 		mov	r3, #0
 213 0202 C4F2C823 		movt	r3, 17096
 214 0206 0EE0     		b	.L5
 215              	.L28:
 216              		.loc 1 84 0 discriminator 2
 217 0208 97ED177A 		flds	s14, [r7, #92]
 218 020c DFED907A 		flds	s15, .L32+24
 219 0210 B4EEE77A 		fcmpes	s14, s15
 220 0214 F1EE10FA 		fmstat
 221 0218 04D5     		bpl	.L29
 222              	.L25:
 223              		.loc 1 84 0 discriminator 3
 224 021a 4FF00003 		mov	r3, #0
 225 021e CCF2C823 		movt	r3, 49864
 226 0222 00E0     		b	.L8
 227              	.L29:
 228              		.loc 1 84 0 discriminator 4
 229 0224 FB6D     		ldr	r3, [r7, #92]	@ float
 230              	.L8:
 231              	.L5:
 232              		.loc 1 84 0 discriminator 6
 233 0226 FB65     		str	r3, [r7, #92]	@ float
  85:../src/interrupt_defs.cpp **** 
  86:../src/interrupt_defs.cpp **** 			pwm2_output(100-((float)(left_out+100)/(float)2));
 234              		.loc 1 86 0 is_stmt 1 discriminator 6
 235 0228 97ED177A 		flds	s14, [r7, #92]
 236 022c DFED877A 		flds	s15, .L32+20
 237 0230 37EE277A 		fadds	s14, s14, s15
 238 0234 F0EE007A 		fconsts	s15, #0
 239 0238 C7EE277A 		fdivs	s15, s14, s15
 240 023c 9FED837A 		flds	s14, .L32+20
 241 0240 77EE677A 		fsubs	s15, s14, s15
 242 0244 17EE900A 		fmrs	r0, s15
 243 0248 FFF7FEFF 		bl	_Z11pwm2_outputf
 244 024c 0BE0     		b	.L9
 245              	.L2:
  87:../src/interrupt_defs.cpp **** 		}
  88:../src/interrupt_defs.cpp **** 		else if(left_enc.m == MODE_SPEED)
 246              		.loc 1 88 0
 247 024e 40F20003 		movw	r3, #:lower16:left_enc
 248 0252 C0F20003 		movt	r3, #:upper16:left_enc
 249 0256 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 250 025a 022B     		cmp	r3, #2
 251 025c 03D1     		bne	.L9
  89:../src/interrupt_defs.cpp **** 		{
  90:../src/interrupt_defs.cpp **** 			pwm2_output(0);
 252              		.loc 1 90 0
 253 025e 4FF00000 		mov	r0, #0
 254 0262 FFF7FEFF 		bl	_Z11pwm2_outputf
 255              	.L9:
  91:../src/interrupt_defs.cpp **** 		}
  92:../src/interrupt_defs.cpp **** 
  93:../src/interrupt_defs.cpp **** 		if(right_enc.m == MODE_POSITION)
 256              		.loc 1 93 0
 257 0266 40F20003 		movw	r3, #:lower16:right_enc
 258 026a C0F20003 		movt	r3, #:upper16:right_enc
 259 026e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 260 0272 012B     		cmp	r3, #1
 261 0274 40F0FE80 		bne	.L10
  94:../src/interrupt_defs.cpp **** 		{
  95:../src/interrupt_defs.cpp **** 			error = right_enc.position - right_enc.position_target;
 262              		.loc 1 95 0
 263 0278 40F20003 		movw	r3, #:lower16:right_enc
 264 027c C0F20003 		movt	r3, #:upper16:right_enc
 265 0280 1A68     		ldr	r2, [r3, #0]
 266 0282 40F20003 		movw	r3, #:lower16:right_enc
 267 0286 C0F20003 		movt	r3, #:upper16:right_enc
 268 028a DB68     		ldr	r3, [r3, #12]
 269 028c D31A     		subs	r3, r2, r3
 270 028e BB65     		str	r3, [r7, #88]
  96:../src/interrupt_defs.cpp **** 			right_enc.integral += (float)(error) * (float)DT_ENCODER / (float)1000;
 271              		.loc 1 96 0
 272 0290 40F20003 		movw	r3, #:lower16:right_enc
 273 0294 C0F20003 		movt	r3, #:upper16:right_enc
 274 0298 D3ED057A 		flds	s15, [r3, #20]	@ int
 275 029c B8EEE77A 		fsitos	s14, s15
 276 02a0 D7ED167A 		flds	s15, [r7, #88]	@ int
 277 02a4 F8EEE76A 		fsitos	s13, s15
 278 02a8 F3EE097A 		fconsts	s15, #57
 279 02ac 66EEA76A 		fmuls	s13, s13, s15
 280 02b0 DFED637A 		flds	s15, .L32+8
 281 02b4 C6EEA77A 		fdivs	s15, s13, s15
 282 02b8 77EE277A 		fadds	s15, s14, s15
 283 02bc FDEEE77A 		ftosizs	s15, s15
 284 02c0 40F20003 		movw	r3, #:lower16:right_enc
 285 02c4 C0F20003 		movt	r3, #:upper16:right_enc
 286 02c8 C3ED057A 		fsts	s15, [r3, #20]	@ int
  97:../src/interrupt_defs.cpp **** 
  98:../src/interrupt_defs.cpp **** 			if(right_enc.integral * k_i > 100 || right_enc.integral * k_i < -100)
 287              		.loc 1 98 0
 288 02cc 40F20003 		movw	r3, #:lower16:right_enc
 289 02d0 C0F20003 		movt	r3, #:upper16:right_enc
 290 02d4 5B69     		ldr	r3, [r3, #20]
 291 02d6 1846     		mov	r0, r3
 292 02d8 FFF7FEFF 		bl	__aeabi_i2d
 293 02dc 0246     		mov	r2, r0
 294 02de 0B46     		mov	r3, r1
 295 02e0 1046     		mov	r0, r2
 296 02e2 1946     		mov	r1, r3
 297 02e4 54A3     		adr	r3, .L32
 298 02e6 D3E90023 		ldrd	r2, [r3]
 299 02ea FFF7FEFF 		bl	__aeabi_dmul
 300 02ee 0246     		mov	r2, r0
 301 02f0 0B46     		mov	r3, r1
 302 02f2 1046     		mov	r0, r2
 303 02f4 1946     		mov	r1, r3
 304 02f6 4FF00002 		mov	r2, #0
 305 02fa 4FF00003 		mov	r3, #0
 306 02fe C4F25903 		movt	r3, 16473
 307 0302 FFF7FEFF 		bl	__aeabi_dcmpgt
 308 0306 0346     		mov	r3, r0
 309 0308 002B     		cmp	r3, #0
 310 030a 1FD1     		bne	.L11
 311              		.loc 1 98 0 is_stmt 0 discriminator 1
 312 030c 40F20003 		movw	r3, #:lower16:right_enc
 313 0310 C0F20003 		movt	r3, #:upper16:right_enc
 314 0314 5B69     		ldr	r3, [r3, #20]
 315 0316 1846     		mov	r0, r3
 316 0318 FFF7FEFF 		bl	__aeabi_i2d
 317 031c 0246     		mov	r2, r0
 318 031e 0B46     		mov	r3, r1
 319 0320 1046     		mov	r0, r2
 320 0322 1946     		mov	r1, r3
 321 0324 44A3     		adr	r3, .L32
 322 0326 D3E90023 		ldrd	r2, [r3]
 323 032a FFF7FEFF 		bl	__aeabi_dmul
 324 032e 0246     		mov	r2, r0
 325 0330 0B46     		mov	r3, r1
 326 0332 1046     		mov	r0, r2
 327 0334 1946     		mov	r1, r3
 328 0336 4FF00002 		mov	r2, #0
 329 033a 4FF00003 		mov	r3, #0
 330 033e CCF25903 		movt	r3, 49241
 331 0342 FFF7FEFF 		bl	__aeabi_dcmplt
 332 0346 0346     		mov	r3, r0
 333 0348 002B     		cmp	r3, #0
 334 034a 06D0     		beq	.L12
 335              	.L11:
  99:../src/interrupt_defs.cpp **** 			{
 100:../src/interrupt_defs.cpp **** 				right_enc.integral = (float)100/(float)k_i;
 336              		.loc 1 100 0 is_stmt 1
 337 034c 40F20003 		movw	r3, #:lower16:right_enc
 338 0350 C0F20003 		movt	r3, #:upper16:right_enc
 339 0354 40F29A22 		movw	r2, #666
 340 0358 5A61     		str	r2, [r3, #20]
 341              	.L12:
 101:../src/interrupt_defs.cpp **** 			}
 102:../src/interrupt_defs.cpp **** 
 103:../src/interrupt_defs.cpp **** 			right_out = ((float)k_p * (float)error)
 104:../src/interrupt_defs.cpp **** 					+ ((float)k_i*(float)(right_enc.integral))
 105:../src/interrupt_defs.cpp **** 					+ ((float)k_d*(float)(error - right_enc.last_error)/(float)(DT_ENCODER/(float)1000));
 342              		.loc 1 105 0
 343 035a D7ED167A 		flds	s15, [r7, #88]	@ int
 344 035e F8EEE77A 		fsitos	s15, s15
 345 0362 37EEA77A 		fadds	s14, s15, s15
 346 0366 40F20003 		movw	r3, #:lower16:right_enc
 347 036a C0F20003 		movt	r3, #:upper16:right_enc
 348 036e D3ED057A 		flds	s15, [r3, #20]	@ int
 349 0372 F8EEE76A 		fsitos	s13, s15
 350 0376 DFED337A 		flds	s15, .L32+12
 351 037a 66EEA77A 		fmuls	s15, s13, s15
 352 037e 37EE277A 		fadds	s14, s14, s15
 353 0382 40F20003 		movw	r3, #:lower16:right_enc
 354 0386 C0F20003 		movt	r3, #:upper16:right_enc
 355 038a 9B69     		ldr	r3, [r3, #24]
 356 038c BA6D     		ldr	r2, [r7, #88]
 357 038e D31A     		subs	r3, r2, r3
 358 0390 07EE903A 		fmsr	s15, r3	@ int
 359 0394 F8EEE76A 		fsitos	s13, s15
 360 0398 DFED2B7A 		flds	s15, .L32+16
 361 039c 66EEA76A 		fmuls	s13, s13, s15
 362 03a0 DFED2D7A 		flds	s15, .L32+32
 363 03a4 C6EEA77A 		fdivs	s15, s13, s15
 364 03a8 77EE277A 		fadds	s15, s14, s15
 365 03ac C7ED157A 		fsts	s15, [r7, #84]
 106:../src/interrupt_defs.cpp **** 			right_out = (right_out > 100) ? 100 : ((right_out < -100) ? -100 : right_out);
 366              		.loc 1 106 0
 367 03b0 97ED157A 		flds	s14, [r7, #84]
 368 03b4 DFED257A 		flds	s15, .L32+20
 369 03b8 B4EEE77A 		fcmpes	s14, s15
 370 03bc F1EE10FA 		fmstat
 371 03c0 04DD     		ble	.L30
 372              	.L26:
 373              		.loc 1 106 0 is_stmt 0 discriminator 1
 374 03c2 4FF00003 		mov	r3, #0
 375 03c6 C4F2C823 		movt	r3, 17096
 376 03ca 0EE0     		b	.L16
 377              	.L30:
 378              		.loc 1 106 0 discriminator 2
 379 03cc 97ED157A 		flds	s14, [r7, #84]
 380 03d0 DFED1F7A 		flds	s15, .L32+24
 381 03d4 B4EEE77A 		fcmpes	s14, s15
 382 03d8 F1EE10FA 		fmstat
 383 03dc 04D5     		bpl	.L31
 384              	.L27:
 385              		.loc 1 106 0 discriminator 3
 386 03de 4FF00003 		mov	r3, #0
 387 03e2 CCF2C823 		movt	r3, 49864
 388 03e6 00E0     		b	.L19
 389              	.L31:
 390              		.loc 1 106 0 discriminator 4
 391 03e8 7B6D     		ldr	r3, [r7, #84]	@ float
 392              	.L19:
 393              	.L16:
 394              		.loc 1 106 0 discriminator 6
 395 03ea 7B65     		str	r3, [r7, #84]	@ float
 107:../src/interrupt_defs.cpp **** 			right_enc.last_error = error;
 396              		.loc 1 107 0 is_stmt 1 discriminator 6
 397 03ec 40F20003 		movw	r3, #:lower16:right_enc
 398 03f0 C0F20003 		movt	r3, #:upper16:right_enc
 399 03f4 BA6D     		ldr	r2, [r7, #88]
 400 03f6 9A61     		str	r2, [r3, #24]
 108:../src/interrupt_defs.cpp **** 
 109:../src/interrupt_defs.cpp **** 			abs_err = (error > 0) ? error : (error*-1);
 401              		.loc 1 109 0 discriminator 6
 402 03f8 BB6D     		ldr	r3, [r7, #88]
 403 03fa 002B     		cmp	r3, #0
 404 03fc B8BF     		it	lt
 405 03fe 5B42     		rsblt	r3, r3, #0
 406 0400 3B65     		str	r3, [r7, #80]
 110:../src/interrupt_defs.cpp **** 
 111:../src/interrupt_defs.cpp **** 			if(error > 10 || error < -10)
 407              		.loc 1 111 0 discriminator 6
 408 0402 BB6D     		ldr	r3, [r7, #88]
 409 0404 0A2B     		cmp	r3, #10
 410 0406 03DC     		bgt	.L20
 411              		.loc 1 111 0 is_stmt 0 discriminator 1
 412 0408 BB6D     		ldr	r3, [r7, #88]
 413 040a 13F10A0F 		cmn	r3, #10
 414 040e 25DA     		bge	.L21
 415              	.L20:
 112:../src/interrupt_defs.cpp **** 			{
 113:../src/interrupt_defs.cpp **** 				pwm1_output((((float)(right_out+100)/(float)2))*(float)0.01);
 416              		.loc 1 113 0 is_stmt 1
 417 0410 97ED157A 		flds	s14, [r7, #84]
 418 0414 DFED0D7A 		flds	s15, .L32+20
 419 0418 37EE277A 		fadds	s14, s14, s15
 420 041c F0EE007A 		fconsts	s15, #0
 421 0420 87EE277A 		fdivs	s14, s14, s15
 422 0424 DFED0B7A 		flds	s15, .L32+28
 423 0428 67EE277A 		fmuls	s15, s14, s15
 424 042c 17EE900A 		fmrs	r0, s15
 425 0430 FFF7FEFF 		bl	_Z11pwm1_outputf
 426 0434 1EE0     		b	.L10
 427              	.L33:
 428 0436 00BF     		.align	3
 429              	.L32:
 430 0438 33333333 		.word	858993459
 431 043c 3333C33F 		.word	1069757235
 432 0440 00007A44 		.word	1148846080
 433 0444 9A99193E 		.word	1041865114
 434 0448 8FC2353F 		.word	1060487823
 435 044c 0000C842 		.word	1120403456
 436 0450 0000C8C2 		.word	-1027080192
 437 0454 0AD7233C 		.word	1008981770
 438 0458 CDCCCC3C 		.word	1020054733
 439              	.L21:
 114:../src/interrupt_defs.cpp **** 			}
 115:../src/interrupt_defs.cpp **** 			else
 116:../src/interrupt_defs.cpp **** 			{
 117:../src/interrupt_defs.cpp **** 				pwm1_output(0.50f);
 440              		.loc 1 117 0
 441 045c 4FF07C50 		mov	r0, #1056964608
 442 0460 FFF7FEFF 		bl	_Z11pwm1_outputf
 118:../src/interrupt_defs.cpp **** 				right_enc.m = MODE_OPENLOOP;
 443              		.loc 1 118 0
 444 0464 40F20003 		movw	r3, #:lower16:right_enc
 445 0468 C0F20003 		movt	r3, #:upper16:right_enc
 446 046c 4FF00002 		mov	r2, #0
 447 0470 83F82420 		strb	r2, [r3, #36]
 448              	.L10:
 119:../src/interrupt_defs.cpp **** 			}
 120:../src/interrupt_defs.cpp **** 		}
 121:../src/interrupt_defs.cpp **** 		update_pid();
 449              		.loc 1 121 0
 450 0474 FFF7FEFF 		bl	update_pid
 122:../src/interrupt_defs.cpp **** 		if(state > ST_READY)
 451              		.loc 1 122 0
 452 0478 40F20003 		movw	r3, #:lower16:state
 453 047c C0F20003 		movt	r3, #:upper16:state
 454 0480 1B68     		ldr	r3, [r3, #0]
 455 0482 002B     		cmp	r3, #0
 456 0484 0FDB     		blt	.L1
 123:../src/interrupt_defs.cpp **** 		{
 124:../src/interrupt_defs.cpp **** 			match_time_counter += (float)DT_ENCODER/(float)1000; // Increment main match time counter by DT_
 457              		.loc 1 124 0
 458 0486 40F20003 		movw	r3, #:lower16:match_time_counter
 459 048a C0F20003 		movt	r3, #:upper16:match_time_counter
 460 048e 93ED007A 		flds	s14, [r3, #0]
 461 0492 5FED0F7A 		flds	s15, .L32+32
 462 0496 77EE277A 		fadds	s15, s14, s15
 463 049a 40F20003 		movw	r3, #:lower16:match_time_counter
 464 049e C0F20003 		movt	r3, #:upper16:match_time_counter
 465 04a2 C3ED007A 		fsts	s15, [r3, #0]
 466              	.L1:
 467              	.LBE2:
 125:../src/interrupt_defs.cpp **** 		}
 126:../src/interrupt_defs.cpp **** 
 127:../src/interrupt_defs.cpp **** 		/*
 128:../src/interrupt_defs.cpp **** 		else if(right_enc.m == MODE_SPEED)
 129:../src/interrupt_defs.cpp **** 		{
 130:../src/interrupt_defs.cpp **** 			error = right_enc.speed - right_enc.speed_target;
 131:../src/interrupt_defs.cpp **** 
 132:../src/interrupt_defs.cpp **** 			right_out = ((float)error * (float)k_p_s);// + ((float)k_d_s * (float)(error - right_enc.last_sp
 133:../src/interrupt_defs.cpp **** //			right_out = (right_out > 100) ? 100 : ((right_out < -100) ? -100 : right_out);
 134:../src/interrupt_defs.cpp **** 			right_enc.vel_cmd += right_out;
 135:../src/interrupt_defs.cpp **** 			if(right_enc.vel_cmd > 1)
 136:../src/interrupt_defs.cpp **** 			{
 137:../src/interrupt_defs.cpp **** 				right_enc.vel_cmd = 1;
 138:../src/interrupt_defs.cpp **** 			}
 139:../src/interrupt_defs.cpp **** 
 140:../src/interrupt_defs.cpp **** 			else if(right_enc.vel_cmd < 0)
 141:../src/interrupt_defs.cpp **** 			{
 142:../src/interrupt_defs.cpp **** 				right_enc.vel_cmd = 0;
 143:../src/interrupt_defs.cpp **** 			}
 144:../src/interrupt_defs.cpp **** 
 145:../src/interrupt_defs.cpp **** //			pwm1_output((float)1.0-right_enc.vel_cmd);
 146:../src/interrupt_defs.cpp **** 			pwm1_output(0.50f);
 147:../src/interrupt_defs.cpp **** 
 148:../src/interrupt_defs.cpp **** 			right_enc.last_speed_error = error;
 149:../src/interrupt_defs.cpp **** 		}
 150:../src/interrupt_defs.cpp **** 		*/
 151:../src/interrupt_defs.cpp **** 	}
 468              		.loc 1 151 0
 469 04a6 07F16407 		add	r7, r7, #100
 470 04aa BD46     		mov	sp, r7
 471 04ac 90BD     		pop	{r4, r7, pc}
 472              		.cfi_endproc
 473              	.LFE111:
 475 04ae 00BF     		.align	2
 476              		.global	TIM1_TRG_COM_TIM17_IRQHandler
 477              		.thumb
 478              		.thumb_func
 480              	TIM1_TRG_COM_TIM17_IRQHandler:
 481              	.LFB112:
 152:../src/interrupt_defs.cpp **** 
 153:../src/interrupt_defs.cpp **** 	void TIM1_TRG_COM_TIM17_IRQHandler(void)
 154:../src/interrupt_defs.cpp **** 	{
 482              		.loc 1 154 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 24
 485              		@ frame_needed = 1, uses_anonymous_args = 0
 486 04b0 80B5     		push	{r7, lr}
 487              	.LCFI3:
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 7, -8
 490              		.cfi_offset 14, -4
 491 04b2 86B0     		sub	sp, sp, #24
 492              	.LCFI4:
 493              		.cfi_def_cfa_offset 32
 494 04b4 00AF     		add	r7, sp, #0
 495              	.LCFI5:
 496              		.cfi_def_cfa_register 7
 497              	.LBB3:
 155:../src/interrupt_defs.cpp **** 
 156:../src/interrupt_defs.cpp **** 		TIM_ClearITPendingBit(TIM17, TIM_IT_Update);
 498              		.loc 1 156 0
 499 04b6 4FF49040 		mov	r0, #18432
 500 04ba C4F20100 		movt	r0, 16385
 501 04be 4FF00101 		mov	r1, #1
 502 04c2 FFF7FEFF 		bl	TIM_ClearITPendingBit
 157:../src/interrupt_defs.cpp **** 
 158:../src/interrupt_defs.cpp **** 		/*
 159:../src/interrupt_defs.cpp **** 		uint8_t bytes[2];
 160:../src/interrupt_defs.cpp **** 
 161:../src/interrupt_defs.cpp **** 		union twosComp {		// Takes care of two's complement conversion
 162:../src/interrupt_defs.cpp **** 			uint16_t un_signed;
 163:../src/interrupt_defs.cpp **** 			int16_t output;
 164:../src/interrupt_defs.cpp **** 		} convert;
 165:../src/interrupt_defs.cpp **** 
 166:../src/interrupt_defs.cpp **** 		L3GD20_Read(bytes, L3GD20_OUT_X_L_ADDR, 2);
 167:../src/interrupt_defs.cpp **** 		convert.un_signed = (bytes[1] << 8) | bytes[0];
 168:../src/interrupt_defs.cpp **** 
 169:../src/interrupt_defs.cpp **** 		gyro_angle_x += (convert.output - gyro_bias_x) * (float)0.00763 * (float)0.001 * (float)DT_IMU;
 170:../src/interrupt_defs.cpp **** 		*/
 171:../src/interrupt_defs.cpp **** 
 172:../src/interrupt_defs.cpp **** 		/*
 173:../src/interrupt_defs.cpp **** 		 * Below: code required to trigger the ping sensor:
 174:../src/interrupt_defs.cpp **** 		 */
 175:../src/interrupt_defs.cpp **** 
 176:../src/interrupt_defs.cpp **** 		EXTI_InitTypeDef e;
 177:../src/interrupt_defs.cpp **** 
 178:../src/interrupt_defs.cpp **** 		e.EXTI_Line = EXTI_Line9;
 503              		.loc 1 178 0
 504 04c6 4FF00903 		mov	r3, #9
 505 04ca FB60     		str	r3, [r7, #12]
 179:../src/interrupt_defs.cpp **** 		e.EXTI_LineCmd = DISABLE;
 506              		.loc 1 179 0
 507 04cc 4FF00003 		mov	r3, #0
 508 04d0 BB74     		strb	r3, [r7, #18]
 180:../src/interrupt_defs.cpp **** 		e.EXTI_Mode = EXTI_Mode_Interrupt;
 509              		.loc 1 180 0
 510 04d2 4FF00003 		mov	r3, #0
 511 04d6 3B74     		strb	r3, [r7, #16]
 181:../src/interrupt_defs.cpp **** 		e.EXTI_Trigger = EXTI_Trigger_Rising;
 512              		.loc 1 181 0
 513 04d8 4FF00803 		mov	r3, #8
 514 04dc 7B74     		strb	r3, [r7, #17]
 182:../src/interrupt_defs.cpp **** 
 183:../src/interrupt_defs.cpp **** 		EXTI_Init(&e);
 515              		.loc 1 183 0
 516 04de 07F10C03 		add	r3, r7, #12
 517 04e2 1846     		mov	r0, r3
 518 04e4 FFF7FEFF 		bl	EXTI_Init
 184:../src/interrupt_defs.cpp **** 
 185:../src/interrupt_defs.cpp **** 		GPIO_InitTypeDef g;
 186:../src/interrupt_defs.cpp **** 		g.GPIO_Mode = GPIO_Mode_OUT;
 519              		.loc 1 186 0
 520 04e8 4FF00103 		mov	r3, #1
 521 04ec 3B72     		strb	r3, [r7, #8]
 187:../src/interrupt_defs.cpp **** 		g.GPIO_OType = GPIO_OType_PP;
 522              		.loc 1 187 0
 523 04ee 4FF00003 		mov	r3, #0
 524 04f2 BB72     		strb	r3, [r7, #10]
 188:../src/interrupt_defs.cpp **** 		g.GPIO_Pin = GPIO_Pin_0;
 525              		.loc 1 188 0
 526 04f4 4FF00103 		mov	r3, #1
 527 04f8 7B60     		str	r3, [r7, #4]
 189:../src/interrupt_defs.cpp **** 		g.GPIO_PuPd = GPIO_PuPd_NOPULL;
 528              		.loc 1 189 0
 529 04fa 4FF00003 		mov	r3, #0
 530 04fe FB72     		strb	r3, [r7, #11]
 190:../src/interrupt_defs.cpp **** 		g.GPIO_Speed = GPIO_Speed_Level_1;
 531              		.loc 1 190 0
 532 0500 4FF00103 		mov	r3, #1
 533 0504 7B72     		strb	r3, [r7, #9]
 191:../src/interrupt_defs.cpp **** 
 192:../src/interrupt_defs.cpp **** 		GPIO_Init(GPIOB, &g);
 534              		.loc 1 192 0
 535 0506 07F10403 		add	r3, r7, #4
 536 050a 4FF48060 		mov	r0, #1024
 537 050e C4F60000 		movt	r0, 18432
 538 0512 1946     		mov	r1, r3
 539 0514 FFF7FEFF 		bl	GPIO_Init
 193:../src/interrupt_defs.cpp **** 		int iter = 0;
 540              		.loc 1 193 0
 541 0518 4FF00003 		mov	r3, #0
 542 051c 7B61     		str	r3, [r7, #20]
 194:../src/interrupt_defs.cpp **** 
 195:../src/interrupt_defs.cpp **** 		for(iter=0;iter<10;++iter)
 543              		.loc 1 195 0
 544 051e 4FF00003 		mov	r3, #0
 545 0522 7B61     		str	r3, [r7, #20]
 546 0524 0DE0     		b	.L35
 547              	.L36:
 196:../src/interrupt_defs.cpp **** 		{
 197:../src/interrupt_defs.cpp **** 			GPIO_WriteBit(GPIOB, GPIO_Pin_0, Bit_SET);
 548              		.loc 1 197 0 discriminator 2
 549 0526 4FF48060 		mov	r0, #1024
 550 052a C4F60000 		movt	r0, 18432
 551 052e 4FF00101 		mov	r1, #1
 552 0532 4FF00102 		mov	r2, #1
 553 0536 FFF7FEFF 		bl	GPIO_WriteBit
 195:../src/interrupt_defs.cpp **** 		for(iter=0;iter<10;++iter)
 554              		.loc 1 195 0 discriminator 2
 555 053a 7B69     		ldr	r3, [r7, #20]
 556 053c 03F10103 		add	r3, r3, #1
 557 0540 7B61     		str	r3, [r7, #20]
 558              	.L35:
 195:../src/interrupt_defs.cpp **** 		for(iter=0;iter<10;++iter)
 559              		.loc 1 195 0 is_stmt 0 discriminator 1
 560 0542 7B69     		ldr	r3, [r7, #20]
 561 0544 092B     		cmp	r3, #9
 562 0546 CCBF     		ite	gt
 563 0548 0023     		movgt	r3, #0
 564 054a 0123     		movle	r3, #1
 565 054c DBB2     		uxtb	r3, r3
 566 054e 002B     		cmp	r3, #0
 567 0550 E9D1     		bne	.L36
 198:../src/interrupt_defs.cpp **** 		}
 199:../src/interrupt_defs.cpp **** 
 200:../src/interrupt_defs.cpp **** 		GPIO_WriteBit(GPIOB, GPIO_Pin_0, Bit_RESET);
 568              		.loc 1 200 0 is_stmt 1
 569 0552 4FF48060 		mov	r0, #1024
 570 0556 C4F60000 		movt	r0, 18432
 571 055a 4FF00101 		mov	r1, #1
 572 055e 4FF00002 		mov	r2, #0
 573 0562 FFF7FEFF 		bl	GPIO_WriteBit
 201:../src/interrupt_defs.cpp **** 
 202:../src/interrupt_defs.cpp **** 
 203:../src/interrupt_defs.cpp **** 		g.GPIO_Mode = GPIO_Mode_IN;
 574              		.loc 1 203 0
 575 0566 4FF00003 		mov	r3, #0
 576 056a 3B72     		strb	r3, [r7, #8]
 204:../src/interrupt_defs.cpp **** 		g.GPIO_OType = GPIO_OType_OD;
 577              		.loc 1 204 0
 578 056c 4FF00103 		mov	r3, #1
 579 0570 BB72     		strb	r3, [r7, #10]
 205:../src/interrupt_defs.cpp **** 		g.GPIO_Pin = GPIO_Pin_0;
 580              		.loc 1 205 0
 581 0572 4FF00103 		mov	r3, #1
 582 0576 7B60     		str	r3, [r7, #4]
 206:../src/interrupt_defs.cpp **** 		g.GPIO_PuPd = GPIO_PuPd_NOPULL;
 583              		.loc 1 206 0
 584 0578 4FF00003 		mov	r3, #0
 585 057c FB72     		strb	r3, [r7, #11]
 207:../src/interrupt_defs.cpp **** 		g.GPIO_Speed = GPIO_Speed_Level_1;
 586              		.loc 1 207 0
 587 057e 4FF00103 		mov	r3, #1
 588 0582 7B72     		strb	r3, [r7, #9]
 208:../src/interrupt_defs.cpp **** 
 209:../src/interrupt_defs.cpp **** 		GPIO_Init(GPIOB, &g);
 589              		.loc 1 209 0
 590 0584 07F10403 		add	r3, r7, #4
 591 0588 4FF48060 		mov	r0, #1024
 592 058c C4F60000 		movt	r0, 18432
 593 0590 1946     		mov	r1, r3
 594 0592 FFF7FEFF 		bl	GPIO_Init
 210:../src/interrupt_defs.cpp **** 
 211:../src/interrupt_defs.cpp **** 		TIM_SetCounter(TIM2, 0);
 595              		.loc 1 211 0
 596 0596 4FF08040 		mov	r0, #1073741824
 597 059a 4FF00001 		mov	r1, #0
 598 059e FFF7FEFF 		bl	TIM_SetCounter
 212:../src/interrupt_defs.cpp **** 
 213:../src/interrupt_defs.cpp **** 		stage = 0;
 599              		.loc 1 213 0
 600 05a2 40F20003 		movw	r3, #:lower16:stage
 601 05a6 C0F20003 		movt	r3, #:upper16:stage
 602 05aa 4FF00002 		mov	r2, #0
 603 05ae 1A60     		str	r2, [r3, #0]
 214:../src/interrupt_defs.cpp **** 
 215:../src/interrupt_defs.cpp **** 		e.EXTI_Line = EXTI_Line9;
 604              		.loc 1 215 0
 605 05b0 4FF00903 		mov	r3, #9
 606 05b4 FB60     		str	r3, [r7, #12]
 216:../src/interrupt_defs.cpp **** 		e.EXTI_LineCmd = ENABLE;
 607              		.loc 1 216 0
 608 05b6 4FF00103 		mov	r3, #1
 609 05ba BB74     		strb	r3, [r7, #18]
 217:../src/interrupt_defs.cpp **** 		e.EXTI_Mode = EXTI_Mode_Interrupt;
 610              		.loc 1 217 0
 611 05bc 4FF00003 		mov	r3, #0
 612 05c0 3B74     		strb	r3, [r7, #16]
 218:../src/interrupt_defs.cpp **** 		e.EXTI_Trigger = EXTI_Trigger_Rising;
 613              		.loc 1 218 0
 614 05c2 4FF00803 		mov	r3, #8
 615 05c6 7B74     		strb	r3, [r7, #17]
 219:../src/interrupt_defs.cpp **** 
 220:../src/interrupt_defs.cpp **** 		EXTI_Init(&e);
 616              		.loc 1 220 0
 617 05c8 07F10C03 		add	r3, r7, #12
 618 05cc 1846     		mov	r0, r3
 619 05ce FFF7FEFF 		bl	EXTI_Init
 221:../src/interrupt_defs.cpp **** 
 222:../src/interrupt_defs.cpp **** 		NVIC_InitTypeDef nv;
 223:../src/interrupt_defs.cpp **** 
 224:../src/interrupt_defs.cpp **** 		nv.NVIC_IRQChannel = EXTI9_5_IRQn;
 620              		.loc 1 224 0
 621 05d2 4FF01703 		mov	r3, #23
 622 05d6 3B70     		strb	r3, [r7, #0]
 225:../src/interrupt_defs.cpp **** 		nv.NVIC_IRQChannelCmd = ENABLE;
 623              		.loc 1 225 0
 624 05d8 4FF00103 		mov	r3, #1
 625 05dc FB70     		strb	r3, [r7, #3]
 226:../src/interrupt_defs.cpp **** 		nv.NVIC_IRQChannelPreemptionPriority = 0;
 626              		.loc 1 226 0
 627 05de 4FF00003 		mov	r3, #0
 628 05e2 7B70     		strb	r3, [r7, #1]
 227:../src/interrupt_defs.cpp **** 		nv.NVIC_IRQChannelSubPriority = 0;
 629              		.loc 1 227 0
 630 05e4 4FF00003 		mov	r3, #0
 631 05e8 BB70     		strb	r3, [r7, #2]
 228:../src/interrupt_defs.cpp **** 
 229:../src/interrupt_defs.cpp **** 		NVIC_Init(&nv);
 632              		.loc 1 229 0
 633 05ea 3B46     		mov	r3, r7
 634 05ec 1846     		mov	r0, r3
 635 05ee FFF7FEFF 		bl	NVIC_Init
 636              	.LBE3:
 230:../src/interrupt_defs.cpp **** 
 231:../src/interrupt_defs.cpp **** 	}
 637              		.loc 1 231 0
 638 05f2 07F11807 		add	r7, r7, #24
 639 05f6 BD46     		mov	sp, r7
 640 05f8 80BD     		pop	{r7, pc}
 641              		.cfi_endproc
 642              	.LFE112:
 644 05fa 00BF     		.align	2
 645              		.global	TIM6_DAC_IRQHandler
 646              		.thumb
 647              		.thumb_func
 649              	TIM6_DAC_IRQHandler:
 650              	.LFB113:
 232:../src/interrupt_defs.cpp **** 	void TIM6_DAC_IRQHandler(void)
 233:../src/interrupt_defs.cpp **** 	{
 651              		.loc 1 233 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 1, uses_anonymous_args = 0
 655 05fc 80B5     		push	{r7, lr}
 656              	.LCFI6:
 657              		.cfi_def_cfa_offset 8
 658              		.cfi_offset 7, -8
 659              		.cfi_offset 14, -4
 660 05fe 00AF     		add	r7, sp, #0
 661              	.LCFI7:
 662              		.cfi_def_cfa_register 7
 234:../src/interrupt_defs.cpp **** 		TIM_ClearITPendingBit(TIM6, TIM_IT_Update);
 663              		.loc 1 234 0
 664 0600 4FF48050 		mov	r0, #4096
 665 0604 C4F20000 		movt	r0, 16384
 666 0608 4FF00101 		mov	r1, #1
 667 060c FFF7FEFF 		bl	TIM_ClearITPendingBit
 235:../src/interrupt_defs.cpp **** 		if(state == ST_READY)
 668              		.loc 1 235 0
 669 0610 40F20003 		movw	r3, #:lower16:state
 670 0614 C0F20003 		movt	r3, #:upper16:state
 671 0618 1B68     		ldr	r3, [r3, #0]
 672 061a B3F1FF3F 		cmp	r3, #-1
 673 061e 16D1     		bne	.L38
 236:../src/interrupt_defs.cpp **** 		{
 237:../src/interrupt_defs.cpp **** 			GPIO_Write(GPIOE, led_matrix[2] | led_matrix[5]); 	// Two greens
 674              		.loc 1 237 0
 675 0620 40F20003 		movw	r3, #:lower16:led_matrix
 676 0624 C0F20003 		movt	r3, #:upper16:led_matrix
 677 0628 9B68     		ldr	r3, [r3, #8]
 678 062a 9AB2     		uxth	r2, r3
 679 062c 40F20003 		movw	r3, #:lower16:led_matrix
 680 0630 C0F20003 		movt	r3, #:upper16:led_matrix
 681 0634 5B69     		ldr	r3, [r3, #20]
 682 0636 9BB2     		uxth	r3, r3
 683 0638 1343     		orrs	r3, r3, r2
 684 063a 9BB2     		uxth	r3, r3
 685 063c 9BB2     		uxth	r3, r3
 686 063e 4FF48050 		mov	r0, #4096
 687 0642 C4F60000 		movt	r0, 18432
 688 0646 1946     		mov	r1, r3
 689 0648 FFF7FEFF 		bl	GPIO_Write
 690 064c E8E0     		b	.L37
 691              	.L38:
 238:../src/interrupt_defs.cpp **** 		}
 239:../src/interrupt_defs.cpp **** 		else if(state == ST_WANDER)
 692              		.loc 1 239 0
 693 064e 40F20003 		movw	r3, #:lower16:state
 694 0652 C0F20003 		movt	r3, #:upper16:state
 695 0656 1B68     		ldr	r3, [r3, #0]
 696 0658 002B     		cmp	r3, #0
 697 065a 0DD1     		bne	.L40
 240:../src/interrupt_defs.cpp **** 		{
 241:../src/interrupt_defs.cpp **** 			GPIO_Write(GPIOE, led_matrix[6]);					// Two Orange (one's lit via PWM pin for ESC control)
 698              		.loc 1 241 0
 699 065c 40F20003 		movw	r3, #:lower16:led_matrix
 700 0660 C0F20003 		movt	r3, #:upper16:led_matrix
 701 0664 9B69     		ldr	r3, [r3, #24]
 702 0666 9BB2     		uxth	r3, r3
 703 0668 4FF48050 		mov	r0, #4096
 704 066c C4F60000 		movt	r0, 18432
 705 0670 1946     		mov	r1, r3
 706 0672 FFF7FEFF 		bl	GPIO_Write
 707 0676 D3E0     		b	.L37
 708              	.L40:
 242:../src/interrupt_defs.cpp **** 		}
 243:../src/interrupt_defs.cpp **** 		else if(state == ST_HOMING)
 709              		.loc 1 243 0
 710 0678 40F20003 		movw	r3, #:lower16:state
 711 067c C0F20003 		movt	r3, #:upper16:state
 712 0680 1B68     		ldr	r3, [r3, #0]
 713 0682 012B     		cmp	r3, #1
 714 0684 16D1     		bne	.L41
 244:../src/interrupt_defs.cpp **** 		{
 245:../src/interrupt_defs.cpp **** 			GPIO_Write(GPIOE, led_matrix[0] | led_matrix[3]);	// Two orange + Two red
 715              		.loc 1 245 0
 716 0686 40F20003 		movw	r3, #:lower16:led_matrix
 717 068a C0F20003 		movt	r3, #:upper16:led_matrix
 718 068e 1B68     		ldr	r3, [r3, #0]
 719 0690 9AB2     		uxth	r2, r3
 720 0692 40F20003 		movw	r3, #:lower16:led_matrix
 721 0696 C0F20003 		movt	r3, #:upper16:led_matrix
 722 069a DB68     		ldr	r3, [r3, #12]
 723 069c 9BB2     		uxth	r3, r3
 724 069e 1343     		orrs	r3, r3, r2
 725 06a0 9BB2     		uxth	r3, r3
 726 06a2 9BB2     		uxth	r3, r3
 727 06a4 4FF48050 		mov	r0, #4096
 728 06a8 C4F60000 		movt	r0, 18432
 729 06ac 1946     		mov	r1, r3
 730 06ae FFF7FEFF 		bl	GPIO_Write
 731 06b2 B5E0     		b	.L37
 732              	.L41:
 246:../src/interrupt_defs.cpp **** 		}
 247:../src/interrupt_defs.cpp **** 		else if(state == ST_FIREFIGHT)
 733              		.loc 1 247 0
 734 06b4 40F20003 		movw	r3, #:lower16:state
 735 06b8 C0F20003 		movt	r3, #:upper16:state
 736 06bc 1B68     		ldr	r3, [r3, #0]
 737 06be 022B     		cmp	r3, #2
 738 06c0 1ED1     		bne	.L42
 248:../src/interrupt_defs.cpp **** 		{
 249:../src/interrupt_defs.cpp **** 			GPIO_Write(GPIOE, led_matrix[0] | led_matrix[3] | led_matrix[6]);
 739              		.loc 1 249 0
 740 06c2 40F20003 		movw	r3, #:lower16:led_matrix
 741 06c6 C0F20003 		movt	r3, #:upper16:led_matrix
 742 06ca 1B68     		ldr	r3, [r3, #0]
 743 06cc 9AB2     		uxth	r2, r3
 744 06ce 40F20003 		movw	r3, #:lower16:led_matrix
 745 06d2 C0F20003 		movt	r3, #:upper16:led_matrix
 746 06d6 DB68     		ldr	r3, [r3, #12]
 747 06d8 9BB2     		uxth	r3, r3
 748 06da 1343     		orrs	r3, r3, r2
 749 06dc 9AB2     		uxth	r2, r3
 750 06de 40F20003 		movw	r3, #:lower16:led_matrix
 751 06e2 C0F20003 		movt	r3, #:upper16:led_matrix
 752 06e6 9B69     		ldr	r3, [r3, #24]
 753 06e8 9BB2     		uxth	r3, r3
 754 06ea 1343     		orrs	r3, r3, r2
 755 06ec 9BB2     		uxth	r3, r3
 756 06ee 9BB2     		uxth	r3, r3
 757 06f0 4FF48050 		mov	r0, #4096
 758 06f4 C4F60000 		movt	r0, 18432
 759 06f8 1946     		mov	r1, r3
 760 06fa FFF7FEFF 		bl	GPIO_Write
 761 06fe 8FE0     		b	.L37
 762              	.L42:
 250:../src/interrupt_defs.cpp **** 		}
 251:../src/interrupt_defs.cpp **** 		else if (state == ST_CANDLE_BLOWOUT)
 763              		.loc 1 251 0
 764 0700 40F20003 		movw	r3, #:lower16:state
 765 0704 C0F20003 		movt	r3, #:upper16:state
 766 0708 1B68     		ldr	r3, [r3, #0]
 767 070a 032B     		cmp	r3, #3
 768 070c 3ED1     		bne	.L43
 252:../src/interrupt_defs.cpp **** 		{
 253:../src/interrupt_defs.cpp **** 			GPIO_Write(GPIOE, led_matrix[6] | led_matrix[0] | led_matrix[1] | led_matrix[2] | led_matrix[3]
 769              		.loc 1 253 0
 770 070e 40F20003 		movw	r3, #:lower16:led_matrix
 771 0712 C0F20003 		movt	r3, #:upper16:led_matrix
 772 0716 9B69     		ldr	r3, [r3, #24]
 254:../src/interrupt_defs.cpp ****                                             | led_matrix[4] | led_matrix[5]); // All LED's
 773              		.loc 1 254 0
 774 0718 9AB2     		uxth	r2, r3
 253:../src/interrupt_defs.cpp **** 			GPIO_Write(GPIOE, led_matrix[6] | led_matrix[0] | led_matrix[1] | led_matrix[2] | led_matrix[3]
 775              		.loc 1 253 0
 776 071a 40F20003 		movw	r3, #:lower16:led_matrix
 777 071e C0F20003 		movt	r3, #:upper16:led_matrix
 778 0722 1B68     		ldr	r3, [r3, #0]
 779              		.loc 1 254 0
 780 0724 9BB2     		uxth	r3, r3
 781 0726 1343     		orrs	r3, r3, r2
 782 0728 9AB2     		uxth	r2, r3
 253:../src/interrupt_defs.cpp **** 			GPIO_Write(GPIOE, led_matrix[6] | led_matrix[0] | led_matrix[1] | led_matrix[2] | led_matrix[3]
 783              		.loc 1 253 0
 784 072a 40F20003 		movw	r3, #:lower16:led_matrix
 785 072e C0F20003 		movt	r3, #:upper16:led_matrix
 786 0732 5B68     		ldr	r3, [r3, #4]
 787              		.loc 1 254 0
 788 0734 9BB2     		uxth	r3, r3
 789 0736 1343     		orrs	r3, r3, r2
 790 0738 9AB2     		uxth	r2, r3
 253:../src/interrupt_defs.cpp **** 			GPIO_Write(GPIOE, led_matrix[6] | led_matrix[0] | led_matrix[1] | led_matrix[2] | led_matrix[3]
 791              		.loc 1 253 0
 792 073a 40F20003 		movw	r3, #:lower16:led_matrix
 793 073e C0F20003 		movt	r3, #:upper16:led_matrix
 794 0742 9B68     		ldr	r3, [r3, #8]
 795              		.loc 1 254 0
 796 0744 9BB2     		uxth	r3, r3
 797 0746 1343     		orrs	r3, r3, r2
 798 0748 9AB2     		uxth	r2, r3
 253:../src/interrupt_defs.cpp **** 			GPIO_Write(GPIOE, led_matrix[6] | led_matrix[0] | led_matrix[1] | led_matrix[2] | led_matrix[3]
 799              		.loc 1 253 0
 800 074a 40F20003 		movw	r3, #:lower16:led_matrix
 801 074e C0F20003 		movt	r3, #:upper16:led_matrix
 802 0752 DB68     		ldr	r3, [r3, #12]
 803              		.loc 1 254 0
 804 0754 9BB2     		uxth	r3, r3
 805 0756 1343     		orrs	r3, r3, r2
 806 0758 9AB2     		uxth	r2, r3
 807 075a 40F20003 		movw	r3, #:lower16:led_matrix
 808 075e C0F20003 		movt	r3, #:upper16:led_matrix
 809 0762 1B69     		ldr	r3, [r3, #16]
 810 0764 9BB2     		uxth	r3, r3
 811 0766 1343     		orrs	r3, r3, r2
 812 0768 9AB2     		uxth	r2, r3
 813 076a 40F20003 		movw	r3, #:lower16:led_matrix
 814 076e C0F20003 		movt	r3, #:upper16:led_matrix
 815 0772 5B69     		ldr	r3, [r3, #20]
 816 0774 9BB2     		uxth	r3, r3
 817 0776 1343     		orrs	r3, r3, r2
 818 0778 9BB2     		uxth	r3, r3
 819 077a 9BB2     		uxth	r3, r3
 820 077c 4FF48050 		mov	r0, #4096
 821 0780 C4F60000 		movt	r0, 18432
 822 0784 1946     		mov	r1, r3
 823 0786 FFF7FEFF 		bl	GPIO_Write
 824 078a 49E0     		b	.L37
 825              	.L43:
 255:../src/interrupt_defs.cpp **** 		}
 256:../src/interrupt_defs.cpp **** 		else if (state == ST_DONE)
 826              		.loc 1 256 0
 827 078c 40F20003 		movw	r3, #:lower16:state
 828 0790 C0F20003 		movt	r3, #:upper16:state
 829 0794 1B68     		ldr	r3, [r3, #0]
 830 0796 042B     		cmp	r3, #4
 831 0798 42D1     		bne	.L37
 257:../src/interrupt_defs.cpp **** 		{
 258:../src/interrupt_defs.cpp **** 			++led_iter;
 832              		.loc 1 258 0
 833 079a 40F20003 		movw	r3, #:lower16:led_iter
 834 079e C0F20003 		movt	r3, #:upper16:led_iter
 835 07a2 1B68     		ldr	r3, [r3, #0]
 836 07a4 03F10102 		add	r2, r3, #1
 837 07a8 40F20003 		movw	r3, #:lower16:led_iter
 838 07ac C0F20003 		movt	r3, #:upper16:led_iter
 839 07b0 1A60     		str	r2, [r3, #0]
 259:../src/interrupt_defs.cpp **** 			GPIO_Write(GPIOE, led_matrix[led_iter] | led_matrix[6-led_iter]);
 840              		.loc 1 259 0
 841 07b2 40F20003 		movw	r3, #:lower16:led_iter
 842 07b6 C0F20003 		movt	r3, #:upper16:led_iter
 843 07ba 1A68     		ldr	r2, [r3, #0]
 844 07bc 40F20003 		movw	r3, #:lower16:led_matrix
 845 07c0 C0F20003 		movt	r3, #:upper16:led_matrix
 846 07c4 53F82230 		ldr	r3, [r3, r2, lsl #2]
 847 07c8 9AB2     		uxth	r2, r3
 848 07ca 40F20003 		movw	r3, #:lower16:led_iter
 849 07ce C0F20003 		movt	r3, #:upper16:led_iter
 850 07d2 1B68     		ldr	r3, [r3, #0]
 851 07d4 C3F10601 		rsb	r1, r3, #6
 852 07d8 40F20003 		movw	r3, #:lower16:led_matrix
 853 07dc C0F20003 		movt	r3, #:upper16:led_matrix
 854 07e0 53F82130 		ldr	r3, [r3, r1, lsl #2]
 855 07e4 9BB2     		uxth	r3, r3
 856 07e6 1343     		orrs	r3, r3, r2
 857 07e8 9BB2     		uxth	r3, r3
 858 07ea 9BB2     		uxth	r3, r3
 859 07ec 4FF48050 		mov	r0, #4096
 860 07f0 C4F60000 		movt	r0, 18432
 861 07f4 1946     		mov	r1, r3
 862 07f6 FFF7FEFF 		bl	GPIO_Write
 260:../src/interrupt_defs.cpp **** 			if(led_iter > 6)
 863              		.loc 1 260 0
 864 07fa 40F20003 		movw	r3, #:lower16:led_iter
 865 07fe C0F20003 		movt	r3, #:upper16:led_iter
 866 0802 1B68     		ldr	r3, [r3, #0]
 867 0804 062B     		cmp	r3, #6
 868 0806 D4BF     		ite	le
 869 0808 0023     		movle	r3, #0
 870 080a 0123     		movgt	r3, #1
 871 080c DBB2     		uxtb	r3, r3
 872 080e 002B     		cmp	r3, #0
 873 0810 06D0     		beq	.L37
 261:../src/interrupt_defs.cpp **** 			{
 262:../src/interrupt_defs.cpp **** 				led_iter = 0;
 874              		.loc 1 262 0
 875 0812 40F20003 		movw	r3, #:lower16:led_iter
 876 0816 C0F20003 		movt	r3, #:upper16:led_iter
 877 081a 4FF00002 		mov	r2, #0
 878 081e 1A60     		str	r2, [r3, #0]
 879              	.L37:
 263:../src/interrupt_defs.cpp **** 			}
 264:../src/interrupt_defs.cpp **** 			/*
 265:../src/interrupt_defs.cpp **** 			if(led_iter == 3)
 266:../src/interrupt_defs.cpp **** 			{
 267:../src/interrupt_defs.cpp **** 				led_iter = 0;
 268:../src/interrupt_defs.cpp **** 				if(leds_on == 0)
 269:../src/interrupt_defs.cpp **** 				{
 270:../src/interrupt_defs.cpp **** 					GPIO_Write(GPIOE, 0); // All LED's
 271:../src/interrupt_defs.cpp **** 				}
 272:../src/interrupt_defs.cpp **** 				else
 273:../src/interrupt_defs.cpp **** 				{
 274:../src/interrupt_defs.cpp **** 					GPIO_Write(GPIOE, led_matrix[6] | led_matrix[0] | led_matrix[1] | led_matrix[2] | led_matrix[3
 275:../src/interrupt_defs.cpp **** 		                                            | led_matrix[4] | led_matrix[5]); // All LED's
 276:../src/interrupt_defs.cpp **** 				}
 277:../src/interrupt_defs.cpp **** 				leds_on = (leds_on == 1) ? leds_on = 0 : leds_on = 1;
 278:../src/interrupt_defs.cpp **** 			}
 279:../src/interrupt_defs.cpp **** 			*/
 280:../src/interrupt_defs.cpp **** 		}
 281:../src/interrupt_defs.cpp **** 	}
 880              		.loc 1 281 0
 881 0820 80BD     		pop	{r7, pc}
 882              		.cfi_endproc
 883              	.LFE113:
 885 0822 00BF     		.align	2
 886              		.global	ADC1_2_IRQHandler
 887              		.thumb
 888              		.thumb_func
 890              	ADC1_2_IRQHandler:
 891              	.LFB114:
 282:../src/interrupt_defs.cpp **** 	void ADC1_2_IRQHandler(void)
 283:../src/interrupt_defs.cpp **** 	{
 892              		.loc 1 283 0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 0
 895              		@ frame_needed = 1, uses_anonymous_args = 0
 896 0824 80B5     		push	{r7, lr}
 897              	.LCFI8:
 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 7, -8
 900              		.cfi_offset 14, -4
 901 0826 00AF     		add	r7, sp, #0
 902              	.LCFI9:
 903              		.cfi_def_cfa_register 7
 284:../src/interrupt_defs.cpp **** 		if(ADC_GetITStatus(ADC1, ADC_IT_EOC) == SET)
 904              		.loc 1 284 0
 905 0828 4FF0A040 		mov	r0, #1342177280
 906 082c 4FF00401 		mov	r1, #4
 907 0830 FFF7FEFF 		bl	ADC_GetITStatus
 908 0834 0346     		mov	r3, r0
 909 0836 012B     		cmp	r3, #1
 910 0838 14BF     		ite	ne
 911 083a 0023     		movne	r3, #0
 912 083c 0123     		moveq	r3, #1
 913 083e DBB2     		uxtb	r3, r3
 914 0840 002B     		cmp	r3, #0
 915 0842 10D0     		beq	.L44
 285:../src/interrupt_defs.cpp **** 		{
 286:../src/interrupt_defs.cpp **** 			adcval = ADC_GetConversionValue(ADC1);
 916              		.loc 1 286 0
 917 0844 4FF0A040 		mov	r0, #1342177280
 918 0848 FFF7FEFF 		bl	ADC_GetConversionValue
 919 084c 0346     		mov	r3, r0
 920 084e 1A46     		mov	r2, r3
 921 0850 40F20003 		movw	r3, #:lower16:adcval
 922 0854 C0F20003 		movt	r3, #:upper16:adcval
 923 0858 1A60     		str	r2, [r3, #0]
 287:../src/interrupt_defs.cpp **** 			ADC_ClearITPendingBit(ADC1, ADC_IT_EOC);
 924              		.loc 1 287 0
 925 085a 4FF0A040 		mov	r0, #1342177280
 926 085e 4FF00401 		mov	r1, #4
 927 0862 FFF7FEFF 		bl	ADC_ClearITPendingBit
 928              	.L44:
 288:../src/interrupt_defs.cpp **** 		}
 289:../src/interrupt_defs.cpp **** 	}
 929              		.loc 1 289 0
 930 0866 80BD     		pop	{r7, pc}
 931              		.cfi_endproc
 932              	.LFE114:
 934              		.align	2
 935              		.global	DMA1_Channel1_IRQHandler
 936              		.thumb
 937              		.thumb_func
 939              	DMA1_Channel1_IRQHandler:
 940              	.LFB115:
 290:../src/interrupt_defs.cpp **** 
 291:../src/interrupt_defs.cpp **** 	void DMA1_Channel1_IRQHandler(void)
 292:../src/interrupt_defs.cpp **** 	{
 941              		.loc 1 292 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 1, uses_anonymous_args = 0
 945 0868 80B5     		push	{r7, lr}
 946              	.LCFI10:
 947              		.cfi_def_cfa_offset 8
 948              		.cfi_offset 7, -8
 949              		.cfi_offset 14, -4
 950 086a 00AF     		add	r7, sp, #0
 951              	.LCFI11:
 952              		.cfi_def_cfa_register 7
 293:../src/interrupt_defs.cpp **** 		DMA_ClearITPendingBit(DMA1_IT_TC1);
 953              		.loc 1 293 0
 954 086c 4FF00200 		mov	r0, #2
 955 0870 FFF7FEFF 		bl	DMA_ClearITPendingBit
 294:../src/interrupt_defs.cpp **** 		new_data = 1;
 956              		.loc 1 294 0
 957 0874 40F20003 		movw	r3, #:lower16:new_data
 958 0878 C0F20003 		movt	r3, #:upper16:new_data
 959 087c 4FF00102 		mov	r2, #1
 960 0880 1A60     		str	r2, [r3, #0]
 295:../src/interrupt_defs.cpp **** 	}
 961              		.loc 1 295 0
 962 0882 80BD     		pop	{r7, pc}
 963              		.cfi_endproc
 964              	.LFE115:
 966              		.align	2
 967              		.global	DMA2_Channel1_IRQHandler
 968              		.thumb
 969              		.thumb_func
 971              	DMA2_Channel1_IRQHandler:
 972              	.LFB116:
 296:../src/interrupt_defs.cpp **** 
 297:../src/interrupt_defs.cpp **** 	void DMA2_Channel1_IRQHandler(void)
 298:../src/interrupt_defs.cpp **** 	{
 973              		.loc 1 298 0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 0
 976              		@ frame_needed = 1, uses_anonymous_args = 0
 977 0884 80B5     		push	{r7, lr}
 978              	.LCFI12:
 979              		.cfi_def_cfa_offset 8
 980              		.cfi_offset 7, -8
 981              		.cfi_offset 14, -4
 982 0886 00AF     		add	r7, sp, #0
 983              	.LCFI13:
 984              		.cfi_def_cfa_register 7
 299:../src/interrupt_defs.cpp **** 		DMA_ClearITPendingBit(DMA2_IT_TC1);
 985              		.loc 1 299 0
 986 0888 4FF00200 		mov	r0, #2
 987 088c C1F20000 		movt	r0, 4096
 988 0890 FFF7FEFF 		bl	DMA_ClearITPendingBit
 300:../src/interrupt_defs.cpp **** 		adc2_new_data = 1;
 989              		.loc 1 300 0
 990 0894 40F20003 		movw	r3, #:lower16:adc2_new_data
 991 0898 C0F20003 		movt	r3, #:upper16:adc2_new_data
 992 089c 4FF00102 		mov	r2, #1
 993 08a0 1A70     		strb	r2, [r3, #0]
 301:../src/interrupt_defs.cpp **** 	}
 994              		.loc 1 301 0
 995 08a2 80BD     		pop	{r7, pc}
 996              		.cfi_endproc
 997              	.LFE116:
 999              		.align	2
 1000              		.global	ADC3_IRQHandler
 1001              		.thumb
 1002              		.thumb_func
 1004              	ADC3_IRQHandler:
 1005              	.LFB117:
 302:../src/interrupt_defs.cpp **** 
 303:../src/interrupt_defs.cpp **** 	void ADC3_IRQHandler(void)
 304:../src/interrupt_defs.cpp **** 	{
 1006              		.loc 1 304 0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 8
 1009              		@ frame_needed = 1, uses_anonymous_args = 0
 1010 08a4 80B5     		push	{r7, lr}
 1011              	.LCFI14:
 1012              		.cfi_def_cfa_offset 8
 1013              		.cfi_offset 7, -8
 1014              		.cfi_offset 14, -4
 1015 08a6 82B0     		sub	sp, sp, #8
 1016              	.LCFI15:
 1017              		.cfi_def_cfa_offset 16
 1018 08a8 00AF     		add	r7, sp, #0
 1019              	.LCFI16:
 1020              		.cfi_def_cfa_register 7
 1021              	.LBB4:
 305:../src/interrupt_defs.cpp **** 		int i = 0;
 1022              		.loc 1 305 0
 1023 08aa 4FF00003 		mov	r3, #0
 1024 08ae 7B60     		str	r3, [r7, #4]
 306:../src/interrupt_defs.cpp **** 		int sum = 0;
 1025              		.loc 1 306 0
 1026 08b0 4FF00003 		mov	r3, #0
 1027 08b4 3B60     		str	r3, [r7, #0]
 307:../src/interrupt_defs.cpp **** 		if(ADC_GetITStatus(ADC3, ADC_IT_AWD1) != RESET)
 1028              		.loc 1 307 0
 1029 08b6 4FF48060 		mov	r0, #1024
 1030 08ba C5F20000 		movt	r0, 20480
 1031 08be 4FF08001 		mov	r1, #128
 1032 08c2 FFF7FEFF 		bl	ADC_GetITStatus
 1033 08c6 0346     		mov	r3, r0
 1034 08c8 002B     		cmp	r3, #0
 1035 08ca 0CBF     		ite	eq
 1036 08cc 0023     		moveq	r3, #0
 1037 08ce 0123     		movne	r3, #1
 1038 08d0 DBB2     		uxtb	r3, r3
 1039 08d2 002B     		cmp	r3, #0
 1040 08d4 38D0     		beq	.L49
 308:../src/interrupt_defs.cpp **** 		{
 309:../src/interrupt_defs.cpp **** 			ADC_ClearITPendingBit(ADC3, ADC_IT_AWD1);
 1041              		.loc 1 309 0
 1042 08d6 4FF48060 		mov	r0, #1024
 1043 08da C5F20000 		movt	r0, 20480
 1044 08de 4FF08001 		mov	r1, #128
 1045 08e2 FFF7FEFF 		bl	ADC_ClearITPendingBit
 310:../src/interrupt_defs.cpp **** 			for(i=0; i<35;++i)
 1046              		.loc 1 310 0
 1047 08e6 4FF00003 		mov	r3, #0
 1048 08ea 7B60     		str	r3, [r7, #4]
 1049 08ec 0DE0     		b	.L50
 1050              	.L51:
 311:../src/interrupt_defs.cpp **** 			{
 312:../src/interrupt_defs.cpp **** 				sum += ADC_GetConversionValue(ADC3);
 1051              		.loc 1 312 0 discriminator 2
 1052 08ee 4FF48060 		mov	r0, #1024
 1053 08f2 C5F20000 		movt	r0, 20480
 1054 08f6 FFF7FEFF 		bl	ADC_GetConversionValue
 1055 08fa 0346     		mov	r3, r0
 1056 08fc 3A68     		ldr	r2, [r7, #0]
 1057 08fe D318     		adds	r3, r2, r3
 1058 0900 3B60     		str	r3, [r7, #0]
 310:../src/interrupt_defs.cpp **** 			for(i=0; i<35;++i)
 1059              		.loc 1 310 0 discriminator 2
 1060 0902 7B68     		ldr	r3, [r7, #4]
 1061 0904 03F10103 		add	r3, r3, #1
 1062 0908 7B60     		str	r3, [r7, #4]
 1063              	.L50:
 310:../src/interrupt_defs.cpp **** 			for(i=0; i<35;++i)
 1064              		.loc 1 310 0 is_stmt 0 discriminator 1
 1065 090a 7B68     		ldr	r3, [r7, #4]
 1066 090c 222B     		cmp	r3, #34
 1067 090e CCBF     		ite	gt
 1068 0910 0023     		movgt	r3, #0
 1069 0912 0123     		movle	r3, #1
 1070 0914 DBB2     		uxtb	r3, r3
 1071 0916 002B     		cmp	r3, #0
 1072 0918 E9D1     		bne	.L51
 313:../src/interrupt_defs.cpp **** 			}
 314:../src/interrupt_defs.cpp **** 			if((float)sum/float(35) > 2048)
 1073              		.loc 1 314 0 is_stmt 1
 1074 091a D7ED007A 		flds	s15, [r7, #0]	@ int
 1075 091e B8EEE77A 		fsitos	s14, s15
 1076 0922 DFED1B7A 		flds	s15, .L55
 1077 0926 87EE277A 		fdivs	s14, s14, s15
 1078 092a DFED1A7A 		flds	s15, .L55+4
 1079 092e B4EEE77A 		fcmpes	s14, s15
 1080 0932 F1EE10FA 		fmstat
 1081 0936 26DD     		ble	.L48
 1082              	.L54:
 315:../src/interrupt_defs.cpp **** 			{
 316:../src/interrupt_defs.cpp **** 				adc3_awd1 = 1;
 1083              		.loc 1 316 0
 1084 0938 40F20003 		movw	r3, #:lower16:adc3_awd1
 1085 093c C0F20003 		movt	r3, #:upper16:adc3_awd1
 1086 0940 4FF00102 		mov	r2, #1
 1087 0944 1A70     		strb	r2, [r3, #0]
 1088 0946 1EE0     		b	.L48
 1089              	.L49:
 317:../src/interrupt_defs.cpp **** 			}
 318:../src/interrupt_defs.cpp **** 		}
 319:../src/interrupt_defs.cpp **** 		else if (ADC_GetITStatus(ADC3, ADC_IT_AWD2) != RESET)
 1090              		.loc 1 319 0
 1091 0948 4FF48060 		mov	r0, #1024
 1092 094c C5F20000 		movt	r0, 20480
 1093 0950 4FF48071 		mov	r1, #256
 1094 0954 FFF7FEFF 		bl	ADC_GetITStatus
 1095 0958 0346     		mov	r3, r0
 1096 095a 002B     		cmp	r3, #0
 1097 095c 0CBF     		ite	eq
 1098 095e 0023     		moveq	r3, #0
 1099 0960 0123     		movne	r3, #1
 1100 0962 DBB2     		uxtb	r3, r3
 1101 0964 002B     		cmp	r3, #0
 1102 0966 0ED0     		beq	.L48
 320:../src/interrupt_defs.cpp **** 		{
 321:../src/interrupt_defs.cpp **** 			ADC_ClearITPendingBit(ADC3, ADC_IT_AWD2);
 1103              		.loc 1 321 0
 1104 0968 4FF48060 		mov	r0, #1024
 1105 096c C5F20000 		movt	r0, 20480
 1106 0970 4FF48071 		mov	r1, #256
 1107 0974 FFF7FEFF 		bl	ADC_ClearITPendingBit
 322:../src/interrupt_defs.cpp **** 			adc3_awd2 = 1;
 1108              		.loc 1 322 0
 1109 0978 40F20003 		movw	r3, #:lower16:adc3_awd2
 1110 097c C0F20003 		movt	r3, #:upper16:adc3_awd2
 1111 0980 4FF00102 		mov	r2, #1
 1112 0984 1A70     		strb	r2, [r3, #0]
 1113              	.L48:
 1114              	.LBE4:
 323:../src/interrupt_defs.cpp **** 		}
 324:../src/interrupt_defs.cpp **** 	}
 1115              		.loc 1 324 0
 1116 0986 07F10807 		add	r7, r7, #8
 1117 098a BD46     		mov	sp, r7
 1118 098c 80BD     		pop	{r7, pc}
 1119              	.L56:
 1120 098e 00BF     		.align	2
 1121              	.L55:
 1122 0990 00000C42 		.word	1108082688
 1123 0994 00000045 		.word	1157627904
 1124              		.cfi_endproc
 1125              	.LFE117:
 1127              		.align	2
 1128              		.global	EXTI9_5_IRQHandler
 1129              		.thumb
 1130              		.thumb_func
 1132              	EXTI9_5_IRQHandler:
 1133              	.LFB118:
 325:../src/interrupt_defs.cpp **** 
 326:../src/interrupt_defs.cpp **** 	void EXTI9_5_IRQHandler(void)//EXTI5_IRQHandler(void)
 327:../src/interrupt_defs.cpp **** 	{
 1134              		.loc 1 327 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 16
 1137              		@ frame_needed = 1, uses_anonymous_args = 0
 1138 0998 80B5     		push	{r7, lr}
 1139              	.LCFI17:
 1140              		.cfi_def_cfa_offset 8
 1141              		.cfi_offset 7, -8
 1142              		.cfi_offset 14, -4
 1143 099a 84B0     		sub	sp, sp, #16
 1144              	.LCFI18:
 1145              		.cfi_def_cfa_offset 24
 1146 099c 00AF     		add	r7, sp, #0
 1147              	.LCFI19:
 1148              		.cfi_def_cfa_register 7
 1149              	.LBB5:
 328:../src/interrupt_defs.cpp **** 		EXTI_ClearITPendingBit(EXTI_Line9);
 1150              		.loc 1 328 0
 1151 099e 4FF00900 		mov	r0, #9
 1152 09a2 FFF7FEFF 		bl	EXTI_ClearITPendingBit
 1153              	.LBB6:
 329:../src/interrupt_defs.cpp **** 		if(stage == 0)
 1154              		.loc 1 329 0
 1155 09a6 40F20003 		movw	r3, #:lower16:stage
 1156 09aa C0F20003 		movt	r3, #:upper16:stage
 1157 09ae 1B68     		ldr	r3, [r3, #0]
 1158 09b0 002B     		cmp	r3, #0
 1159 09b2 24D1     		bne	.L58
 1160              	.LBB7:
 330:../src/interrupt_defs.cpp **** 		{
 331:../src/interrupt_defs.cpp **** 			TIM_SetCounter(TIM2, 0);
 1161              		.loc 1 331 0
 1162 09b4 4FF08040 		mov	r0, #1073741824
 1163 09b8 4FF00001 		mov	r1, #0
 1164 09bc FFF7FEFF 		bl	TIM_SetCounter
 332:../src/interrupt_defs.cpp **** 			TIM_Cmd(TIM2, ENABLE);
 1165              		.loc 1 332 0
 1166 09c0 4FF08040 		mov	r0, #1073741824
 1167 09c4 4FF00101 		mov	r1, #1
 1168 09c8 FFF7FEFF 		bl	TIM_Cmd
 333:../src/interrupt_defs.cpp **** 
 334:../src/interrupt_defs.cpp **** 			EXTI_InitTypeDef e;
 335:../src/interrupt_defs.cpp **** 
 336:../src/interrupt_defs.cpp **** 			e.EXTI_Line = EXTI_Line9;
 1169              		.loc 1 336 0
 1170 09cc 4FF00903 		mov	r3, #9
 1171 09d0 BB60     		str	r3, [r7, #8]
 337:../src/interrupt_defs.cpp **** 			e.EXTI_LineCmd = ENABLE;
 1172              		.loc 1 337 0
 1173 09d2 4FF00103 		mov	r3, #1
 1174 09d6 BB73     		strb	r3, [r7, #14]
 338:../src/interrupt_defs.cpp **** 			e.EXTI_Mode = EXTI_Mode_Interrupt;
 1175              		.loc 1 338 0
 1176 09d8 4FF00003 		mov	r3, #0
 1177 09dc 3B73     		strb	r3, [r7, #12]
 339:../src/interrupt_defs.cpp **** 			e.EXTI_Trigger = EXTI_Trigger_Falling;
 1178              		.loc 1 339 0
 1179 09de 4FF00C03 		mov	r3, #12
 1180 09e2 7B73     		strb	r3, [r7, #13]
 340:../src/interrupt_defs.cpp **** 
 341:../src/interrupt_defs.cpp **** 			EXTI_Init(&e);
 1181              		.loc 1 341 0
 1182 09e4 07F10803 		add	r3, r7, #8
 1183 09e8 1846     		mov	r0, r3
 1184 09ea FFF7FEFF 		bl	EXTI_Init
 342:../src/interrupt_defs.cpp **** 
 343:../src/interrupt_defs.cpp **** 			stage = 1;
 1185              		.loc 1 343 0
 1186 09ee 40F20003 		movw	r3, #:lower16:stage
 1187 09f2 C0F20003 		movt	r3, #:upper16:stage
 1188 09f6 4FF00102 		mov	r2, #1
 1189 09fa 1A60     		str	r2, [r3, #0]
 1190 09fc 2FE0     		b	.L57
 1191              	.L58:
 1192              	.LBE7:
 1193              	.LBB8:
 1194              	.LBB9:
 344:../src/interrupt_defs.cpp **** 			return;
 345:../src/interrupt_defs.cpp **** 		}
 346:../src/interrupt_defs.cpp **** 		else if(stage == 1)
 1195              		.loc 1 346 0
 1196 09fe 40F20003 		movw	r3, #:lower16:stage
 1197 0a02 C0F20003 		movt	r3, #:upper16:stage
 1198 0a06 1B68     		ldr	r3, [r3, #0]
 1199 0a08 012B     		cmp	r3, #1
 1200 0a0a 28D1     		bne	.L57
 1201              	.LBB10:
 347:../src/interrupt_defs.cpp **** 		{
 348:../src/interrupt_defs.cpp **** 			count = TIM_GetCounter(TIM2);
 1202              		.loc 1 348 0
 1203 0a0c 4FF08040 		mov	r0, #1073741824
 1204 0a10 FFF7FEFF 		bl	TIM_GetCounter
 1205 0a14 0346     		mov	r3, r0
 1206 0a16 1A46     		mov	r2, r3
 1207 0a18 40F20003 		movw	r3, #:lower16:count
 1208 0a1c C0F20003 		movt	r3, #:upper16:count
 1209 0a20 1A60     		str	r2, [r3, #0]
 349:../src/interrupt_defs.cpp **** 			TIM_Cmd(TIM2, DISABLE);
 1210              		.loc 1 349 0
 1211 0a22 4FF08040 		mov	r0, #1073741824
 1212 0a26 4FF00001 		mov	r1, #0
 1213 0a2a FFF7FEFF 		bl	TIM_Cmd
 350:../src/interrupt_defs.cpp **** 
 351:../src/interrupt_defs.cpp **** 			NVIC_InitTypeDef nv;
 352:../src/interrupt_defs.cpp **** 
 353:../src/interrupt_defs.cpp **** 			nv.NVIC_IRQChannel = EXTI9_5_IRQn;
 1214              		.loc 1 353 0
 1215 0a2e 4FF01703 		mov	r3, #23
 1216 0a32 3B71     		strb	r3, [r7, #4]
 354:../src/interrupt_defs.cpp **** 			nv.NVIC_IRQChannelCmd = DISABLE;
 1217              		.loc 1 354 0
 1218 0a34 4FF00003 		mov	r3, #0
 1219 0a38 FB71     		strb	r3, [r7, #7]
 355:../src/interrupt_defs.cpp **** 			nv.NVIC_IRQChannelPreemptionPriority = 0;
 1220              		.loc 1 355 0
 1221 0a3a 4FF00003 		mov	r3, #0
 1222 0a3e 7B71     		strb	r3, [r7, #5]
 356:../src/interrupt_defs.cpp **** 			nv.NVIC_IRQChannelSubPriority = 0;
 1223              		.loc 1 356 0
 1224 0a40 4FF00003 		mov	r3, #0
 1225 0a44 BB71     		strb	r3, [r7, #6]
 357:../src/interrupt_defs.cpp **** 
 358:../src/interrupt_defs.cpp **** 			NVIC_Init(&nv);
 1226              		.loc 1 358 0
 1227 0a46 07F10403 		add	r3, r7, #4
 1228 0a4a 1846     		mov	r0, r3
 1229 0a4c FFF7FEFF 		bl	NVIC_Init
 359:../src/interrupt_defs.cpp **** 
 360:../src/interrupt_defs.cpp **** 			stage = 0;
 1230              		.loc 1 360 0
 1231 0a50 40F20003 		movw	r3, #:lower16:stage
 1232 0a54 C0F20003 		movt	r3, #:upper16:stage
 1233 0a58 4FF00002 		mov	r2, #0
 1234 0a5c 1A60     		str	r2, [r3, #0]
 1235              	.L57:
 1236              	.LBE10:
 1237              	.LBE9:
 1238              	.LBE8:
 1239              	.LBE6:
 1240              	.LBE5:
 361:../src/interrupt_defs.cpp **** 			return;
 362:../src/interrupt_defs.cpp **** 		}
 363:../src/interrupt_defs.cpp **** 	}
 1241              		.loc 1 363 0
 1242 0a5e 07F11007 		add	r7, r7, #16
 1243 0a62 BD46     		mov	sp, r7
 1244 0a64 80BD     		pop	{r7, pc}
 1245              		.cfi_endproc
 1246              	.LFE118:
 1248              		.global	__aeabi_f2d
 1249 0a66 00BF     		.align	2
 1250              		.global	update_pid
 1251              		.thumb
 1252              		.thumb_func
 1254              	update_pid:
 1255              	.LFB119:
 364:../src/interrupt_defs.cpp **** 
 365:../src/interrupt_defs.cpp **** 	void update_pid(void)
 366:../src/interrupt_defs.cpp **** 	{
 1256              		.loc 1 366 0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 8
 1259              		@ frame_needed = 1, uses_anonymous_args = 0
 1260 0a68 80B5     		push	{r7, lr}
 1261              	.LCFI20:
 1262              		.cfi_def_cfa_offset 8
 1263              		.cfi_offset 7, -8
 1264              		.cfi_offset 14, -4
 1265 0a6a 82B0     		sub	sp, sp, #8
 1266              	.LCFI21:
 1267              		.cfi_def_cfa_offset 16
 1268 0a6c 00AF     		add	r7, sp, #0
 1269              	.LCFI22:
 1270              		.cfi_def_cfa_register 7
 1271              	.LBB11:
 367:../src/interrupt_defs.cpp **** 		int i = 0;
 1272              		.loc 1 367 0
 1273 0a6e 4FF00003 		mov	r3, #0
 1274 0a72 7B60     		str	r3, [r7, #4]
 368:../src/interrupt_defs.cpp **** 		float mtr_out = 0.50f;
 1275              		.loc 1 368 0
 1276 0a74 4FF07C53 		mov	r3, #1056964608
 1277 0a78 3B60     		str	r3, [r7, #0]	@ float
 369:../src/interrupt_defs.cpp **** 		d_front = ((float)count*(float)0.5*(float)K_ULTRASONIC);
 1278              		.loc 1 369 0
 1279 0a7a 40F20003 		movw	r3, #:lower16:count
 1280 0a7e C0F20003 		movt	r3, #:upper16:count
 1281 0a82 D3ED007A 		flds	s15, [r3, #0]	@ int
 1282 0a86 B8EEE77A 		fsitos	s14, s15
 1283 0a8a F6EE007A 		fconsts	s15, #96
 1284 0a8e 27EE277A 		fmuls	s14, s14, s15
 1285 0a92 DFEDE57A 		flds	s15, .L145+8
 1286 0a96 67EE277A 		fmuls	s15, s14, s15
 1287 0a9a 40F20003 		movw	r3, #:lower16:d_front
 1288 0a9e C0F20003 		movt	r3, #:upper16:d_front
 1289 0aa2 C3ED007A 		fsts	s15, [r3, #0]
 370:../src/interrupt_defs.cpp **** 
 371:../src/interrupt_defs.cpp **** 		if(state == ST_HOMING)
 1290              		.loc 1 371 0
 1291 0aa6 40F20003 		movw	r3, #:lower16:state
 1292 0aaa C0F20003 		movt	r3, #:upper16:state
 1293 0aae 1B68     		ldr	r3, [r3, #0]
 1294 0ab0 012B     		cmp	r3, #1
 1295 0ab2 40F03281 		bne	.L61
 372:../src/interrupt_defs.cpp **** 		{
 373:../src/interrupt_defs.cpp **** 			err = (float)(1.0) * (float)((int)adcData[0] - (int)adc2_data[2]);
 1296              		.loc 1 373 0
 1297 0ab6 40F20003 		movw	r3, #:lower16:adcData
 1298 0aba C0F20003 		movt	r3, #:upper16:adcData
 1299 0abe 1B68     		ldr	r3, [r3, #0]
 1300 0ac0 1A46     		mov	r2, r3
 1301 0ac2 40F20003 		movw	r3, #:lower16:adc2_data
 1302 0ac6 C0F20003 		movt	r3, #:upper16:adc2_data
 1303 0aca 9B68     		ldr	r3, [r3, #8]
 1304 0acc D31A     		subs	r3, r2, r3
 1305 0ace 07EE103A 		fmsr	s14, r3	@ int
 1306 0ad2 F8EEC77A 		fsitos	s15, s14
 1307 0ad6 40F20003 		movw	r3, #:lower16:err
 1308 0ada C0F20003 		movt	r3, #:upper16:err
 1309 0ade C3ED007A 		fsts	s15, [r3, #0]
 374:../src/interrupt_defs.cpp **** 			if(err > -20 && err < 20)
 1310              		.loc 1 374 0
 1311 0ae2 40F20003 		movw	r3, #:lower16:err
 1312 0ae6 C0F20003 		movt	r3, #:upper16:err
 1313 0aea 93ED007A 		flds	s14, [r3, #0]
 1314 0aee FBEE047A 		fconsts	s15, #180
 1315 0af2 B4EEE77A 		fcmpes	s14, s15
 1316 0af6 F1EE10FA 		fmstat
 1317 0afa 1DDD     		ble	.L62
 1318              	.L117:
 1319              		.loc 1 374 0 is_stmt 0 discriminator 1
 1320 0afc 40F20003 		movw	r3, #:lower16:err
 1321 0b00 C0F20003 		movt	r3, #:upper16:err
 1322 0b04 93ED007A 		flds	s14, [r3, #0]
 1323 0b08 F3EE047A 		fconsts	s15, #52
 1324 0b0c B4EEE77A 		fcmpes	s14, s15
 1325 0b10 F1EE10FA 		fmstat
 1326 0b14 10D5     		bpl	.L62
 1327              	.L118:
 375:../src/interrupt_defs.cpp **** 			{
 376:../src/interrupt_defs.cpp **** 				pwm1_output(0.50f);
 1328              		.loc 1 376 0 is_stmt 1
 1329 0b16 4FF07C50 		mov	r0, #1056964608
 1330 0b1a FFF7FEFF 		bl	_Z11pwm1_outputf
 377:../src/interrupt_defs.cpp **** 				pwm2_output(0.50f);
 1331              		.loc 1 377 0
 1332 0b1e 4FF07C50 		mov	r0, #1056964608
 1333 0b22 FFF7FEFF 		bl	_Z11pwm2_outputf
 378:../src/interrupt_defs.cpp **** 				state = ST_FIREFIGHT;
 1334              		.loc 1 378 0
 1335 0b26 40F20003 		movw	r3, #:lower16:state
 1336 0b2a C0F20003 		movt	r3, #:upper16:state
 1337 0b2e 4FF00202 		mov	r2, #2
 1338 0b32 1A60     		str	r2, [r3, #0]
 379:../src/interrupt_defs.cpp **** 				return;
 1339              		.loc 1 379 0
 1340 0b34 00F03CBC 		b	.L60
 1341              	.L62:
 380:../src/interrupt_defs.cpp **** 			}
 381:../src/interrupt_defs.cpp **** 
 382:../src/interrupt_defs.cpp **** 			diff_err = (float)(err-last_err)*((float)DT_ENCODER/(float)1000);
 1342              		.loc 1 382 0
 1343 0b38 40F20003 		movw	r3, #:lower16:err
 1344 0b3c C0F20003 		movt	r3, #:upper16:err
 1345 0b40 93ED007A 		flds	s14, [r3, #0]
 1346 0b44 40F20003 		movw	r3, #:lower16:last_err
 1347 0b48 C0F20003 		movt	r3, #:upper16:last_err
 1348 0b4c D3ED007A 		flds	s15, [r3, #0]
 1349 0b50 37EE677A 		fsubs	s14, s14, s15
 1350 0b54 DFEDBA7A 		flds	s15, .L145+32
 1351 0b58 67EE277A 		fmuls	s15, s14, s15
 1352 0b5c 40F20003 		movw	r3, #:lower16:diff_err
 1353 0b60 C0F20003 		movt	r3, #:upper16:diff_err
 1354 0b64 C3ED007A 		fsts	s15, [r3, #0]
 383:../src/interrupt_defs.cpp **** 			integral =0;//+= err * 0.04f;
 1355              		.loc 1 383 0
 1356 0b68 40F20003 		movw	r3, #:lower16:integral
 1357 0b6c C0F20003 		movt	r3, #:upper16:integral
 1358 0b70 4FF00002 		mov	r2, #0
 1359 0b74 1A60     		str	r2, [r3, #0]	@ float
 384:../src/interrupt_defs.cpp **** 			drive_cmd = (((float)(err)/(float)500) + ((float)diff_err/(float)735)); // k_deriv = 944
 1360              		.loc 1 384 0
 1361 0b76 40F20003 		movw	r3, #:lower16:err
 1362 0b7a C0F20003 		movt	r3, #:upper16:err
 1363 0b7e 93ED007A 		flds	s14, [r3, #0]
 1364 0b82 DFEDB07A 		flds	s15, .L145+36
 1365 0b86 87EE277A 		fdivs	s14, s14, s15
 1366 0b8a 40F20003 		movw	r3, #:lower16:diff_err
 1367 0b8e C0F20003 		movt	r3, #:upper16:diff_err
 1368 0b92 D3ED006A 		flds	s13, [r3, #0]
 1369 0b96 DFEDA57A 		flds	s15, .L145+12
 1370 0b9a C6EEA77A 		fdivs	s15, s13, s15
 1371 0b9e 77EE277A 		fadds	s15, s14, s15
 1372 0ba2 40F20003 		movw	r3, #:lower16:drive_cmd
 1373 0ba6 C0F20003 		movt	r3, #:upper16:drive_cmd
 1374 0baa C3ED007A 		fsts	s15, [r3, #0]
 385:../src/interrupt_defs.cpp **** 
 386:../src/interrupt_defs.cpp **** 			rt = 0.0f;
 1375              		.loc 1 386 0
 1376 0bae 40F20003 		movw	r3, #:lower16:rt
 1377 0bb2 C0F20003 		movt	r3, #:upper16:rt
 1378 0bb6 4FF00002 		mov	r2, #0
 1379 0bba 1A60     		str	r2, [r3, #0]	@ float
 387:../src/interrupt_defs.cpp **** 			mtr_out = 0.5f;
 1380              		.loc 1 387 0
 1381 0bbc 4FF07C53 		mov	r3, #1056964608
 1382 0bc0 3B60     		str	r3, [r7, #0]	@ float
 388:../src/interrupt_defs.cpp **** 
 389:../src/interrupt_defs.cpp **** 			if(drive_cmd > 0.5)
 1383              		.loc 1 389 0
 1384 0bc2 40F20003 		movw	r3, #:lower16:drive_cmd
 1385 0bc6 C0F20003 		movt	r3, #:upper16:drive_cmd
 1386 0bca 93ED007A 		flds	s14, [r3, #0]
 1387 0bce F6EE007A 		fconsts	s15, #96
 1388 0bd2 B4EEE77A 		fcmpes	s14, s15
 1389 0bd6 F1EE10FA 		fmstat
 1390 0bda 06DD     		ble	.L66
 1391              	.L119:
 390:../src/interrupt_defs.cpp **** 			{
 391:../src/interrupt_defs.cpp **** 				drive_cmd = 0.5f;
 1392              		.loc 1 391 0
 1393 0bdc 40F20003 		movw	r3, #:lower16:drive_cmd
 1394 0be0 C0F20003 		movt	r3, #:upper16:drive_cmd
 1395 0be4 4FF07C52 		mov	r2, #1056964608
 1396 0be8 1A60     		str	r2, [r3, #0]	@ float
 1397              	.L66:
 392:../src/interrupt_defs.cpp **** 			}
 393:../src/interrupt_defs.cpp **** 			if(drive_cmd < -0.5)
 1398              		.loc 1 393 0
 1399 0bea 40F20003 		movw	r3, #:lower16:drive_cmd
 1400 0bee C0F20003 		movt	r3, #:upper16:drive_cmd
 1401 0bf2 93ED007A 		flds	s14, [r3, #0]
 1402 0bf6 FEEE007A 		fconsts	s15, #224
 1403 0bfa B4EEE77A 		fcmpes	s14, s15
 1404 0bfe F1EE10FA 		fmstat
 1405 0c02 06D5     		bpl	.L68
 1406              	.L120:
 394:../src/interrupt_defs.cpp **** 			{
 395:../src/interrupt_defs.cpp **** 				drive_cmd = -0.5f;
 1407              		.loc 1 395 0
 1408 0c04 40F20003 		movw	r3, #:lower16:drive_cmd
 1409 0c08 C0F20003 		movt	r3, #:upper16:drive_cmd
 1410 0c0c 4FF03F42 		mov	r2, #-1090519040
 1411 0c10 1A60     		str	r2, [r3, #0]	@ float
 1412              	.L68:
 396:../src/interrupt_defs.cpp **** 			}
 397:../src/interrupt_defs.cpp **** 
 398:../src/interrupt_defs.cpp **** 			left = (1-mtr_out) - drive_cmd - rt;
 1413              		.loc 1 398 0
 1414 0c12 B7EE007A 		fconsts	s14, #112
 1415 0c16 D7ED007A 		flds	s15, [r7, #0]
 1416 0c1a 37EE677A 		fsubs	s14, s14, s15
 1417 0c1e 40F20003 		movw	r3, #:lower16:drive_cmd
 1418 0c22 C0F20003 		movt	r3, #:upper16:drive_cmd
 1419 0c26 D3ED007A 		flds	s15, [r3, #0]
 1420 0c2a 37EE677A 		fsubs	s14, s14, s15
 1421 0c2e 40F20003 		movw	r3, #:lower16:rt
 1422 0c32 C0F20003 		movt	r3, #:upper16:rt
 1423 0c36 D3ED007A 		flds	s15, [r3, #0]
 1424 0c3a 77EE677A 		fsubs	s15, s14, s15
 1425 0c3e 40F20003 		movw	r3, #:lower16:left
 1426 0c42 C0F20003 		movt	r3, #:upper16:left
 1427 0c46 C3ED007A 		fsts	s15, [r3, #0]
 399:../src/interrupt_defs.cpp **** 			right = mtr_out - drive_cmd - rt;
 1428              		.loc 1 399 0
 1429 0c4a 40F20003 		movw	r3, #:lower16:drive_cmd
 1430 0c4e C0F20003 		movt	r3, #:upper16:drive_cmd
 1431 0c52 D3ED007A 		flds	s15, [r3, #0]
 1432 0c56 97ED007A 		flds	s14, [r7, #0]
 1433 0c5a 37EE677A 		fsubs	s14, s14, s15
 1434 0c5e 40F20003 		movw	r3, #:lower16:rt
 1435 0c62 C0F20003 		movt	r3, #:upper16:rt
 1436 0c66 D3ED007A 		flds	s15, [r3, #0]
 1437 0c6a 77EE677A 		fsubs	s15, s14, s15
 1438 0c6e 40F20003 		movw	r3, #:lower16:right
 1439 0c72 C0F20003 		movt	r3, #:upper16:right
 1440 0c76 C3ED007A 		fsts	s15, [r3, #0]
 400:../src/interrupt_defs.cpp **** 
 401:../src/interrupt_defs.cpp **** 			if(left>1.0)
 1441              		.loc 1 401 0
 1442 0c7a 40F20003 		movw	r3, #:lower16:left
 1443 0c7e C0F20003 		movt	r3, #:upper16:left
 1444 0c82 93ED007A 		flds	s14, [r3, #0]
 1445 0c86 F7EE007A 		fconsts	s15, #112
 1446 0c8a B4EEE77A 		fcmpes	s14, s15
 1447 0c8e F1EE10FA 		fmstat
 1448 0c92 07DD     		ble	.L139
 1449              	.L121:
 402:../src/interrupt_defs.cpp **** 			{
 403:../src/interrupt_defs.cpp **** 				left=1.0;
 1450              		.loc 1 403 0
 1451 0c94 40F20003 		movw	r3, #:lower16:left
 1452 0c98 C0F20003 		movt	r3, #:upper16:left
 1453 0c9c 4FF07E52 		mov	r2, #1065353216
 1454 0ca0 1A60     		str	r2, [r3, #0]	@ float
 1455 0ca2 11E0     		b	.L72
 1456              	.L139:
 404:../src/interrupt_defs.cpp **** 			}
 405:../src/interrupt_defs.cpp **** 			else if(left<0)
 1457              		.loc 1 405 0
 1458 0ca4 40F20003 		movw	r3, #:lower16:left
 1459 0ca8 C0F20003 		movt	r3, #:upper16:left
 1460 0cac D3ED007A 		flds	s15, [r3, #0]
 1461 0cb0 F5EEC07A 		fcmpezs	s15
 1462 0cb4 F1EE10FA 		fmstat
 1463 0cb8 06D5     		bpl	.L72
 1464              	.L122:
 406:../src/interrupt_defs.cpp **** 			{
 407:../src/interrupt_defs.cpp **** 				left=0;//-1.0;
 1465              		.loc 1 407 0
 1466 0cba 40F20003 		movw	r3, #:lower16:left
 1467 0cbe C0F20003 		movt	r3, #:upper16:left
 1468 0cc2 4FF00002 		mov	r2, #0
 1469 0cc6 1A60     		str	r2, [r3, #0]	@ float
 1470              	.L72:
 408:../src/interrupt_defs.cpp **** 			}
 409:../src/interrupt_defs.cpp **** 
 410:../src/interrupt_defs.cpp **** 			if(right>1.0f)
 1471              		.loc 1 410 0
 1472 0cc8 40F20003 		movw	r3, #:lower16:right
 1473 0ccc C0F20003 		movt	r3, #:upper16:right
 1474 0cd0 93ED007A 		flds	s14, [r3, #0]
 1475 0cd4 F7EE007A 		fconsts	s15, #112
 1476 0cd8 B4EEE77A 		fcmpes	s14, s15
 1477 0cdc F1EE10FA 		fmstat
 1478 0ce0 07DD     		ble	.L140
 1479              	.L123:
 411:../src/interrupt_defs.cpp **** 			{
 412:../src/interrupt_defs.cpp **** 				right=1.0f;
 1480              		.loc 1 412 0
 1481 0ce2 40F20003 		movw	r3, #:lower16:right
 1482 0ce6 C0F20003 		movt	r3, #:upper16:right
 1483 0cea 4FF07E52 		mov	r2, #1065353216
 1484 0cee 1A60     		str	r2, [r3, #0]	@ float
 1485 0cf0 0CE3     		b	.L76
 1486              	.L140:
 413:../src/interrupt_defs.cpp **** 			}
 414:../src/interrupt_defs.cpp **** 			else if(right<0)
 1487              		.loc 1 414 0
 1488 0cf2 40F20003 		movw	r3, #:lower16:right
 1489 0cf6 C0F20003 		movt	r3, #:upper16:right
 1490 0cfa D3ED007A 		flds	s15, [r3, #0]
 1491 0cfe F5EEC07A 		fcmpezs	s15
 1492 0d02 F1EE10FA 		fmstat
 1493 0d06 40F10183 		bpl	.L76
 1494              	.L124:
 415:../src/interrupt_defs.cpp **** 			{
 416:../src/interrupt_defs.cpp **** 				right=0;
 1495              		.loc 1 416 0
 1496 0d0a 40F20003 		movw	r3, #:lower16:right
 1497 0d0e C0F20003 		movt	r3, #:upper16:right
 1498 0d12 4FF00002 		mov	r2, #0
 1499 0d16 1A60     		str	r2, [r3, #0]	@ float
 1500 0d18 F8E2     		b	.L76
 1501              	.L61:
 417:../src/interrupt_defs.cpp **** 			}
 418:../src/interrupt_defs.cpp **** 		}
 419:../src/interrupt_defs.cpp **** 		else if(state == ST_WANDER)
 1502              		.loc 1 419 0
 1503 0d1a 40F20003 		movw	r3, #:lower16:state
 1504 0d1e C0F20003 		movt	r3, #:upper16:state
 1505 0d22 1B68     		ldr	r3, [r3, #0]
 1506 0d24 002B     		cmp	r3, #0
 1507 0d26 40F06181 		bne	.L78
 420:../src/interrupt_defs.cpp **** 		{
 421:../src/interrupt_defs.cpp **** 			err = ((float)(0.55)*(float)((int)adc2_data[0] - 2200)) + ((float)(0.45)*(float)((int)adcData[1]
 1508              		.loc 1 421 0
 1509 0d2a 40F20003 		movw	r3, #:lower16:adc2_data
 1510 0d2e C0F20003 		movt	r3, #:upper16:adc2_data
 1511 0d32 1B68     		ldr	r3, [r3, #0]
 1512 0d34 A3F69803 		subw	r3, r3, #2200
 1513 0d38 07EE903A 		fmsr	s15, r3	@ int
 1514 0d3c B8EEE77A 		fsitos	s14, s15
 1515 0d40 DFED3B7A 		flds	s15, .L145+16
 1516 0d44 27EE277A 		fmuls	s14, s14, s15
 1517 0d48 40F20003 		movw	r3, #:lower16:adcData
 1518 0d4c C0F20003 		movt	r3, #:upper16:adcData
 1519 0d50 5B68     		ldr	r3, [r3, #4]
 1520 0d52 A3F19603 		sub	r3, r3, #150
 1521 0d56 07EE903A 		fmsr	s15, r3	@ int
 1522 0d5a F8EEE76A 		fsitos	s13, s15
 1523 0d5e DFED357A 		flds	s15, .L145+20
 1524 0d62 66EEA77A 		fmuls	s15, s13, s15
 1525 0d66 77EE277A 		fadds	s15, s14, s15
 1526 0d6a 40F20003 		movw	r3, #:lower16:err
 1527 0d6e C0F20003 		movt	r3, #:upper16:err
 1528 0d72 C3ED007A 		fsts	s15, [r3, #0]
 422:../src/interrupt_defs.cpp **** 
 423:../src/interrupt_defs.cpp **** 		diff_err = (float)(err-last_err)*((float)DT_ENCODER/(float)1000);
 1529              		.loc 1 423 0
 1530 0d76 40F20003 		movw	r3, #:lower16:err
 1531 0d7a C0F20003 		movt	r3, #:upper16:err
 1532 0d7e 93ED007A 		flds	s14, [r3, #0]
 1533 0d82 40F20003 		movw	r3, #:lower16:last_err
 1534 0d86 C0F20003 		movt	r3, #:upper16:last_err
 1535 0d8a D3ED007A 		flds	s15, [r3, #0]
 1536 0d8e 37EE677A 		fsubs	s14, s14, s15
 1537 0d92 DFED2B7A 		flds	s15, .L145+32
 1538 0d96 67EE277A 		fmuls	s15, s14, s15
 1539 0d9a 40F20003 		movw	r3, #:lower16:diff_err
 1540 0d9e C0F20003 		movt	r3, #:upper16:diff_err
 1541 0da2 C3ED007A 		fsts	s15, [r3, #0]
 424:../src/interrupt_defs.cpp **** 		drive_cmd = (((float)(err)/(float)2500) + ((float)diff_err/(float)3720)); //1100=diff term
 1542              		.loc 1 424 0
 1543 0da6 40F20003 		movw	r3, #:lower16:err
 1544 0daa C0F20003 		movt	r3, #:upper16:err
 1545 0dae 93ED007A 		flds	s14, [r3, #0]
 1546 0db2 DFED217A 		flds	s15, .L145+24
 1547 0db6 87EE277A 		fdivs	s14, s14, s15
 1548 0dba 40F20003 		movw	r3, #:lower16:diff_err
 1549 0dbe C0F20003 		movt	r3, #:upper16:diff_err
 1550 0dc2 D3ED006A 		flds	s13, [r3, #0]
 1551 0dc6 DFED1D7A 		flds	s15, .L145+28
 1552 0dca C6EEA77A 		fdivs	s15, s13, s15
 1553 0dce 77EE277A 		fadds	s15, s14, s15
 1554 0dd2 40F20003 		movw	r3, #:lower16:drive_cmd
 1555 0dd6 C0F20003 		movt	r3, #:upper16:drive_cmd
 1556 0dda C3ED007A 		fsts	s15, [r3, #0]
 425:../src/interrupt_defs.cpp **** 
 426:../src/interrupt_defs.cpp **** 		if(d_front < 0.690 || adc2_data[3] > 1870)//0.69
 1557              		.loc 1 426 0
 1558 0dde 40F20003 		movw	r3, #:lower16:d_front
 1559 0de2 C0F20003 		movt	r3, #:upper16:d_front
 1560 0de6 1B68     		ldr	r3, [r3, #0]	@ float
 1561 0de8 1846     		mov	r0, r3	@ float
 1562 0dea FFF7FEFF 		bl	__aeabi_f2d
 1563 0dee 0246     		mov	r2, r0
 1564 0df0 0B46     		mov	r3, r1
 1565 0df2 1046     		mov	r0, r2
 1566 0df4 1946     		mov	r1, r3
 1567 0df6 0AA3     		adr	r3, .L145
 1568 0df8 D3E90023 		ldrd	r2, [r3]
 1569 0dfc FFF7FEFF 		bl	__aeabi_dcmplt
 1570 0e00 0346     		mov	r3, r0
 1571 0e02 002B     		cmp	r3, #0
 1572 0e04 08D1     		bne	.L79
 1573              		.loc 1 426 0 is_stmt 0 discriminator 2
 1574 0e06 40F20003 		movw	r3, #:lower16:adc2_data
 1575 0e0a C0F20003 		movt	r3, #:upper16:adc2_data
 1576 0e0e DA68     		ldr	r2, [r3, #12]
 1577 0e10 40F24E73 		movw	r3, #1870
 1578 0e14 9A42     		cmp	r2, r3
 1579 0e16 19D9     		bls	.L80
 1580              	.L79:
 1581              		.loc 1 426 0 discriminator 1
 1582 0e18 4FF00103 		mov	r3, #1
 1583 0e1c 18E0     		b	.L81
 1584              	.L146:
 1585 0e1e 00BF     		.align	3
 1586              	.L145:
 1587 0e20 14AE47E1 		.word	-515396076
 1588 0e24 7A14E63F 		.word	1072043130
 1589 0e28 821C943A 		.word	982785154
 1590 0e2c 00C03744 		.word	1144504320
 1591 0e30 CDCC0C3F 		.word	1057803469
 1592 0e34 6666E63E 		.word	1055286886
 1593 0e38 00401C45 		.word	1159479296
 1594 0e3c 00806845 		.word	1164476416
 1595 0e40 CDCCCC3C 		.word	1020054733
 1596 0e44 0000FA43 		.word	1140457472
 1597 0e48 00006C44 		.word	1147928576
 1598              	.L80:
 1599              		.loc 1 426 0 discriminator 3
 1600 0e4c 4FF00003 		mov	r3, #0
 1601              	.L81:
 1602              		.loc 1 426 0 discriminator 4
 1603 0e50 002B     		cmp	r3, #0
 1604 0e52 13D0     		beq	.L82
 427:../src/interrupt_defs.cpp **** 		{
 428:../src/interrupt_defs.cpp **** 			rt = 0.5f;
 1605              		.loc 1 428 0 is_stmt 1
 1606 0e54 40F20003 		movw	r3, #:lower16:rt
 1607 0e58 C0F20003 		movt	r3, #:upper16:rt
 1608 0e5c 4FF07C52 		mov	r2, #1056964608
 1609 0e60 1A60     		str	r2, [r3, #0]	@ float
 429:../src/interrupt_defs.cpp **** 			mtr_out = 0.3f;
 1610              		.loc 1 429 0
 1611 0e62 49F69A13 		movw	r3, #39322
 1612 0e66 C3F69963 		movt	r3, 16025
 1613 0e6a 3B60     		str	r3, [r7, #0]	@ float
 430:../src/interrupt_defs.cpp **** 			drive_cmd = 0;
 1614              		.loc 1 430 0
 1615 0e6c 40F20003 		movw	r3, #:lower16:drive_cmd
 1616 0e70 C0F20003 		movt	r3, #:upper16:drive_cmd
 1617 0e74 4FF00002 		mov	r2, #0
 1618 0e78 1A60     		str	r2, [r3, #0]	@ float
 1619 0e7a 0BE0     		b	.L83
 1620              	.L82:
 431:../src/interrupt_defs.cpp **** 		}
 432:../src/interrupt_defs.cpp **** 		else
 433:../src/interrupt_defs.cpp **** 		{
 434:../src/interrupt_defs.cpp **** 			rt = 0.0f;
 1621              		.loc 1 434 0
 1622 0e7c 40F20003 		movw	r3, #:lower16:rt
 1623 0e80 C0F20003 		movt	r3, #:upper16:rt
 1624 0e84 4FF00002 		mov	r2, #0
 1625 0e88 1A60     		str	r2, [r3, #0]	@ float
 435:../src/interrupt_defs.cpp **** 			mtr_out = 0.85f;
 1626              		.loc 1 435 0
 1627 0e8a 49F69A13 		movw	r3, #39322
 1628 0e8e C3F65973 		movt	r3, 16217
 1629 0e92 3B60     		str	r3, [r7, #0]	@ float
 1630              	.L83:
 436:../src/interrupt_defs.cpp **** 		}
 437:../src/interrupt_defs.cpp **** 
 438:../src/interrupt_defs.cpp **** 		if(drive_cmd > 0.5)
 1631              		.loc 1 438 0
 1632 0e94 40F20003 		movw	r3, #:lower16:drive_cmd
 1633 0e98 C0F20003 		movt	r3, #:upper16:drive_cmd
 1634 0e9c 93ED007A 		flds	s14, [r3, #0]
 1635 0ea0 F6EE007A 		fconsts	s15, #96
 1636 0ea4 B4EEE77A 		fcmpes	s14, s15
 1637 0ea8 F1EE10FA 		fmstat
 1638 0eac 06DD     		ble	.L84
 1639              	.L125:
 439:../src/interrupt_defs.cpp **** 		{
 440:../src/interrupt_defs.cpp **** 			drive_cmd = 0.5f;
 1640              		.loc 1 440 0
 1641 0eae 40F20003 		movw	r3, #:lower16:drive_cmd
 1642 0eb2 C0F20003 		movt	r3, #:upper16:drive_cmd
 1643 0eb6 4FF07C52 		mov	r2, #1056964608
 1644 0eba 1A60     		str	r2, [r3, #0]	@ float
 1645              	.L84:
 441:../src/interrupt_defs.cpp **** 		}
 442:../src/interrupt_defs.cpp **** 		if(drive_cmd < -0.5)
 1646              		.loc 1 442 0
 1647 0ebc 40F20003 		movw	r3, #:lower16:drive_cmd
 1648 0ec0 C0F20003 		movt	r3, #:upper16:drive_cmd
 1649 0ec4 93ED007A 		flds	s14, [r3, #0]
 1650 0ec8 FEEE007A 		fconsts	s15, #224
 1651 0ecc B4EEE77A 		fcmpes	s14, s15
 1652 0ed0 F1EE10FA 		fmstat
 1653 0ed4 06D5     		bpl	.L86
 1654              	.L126:
 443:../src/interrupt_defs.cpp **** 		{
 444:../src/interrupt_defs.cpp **** 			drive_cmd = -0.5f;
 1655              		.loc 1 444 0
 1656 0ed6 40F20003 		movw	r3, #:lower16:drive_cmd
 1657 0eda C0F20003 		movt	r3, #:upper16:drive_cmd
 1658 0ede 4FF03F42 		mov	r2, #-1090519040
 1659 0ee2 1A60     		str	r2, [r3, #0]	@ float
 1660              	.L86:
 445:../src/interrupt_defs.cpp **** 		}
 446:../src/interrupt_defs.cpp **** 
 447:../src/interrupt_defs.cpp **** 		left = (1-mtr_out) - drive_cmd - rt;
 1661              		.loc 1 447 0
 1662 0ee4 B7EE007A 		fconsts	s14, #112
 1663 0ee8 D7ED007A 		flds	s15, [r7, #0]
 1664 0eec 37EE677A 		fsubs	s14, s14, s15
 1665 0ef0 40F20003 		movw	r3, #:lower16:drive_cmd
 1666 0ef4 C0F20003 		movt	r3, #:upper16:drive_cmd
 1667 0ef8 D3ED007A 		flds	s15, [r3, #0]
 1668 0efc 37EE677A 		fsubs	s14, s14, s15
 1669 0f00 40F20003 		movw	r3, #:lower16:rt
 1670 0f04 C0F20003 		movt	r3, #:upper16:rt
 1671 0f08 D3ED007A 		flds	s15, [r3, #0]
 1672 0f0c 77EE677A 		fsubs	s15, s14, s15
 1673 0f10 40F20003 		movw	r3, #:lower16:left
 1674 0f14 C0F20003 		movt	r3, #:upper16:left
 1675 0f18 C3ED007A 		fsts	s15, [r3, #0]
 448:../src/interrupt_defs.cpp **** 		right = mtr_out - drive_cmd - rt;
 1676              		.loc 1 448 0
 1677 0f1c 40F20003 		movw	r3, #:lower16:drive_cmd
 1678 0f20 C0F20003 		movt	r3, #:upper16:drive_cmd
 1679 0f24 D3ED007A 		flds	s15, [r3, #0]
 1680 0f28 97ED007A 		flds	s14, [r7, #0]
 1681 0f2c 37EE677A 		fsubs	s14, s14, s15
 1682 0f30 40F20003 		movw	r3, #:lower16:rt
 1683 0f34 C0F20003 		movt	r3, #:upper16:rt
 1684 0f38 D3ED007A 		flds	s15, [r3, #0]
 1685 0f3c 77EE677A 		fsubs	s15, s14, s15
 1686 0f40 40F20003 		movw	r3, #:lower16:right
 1687 0f44 C0F20003 		movt	r3, #:upper16:right
 1688 0f48 C3ED007A 		fsts	s15, [r3, #0]
 449:../src/interrupt_defs.cpp **** 
 450:../src/interrupt_defs.cpp **** 		if(left>1.0)
 1689              		.loc 1 450 0
 1690 0f4c 40F20003 		movw	r3, #:lower16:left
 1691 0f50 C0F20003 		movt	r3, #:upper16:left
 1692 0f54 93ED007A 		flds	s14, [r3, #0]
 1693 0f58 F7EE007A 		fconsts	s15, #112
 1694 0f5c B4EEE77A 		fcmpes	s14, s15
 1695 0f60 F1EE10FA 		fmstat
 1696 0f64 07DD     		ble	.L141
 1697              	.L127:
 451:../src/interrupt_defs.cpp **** 		{
 452:../src/interrupt_defs.cpp **** 			left=1.0;
 1698              		.loc 1 452 0
 1699 0f66 40F20003 		movw	r3, #:lower16:left
 1700 0f6a C0F20003 		movt	r3, #:upper16:left
 1701 0f6e 4FF07E52 		mov	r2, #1065353216
 1702 0f72 1A60     		str	r2, [r3, #0]	@ float
 1703 0f74 11E0     		b	.L90
 1704              	.L141:
 453:../src/interrupt_defs.cpp **** 		}
 454:../src/interrupt_defs.cpp **** 		else if(left<0)
 1705              		.loc 1 454 0
 1706 0f76 40F20003 		movw	r3, #:lower16:left
 1707 0f7a C0F20003 		movt	r3, #:upper16:left
 1708 0f7e D3ED007A 		flds	s15, [r3, #0]
 1709 0f82 F5EEC07A 		fcmpezs	s15
 1710 0f86 F1EE10FA 		fmstat
 1711 0f8a 06D5     		bpl	.L90
 1712              	.L128:
 455:../src/interrupt_defs.cpp **** 		{
 456:../src/interrupt_defs.cpp **** 			left=0;//-1.0;
 1713              		.loc 1 456 0
 1714 0f8c 40F20003 		movw	r3, #:lower16:left
 1715 0f90 C0F20003 		movt	r3, #:upper16:left
 1716 0f94 4FF00002 		mov	r2, #0
 1717 0f98 1A60     		str	r2, [r3, #0]	@ float
 1718              	.L90:
 457:../src/interrupt_defs.cpp **** 		}
 458:../src/interrupt_defs.cpp **** 
 459:../src/interrupt_defs.cpp **** 		if(right>1.0f)
 1719              		.loc 1 459 0
 1720 0f9a 40F20003 		movw	r3, #:lower16:right
 1721 0f9e C0F20003 		movt	r3, #:upper16:right
 1722 0fa2 93ED007A 		flds	s14, [r3, #0]
 1723 0fa6 F7EE007A 		fconsts	s15, #112
 1724 0faa B4EEE77A 		fcmpes	s14, s15
 1725 0fae F1EE10FA 		fmstat
 1726 0fb2 07DD     		ble	.L142
 1727              	.L129:
 460:../src/interrupt_defs.cpp **** 		{
 461:../src/interrupt_defs.cpp **** 			right=1.0f;
 1728              		.loc 1 461 0
 1729 0fb4 40F20003 		movw	r3, #:lower16:right
 1730 0fb8 C0F20003 		movt	r3, #:upper16:right
 1731 0fbc 4FF07E52 		mov	r2, #1065353216
 1732 0fc0 1A60     		str	r2, [r3, #0]	@ float
 1733 0fc2 A3E1     		b	.L76
 1734              	.L142:
 462:../src/interrupt_defs.cpp **** 		}
 463:../src/interrupt_defs.cpp **** 		else if(right<0)
 1735              		.loc 1 463 0
 1736 0fc4 40F20003 		movw	r3, #:lower16:right
 1737 0fc8 C0F20003 		movt	r3, #:upper16:right
 1738 0fcc D3ED007A 		flds	s15, [r3, #0]
 1739 0fd0 F5EEC07A 		fcmpezs	s15
 1740 0fd4 F1EE10FA 		fmstat
 1741 0fd8 40F19881 		bpl	.L76
 1742              	.L130:
 464:../src/interrupt_defs.cpp **** 		{
 465:../src/interrupt_defs.cpp **** 			right=0;
 1743              		.loc 1 465 0
 1744 0fdc 40F20003 		movw	r3, #:lower16:right
 1745 0fe0 C0F20003 		movt	r3, #:upper16:right
 1746 0fe4 4FF00002 		mov	r2, #0
 1747 0fe8 1A60     		str	r2, [r3, #0]	@ float
 1748 0fea 8FE1     		b	.L76
 1749              	.L78:
 466:../src/interrupt_defs.cpp **** 		}
 467:../src/interrupt_defs.cpp **** 		}
 468:../src/interrupt_defs.cpp **** 		else if(state == ST_CANDLE_BLOWOUT)
 1750              		.loc 1 468 0
 1751 0fec 40F20003 		movw	r3, #:lower16:state
 1752 0ff0 C0F20003 		movt	r3, #:upper16:state
 1753 0ff4 1B68     		ldr	r3, [r3, #0]
 1754 0ff6 032B     		cmp	r3, #3
 1755 0ff8 40F08881 		bne	.L76
 469:../src/interrupt_defs.cpp **** 		{
 470:../src/interrupt_defs.cpp **** 			err = (float)(1.0) * (float)((int)adcData[0] - (int)adc2_data[2]);
 1756              		.loc 1 470 0
 1757 0ffc 40F20003 		movw	r3, #:lower16:adcData
 1758 1000 C0F20003 		movt	r3, #:upper16:adcData
 1759 1004 1B68     		ldr	r3, [r3, #0]
 1760 1006 1A46     		mov	r2, r3
 1761 1008 40F20003 		movw	r3, #:lower16:adc2_data
 1762 100c C0F20003 		movt	r3, #:upper16:adc2_data
 1763 1010 9B68     		ldr	r3, [r3, #8]
 1764 1012 D31A     		subs	r3, r2, r3
 1765 1014 07EE103A 		fmsr	s14, r3	@ int
 1766 1018 F8EEC77A 		fsitos	s15, s14
 1767 101c 40F20003 		movw	r3, #:lower16:err
 1768 1020 C0F20003 		movt	r3, #:upper16:err
 1769 1024 C3ED007A 		fsts	s15, [r3, #0]
 471:../src/interrupt_defs.cpp **** 
 472:../src/interrupt_defs.cpp **** 			diff_err = (float)(err-last_err)*((float)DT_ENCODER/(float)1000);
 1770              		.loc 1 472 0
 1771 1028 40F20003 		movw	r3, #:lower16:err
 1772 102c C0F20003 		movt	r3, #:upper16:err
 1773 1030 93ED007A 		flds	s14, [r3, #0]
 1774 1034 40F20003 		movw	r3, #:lower16:last_err
 1775 1038 C0F20003 		movt	r3, #:upper16:last_err
 1776 103c D3ED007A 		flds	s15, [r3, #0]
 1777 1040 37EE677A 		fsubs	s14, s14, s15
 1778 1044 5FED827A 		flds	s15, .L145+32
 1779 1048 67EE277A 		fmuls	s15, s14, s15
 1780 104c 40F20003 		movw	r3, #:lower16:diff_err
 1781 1050 C0F20003 		movt	r3, #:upper16:diff_err
 1782 1054 C3ED007A 		fsts	s15, [r3, #0]
 473:../src/interrupt_defs.cpp **** 			integral =0;//+= err * 0.04f;
 1783              		.loc 1 473 0
 1784 1058 40F20003 		movw	r3, #:lower16:integral
 1785 105c C0F20003 		movt	r3, #:upper16:integral
 1786 1060 4FF00002 		mov	r2, #0
 1787 1064 1A60     		str	r2, [r3, #0]	@ float
 474:../src/interrupt_defs.cpp **** 			drive_cmd = (((float)(err)/(float)500) + ((float)diff_err/(float)944));
 1788              		.loc 1 474 0
 1789 1066 40F20003 		movw	r3, #:lower16:err
 1790 106a C0F20003 		movt	r3, #:upper16:err
 1791 106e 93ED007A 		flds	s14, [r3, #0]
 1792 1072 5FED8C7A 		flds	s15, .L145+36
 1793 1076 87EE277A 		fdivs	s14, s14, s15
 1794 107a 40F20003 		movw	r3, #:lower16:diff_err
 1795 107e C0F20003 		movt	r3, #:upper16:diff_err
 1796 1082 D3ED006A 		flds	s13, [r3, #0]
 1797 1086 5FED907A 		flds	s15, .L145+40
 1798 108a C6EEA77A 		fdivs	s15, s13, s15
 1799 108e 77EE277A 		fadds	s15, s14, s15
 1800 1092 40F20003 		movw	r3, #:lower16:drive_cmd
 1801 1096 C0F20003 		movt	r3, #:upper16:drive_cmd
 1802 109a C3ED007A 		fsts	s15, [r3, #0]
 475:../src/interrupt_defs.cpp **** 
 476:../src/interrupt_defs.cpp **** 			rt = 0.0f;
 1803              		.loc 1 476 0
 1804 109e 40F20003 		movw	r3, #:lower16:rt
 1805 10a2 C0F20003 		movt	r3, #:upper16:rt
 1806 10a6 4FF00002 		mov	r2, #0
 1807 10aa 1A60     		str	r2, [r3, #0]	@ float
 477:../src/interrupt_defs.cpp **** 			mtr_out = 0.5f;
 1808              		.loc 1 477 0
 1809 10ac 4FF07C53 		mov	r3, #1056964608
 1810 10b0 3B60     		str	r3, [r7, #0]	@ float
 478:../src/interrupt_defs.cpp **** 
 479:../src/interrupt_defs.cpp **** 			if(drive_cmd > 0.5)
 1811              		.loc 1 479 0
 1812 10b2 40F20003 		movw	r3, #:lower16:drive_cmd
 1813 10b6 C0F20003 		movt	r3, #:upper16:drive_cmd
 1814 10ba 93ED007A 		flds	s14, [r3, #0]
 1815 10be F6EE007A 		fconsts	s15, #96
 1816 10c2 B4EEE77A 		fcmpes	s14, s15
 1817 10c6 F1EE10FA 		fmstat
 1818 10ca 06DD     		ble	.L95
 1819              	.L131:
 480:../src/interrupt_defs.cpp **** 			{
 481:../src/interrupt_defs.cpp **** 				drive_cmd = 0.5f;
 1820              		.loc 1 481 0
 1821 10cc 40F20003 		movw	r3, #:lower16:drive_cmd
 1822 10d0 C0F20003 		movt	r3, #:upper16:drive_cmd
 1823 10d4 4FF07C52 		mov	r2, #1056964608
 1824 10d8 1A60     		str	r2, [r3, #0]	@ float
 1825              	.L95:
 482:../src/interrupt_defs.cpp **** 			}
 483:../src/interrupt_defs.cpp **** 			if(drive_cmd < -0.5)
 1826              		.loc 1 483 0
 1827 10da 40F20003 		movw	r3, #:lower16:drive_cmd
 1828 10de C0F20003 		movt	r3, #:upper16:drive_cmd
 1829 10e2 93ED007A 		flds	s14, [r3, #0]
 1830 10e6 FEEE007A 		fconsts	s15, #224
 1831 10ea B4EEE77A 		fcmpes	s14, s15
 1832 10ee F1EE10FA 		fmstat
 1833 10f2 06D5     		bpl	.L97
 1834              	.L132:
 484:../src/interrupt_defs.cpp **** 			{
 485:../src/interrupt_defs.cpp **** 				drive_cmd = -0.5f;
 1835              		.loc 1 485 0
 1836 10f4 40F20003 		movw	r3, #:lower16:drive_cmd
 1837 10f8 C0F20003 		movt	r3, #:upper16:drive_cmd
 1838 10fc 4FF03F42 		mov	r2, #-1090519040
 1839 1100 1A60     		str	r2, [r3, #0]	@ float
 1840              	.L97:
 486:../src/interrupt_defs.cpp **** 			}
 487:../src/interrupt_defs.cpp **** 
 488:../src/interrupt_defs.cpp **** 			left = (1-mtr_out) - drive_cmd - rt;
 1841              		.loc 1 488 0
 1842 1102 B7EE007A 		fconsts	s14, #112
 1843 1106 D7ED007A 		flds	s15, [r7, #0]
 1844 110a 37EE677A 		fsubs	s14, s14, s15
 1845 110e 40F20003 		movw	r3, #:lower16:drive_cmd
 1846 1112 C0F20003 		movt	r3, #:upper16:drive_cmd
 1847 1116 D3ED007A 		flds	s15, [r3, #0]
 1848 111a 37EE677A 		fsubs	s14, s14, s15
 1849 111e 40F20003 		movw	r3, #:lower16:rt
 1850 1122 C0F20003 		movt	r3, #:upper16:rt
 1851 1126 D3ED007A 		flds	s15, [r3, #0]
 1852 112a 77EE677A 		fsubs	s15, s14, s15
 1853 112e 40F20003 		movw	r3, #:lower16:left
 1854 1132 C0F20003 		movt	r3, #:upper16:left
 1855 1136 C3ED007A 		fsts	s15, [r3, #0]
 489:../src/interrupt_defs.cpp **** 			right = mtr_out - drive_cmd - rt;
 1856              		.loc 1 489 0
 1857 113a 40F20003 		movw	r3, #:lower16:drive_cmd
 1858 113e C0F20003 		movt	r3, #:upper16:drive_cmd
 1859 1142 D3ED007A 		flds	s15, [r3, #0]
 1860 1146 97ED007A 		flds	s14, [r7, #0]
 1861 114a 37EE677A 		fsubs	s14, s14, s15
 1862 114e 40F20003 		movw	r3, #:lower16:rt
 1863 1152 C0F20003 		movt	r3, #:upper16:rt
 1864 1156 D3ED007A 		flds	s15, [r3, #0]
 1865 115a 77EE677A 		fsubs	s15, s14, s15
 1866 115e 40F20003 		movw	r3, #:lower16:right
 1867 1162 C0F20003 		movt	r3, #:upper16:right
 1868 1166 C3ED007A 		fsts	s15, [r3, #0]
 490:../src/interrupt_defs.cpp **** 
 491:../src/interrupt_defs.cpp **** 			if(left>1.0)
 1869              		.loc 1 491 0
 1870 116a 40F20003 		movw	r3, #:lower16:left
 1871 116e C0F20003 		movt	r3, #:upper16:left
 1872 1172 93ED007A 		flds	s14, [r3, #0]
 1873 1176 F7EE007A 		fconsts	s15, #112
 1874 117a B4EEE77A 		fcmpes	s14, s15
 1875 117e F1EE10FA 		fmstat
 1876 1182 07DD     		ble	.L143
 1877              	.L133:
 492:../src/interrupt_defs.cpp **** 			{
 493:../src/interrupt_defs.cpp **** 				left=1.0;
 1878              		.loc 1 493 0
 1879 1184 40F20003 		movw	r3, #:lower16:left
 1880 1188 C0F20003 		movt	r3, #:upper16:left
 1881 118c 4FF07E52 		mov	r2, #1065353216
 1882 1190 1A60     		str	r2, [r3, #0]	@ float
 1883 1192 11E0     		b	.L101
 1884              	.L143:
 494:../src/interrupt_defs.cpp **** 			}
 495:../src/interrupt_defs.cpp **** 			else if(left<0)
 1885              		.loc 1 495 0
 1886 1194 40F20003 		movw	r3, #:lower16:left
 1887 1198 C0F20003 		movt	r3, #:upper16:left
 1888 119c D3ED007A 		flds	s15, [r3, #0]
 1889 11a0 F5EEC07A 		fcmpezs	s15
 1890 11a4 F1EE10FA 		fmstat
 1891 11a8 06D5     		bpl	.L101
 1892              	.L134:
 496:../src/interrupt_defs.cpp **** 			{
 497:../src/interrupt_defs.cpp **** 				left=0;//-1.0;
 1893              		.loc 1 497 0
 1894 11aa 40F20003 		movw	r3, #:lower16:left
 1895 11ae C0F20003 		movt	r3, #:upper16:left
 1896 11b2 4FF00002 		mov	r2, #0
 1897 11b6 1A60     		str	r2, [r3, #0]	@ float
 1898              	.L101:
 498:../src/interrupt_defs.cpp **** 			}
 499:../src/interrupt_defs.cpp **** 
 500:../src/interrupt_defs.cpp **** 			if(right>1.0f)
 1899              		.loc 1 500 0
 1900 11b8 40F20003 		movw	r3, #:lower16:right
 1901 11bc C0F20003 		movt	r3, #:upper16:right
 1902 11c0 93ED007A 		flds	s14, [r3, #0]
 1903 11c4 F7EE007A 		fconsts	s15, #112
 1904 11c8 B4EEE77A 		fcmpes	s14, s15
 1905 11cc F1EE10FA 		fmstat
 1906 11d0 07DD     		ble	.L144
 1907              	.L135:
 501:../src/interrupt_defs.cpp **** 			{
 502:../src/interrupt_defs.cpp **** 				right=1.0f;
 1908              		.loc 1 502 0
 1909 11d2 40F20003 		movw	r3, #:lower16:right
 1910 11d6 C0F20003 		movt	r3, #:upper16:right
 1911 11da 4FF07E52 		mov	r2, #1065353216
 1912 11de 1A60     		str	r2, [r3, #0]	@ float
 1913 11e0 11E0     		b	.L105
 1914              	.L144:
 503:../src/interrupt_defs.cpp **** 			}
 504:../src/interrupt_defs.cpp **** 			else if(right<0)
 1915              		.loc 1 504 0
 1916 11e2 40F20003 		movw	r3, #:lower16:right
 1917 11e6 C0F20003 		movt	r3, #:upper16:right
 1918 11ea D3ED007A 		flds	s15, [r3, #0]
 1919 11ee F5EEC07A 		fcmpezs	s15
 1920 11f2 F1EE10FA 		fmstat
 1921 11f6 06D5     		bpl	.L105
 1922              	.L136:
 505:../src/interrupt_defs.cpp **** 			{
 506:../src/interrupt_defs.cpp **** 				right=0;
 1923              		.loc 1 506 0
 1924 11f8 40F20003 		movw	r3, #:lower16:right
 1925 11fc C0F20003 		movt	r3, #:upper16:right
 1926 1200 4FF00002 		mov	r2, #0
 1927 1204 1A60     		str	r2, [r3, #0]	@ float
 1928              	.L105:
 507:../src/interrupt_defs.cpp **** 			}
 508:../src/interrupt_defs.cpp **** 
 509:../src/interrupt_defs.cpp **** 			if(match_time_counter - t_firefight_start > FIREFIGHT_TIMEOUT)
 1929              		.loc 1 509 0
 1930 1206 40F20003 		movw	r3, #:lower16:match_time_counter
 1931 120a C0F20003 		movt	r3, #:upper16:match_time_counter
 1932 120e 93ED007A 		flds	s14, [r3, #0]
 1933 1212 40F20003 		movw	r3, #:lower16:t_firefight_start
 1934 1216 C0F20003 		movt	r3, #:upper16:t_firefight_start
 1935 121a D3ED007A 		flds	s15, [r3, #0]
 1936 121e 37EE677A 		fsubs	s14, s14, s15
 1937 1222 F2EE047A 		fconsts	s15, #36
 1938 1226 B4EEE77A 		fcmpes	s14, s15
 1939 122a F1EE10FA 		fmstat
 1940 122e 6DDD     		ble	.L76
 1941              	.L137:
 510:../src/interrupt_defs.cpp **** 			{
 511:../src/interrupt_defs.cpp **** 				// Turn off motors:
 512:../src/interrupt_defs.cpp **** 				pwm1_output(0.5f);
 1942              		.loc 1 512 0
 1943 1230 4FF07C50 		mov	r0, #1056964608
 1944 1234 FFF7FEFF 		bl	_Z11pwm1_outputf
 513:../src/interrupt_defs.cpp **** 				pwm2_output(0.5f);
 1945              		.loc 1 513 0
 1946 1238 4FF07C50 		mov	r0, #1056964608
 1947 123c FFF7FEFF 		bl	_Z11pwm2_outputf
 514:../src/interrupt_defs.cpp **** 
 515:../src/interrupt_defs.cpp **** 				// Turn off the fan:
 516:../src/interrupt_defs.cpp **** 				pwm3_output(0.05f);
 1948              		.loc 1 516 0
 1949 1240 4CF6CD40 		movw	r0, #52429
 1950 1244 C3F64C50 		movt	r0, 15692
 1951 1248 FFF7FEFF 		bl	_Z11pwm3_outputf
 517:../src/interrupt_defs.cpp **** 
 518:../src/interrupt_defs.cpp **** 				for(i=0;i<40000000;++i)
 1952              		.loc 1 518 0
 1953 124c 4FF00003 		mov	r3, #0
 1954 1250 7B60     		str	r3, [r7, #4]
 1955 1252 07E0     		b	.L108
 1956              	.L109:
 519:../src/interrupt_defs.cpp **** 				{
 520:../src/interrupt_defs.cpp **** 					++i;
 1957              		.loc 1 520 0 discriminator 2
 1958 1254 7B68     		ldr	r3, [r7, #4]
 1959 1256 03F10103 		add	r3, r3, #1
 1960 125a 7B60     		str	r3, [r7, #4]
 518:../src/interrupt_defs.cpp **** 				for(i=0;i<40000000;++i)
 1961              		.loc 1 518 0 discriminator 2
 1962 125c 7B68     		ldr	r3, [r7, #4]
 1963 125e 03F10103 		add	r3, r3, #1
 1964 1262 7B60     		str	r3, [r7, #4]
 1965              	.L108:
 518:../src/interrupt_defs.cpp **** 				for(i=0;i<40000000;++i)
 1966              		.loc 1 518 0 is_stmt 0 discriminator 1
 1967 1264 7A68     		ldr	r2, [r7, #4]
 1968 1266 45F6FF13 		movw	r3, #23039
 1969 126a C0F26223 		movt	r3, 610
 1970 126e 9A42     		cmp	r2, r3
 1971 1270 CCBF     		ite	gt
 1972 1272 0023     		movgt	r3, #0
 1973 1274 0123     		movle	r3, #1
 1974 1276 DBB2     		uxtb	r3, r3
 1975 1278 002B     		cmp	r3, #0
 1976 127a EBD1     		bne	.L109
 521:../src/interrupt_defs.cpp **** 				}
 522:../src/interrupt_defs.cpp **** 
 523:../src/interrupt_defs.cpp **** 				if((adc2_data[2] > UV_THRESHOLD || adcData[0] > UV_THRESHOLD))
 1977              		.loc 1 523 0 is_stmt 1
 1978 127c 40F20003 		movw	r3, #:lower16:adc2_data
 1979 1280 C0F20003 		movt	r3, #:upper16:adc2_data
 1980 1284 9A68     		ldr	r2, [r3, #8]
 1981 1286 40F22713 		movw	r3, #295
 1982 128a 9A42     		cmp	r2, r3
 1983 128c 08D8     		bhi	.L110
 1984              		.loc 1 523 0 is_stmt 0 discriminator 2
 1985 128e 40F20003 		movw	r3, #:lower16:adcData
 1986 1292 C0F20003 		movt	r3, #:upper16:adcData
 1987 1296 1A68     		ldr	r2, [r3, #0]
 1988 1298 40F22713 		movw	r3, #295
 1989 129c 9A42     		cmp	r2, r3
 1990 129e 02D9     		bls	.L111
 1991              	.L110:
 1992              		.loc 1 523 0 discriminator 1
 1993 12a0 4FF00103 		mov	r3, #1
 1994 12a4 01E0     		b	.L112
 1995              	.L111:
 1996              		.loc 1 523 0 discriminator 3
 1997 12a6 4FF00003 		mov	r3, #0
 1998              	.L112:
 1999              		.loc 1 523 0 discriminator 4
 2000 12aa 002B     		cmp	r3, #0
 2001 12ac 18D0     		beq	.L113
 524:../src/interrupt_defs.cpp **** 				{
 525:../src/interrupt_defs.cpp **** 					/*
 526:../src/interrupt_defs.cpp **** 					match_time_counter = 0.0f;
 527:../src/interrupt_defs.cpp **** 
 528:../src/interrupt_defs.cpp **** 					// Turn off the fan:
 529:../src/interrupt_defs.cpp **** 					// pwm3_output(0.05f);
 530:../src/interrupt_defs.cpp **** 
 531:../src/interrupt_defs.cpp **** 					// Wait for flame to settle, if it's still there...
 532:../src/interrupt_defs.cpp **** 					// Twitch robot in some other direction
 533:../src/interrupt_defs.cpp **** 					pwm1_output(0.85f);
 534:../src/interrupt_defs.cpp **** 					pwm2_output(0.00f);
 535:../src/interrupt_defs.cpp **** 					while(match_time_counter < 1.5f)
 536:../src/interrupt_defs.cpp **** 					{
 537:../src/interrupt_defs.cpp **** 						if(match_time_counter > 1.5f)
 538:../src/interrupt_defs.cpp **** 						{
 539:../src/interrupt_defs.cpp **** 							pwm1_output(0.5f);
 540:../src/interrupt_defs.cpp **** 							pwm2_output(0.5f);
 541:../src/interrupt_defs.cpp **** 							break;
 542:../src/interrupt_defs.cpp **** 						}
 543:../src/interrupt_defs.cpp **** 					}*/
 544:../src/interrupt_defs.cpp **** 
 545:../src/interrupt_defs.cpp **** 					pwm1_output(0.0f);
 2002              		.loc 1 545 0 is_stmt 1
 2003 12ae 4FF00000 		mov	r0, #0
 2004 12b2 FFF7FEFF 		bl	_Z11pwm1_outputf
 546:../src/interrupt_defs.cpp **** 					pwm2_output(0.85f);
 2005              		.loc 1 546 0
 2006 12b6 49F69A10 		movw	r0, #39322
 2007 12ba C3F65970 		movt	r0, 16217
 2008 12be FFF7FEFF 		bl	_Z11pwm2_outputf
 547:../src/interrupt_defs.cpp **** 					match_time_counter = 0.0f;
 2009              		.loc 1 547 0
 2010 12c2 40F20003 		movw	r3, #:lower16:match_time_counter
 2011 12c6 C0F20003 		movt	r3, #:upper16:match_time_counter
 2012 12ca 4FF00002 		mov	r2, #0
 2013 12ce 1A60     		str	r2, [r3, #0]	@ float
 548:../src/interrupt_defs.cpp **** 					state = ST_REDO_FIREFIGHT;
 2014              		.loc 1 548 0
 2015 12d0 40F20003 		movw	r3, #:lower16:state
 2016 12d4 C0F20003 		movt	r3, #:upper16:state
 2017 12d8 4FF00502 		mov	r2, #5
 2018 12dc 1A60     		str	r2, [r3, #0]
 2019 12de 15E0     		b	.L76
 2020              	.L113:
 549:../src/interrupt_defs.cpp **** 				}
 550:../src/interrupt_defs.cpp **** 				else
 551:../src/interrupt_defs.cpp **** 				{
 552:../src/interrupt_defs.cpp **** 					pwm1_output(0.5f);
 2021              		.loc 1 552 0
 2022 12e0 4FF07C50 		mov	r0, #1056964608
 2023 12e4 FFF7FEFF 		bl	_Z11pwm1_outputf
 553:../src/interrupt_defs.cpp **** 					pwm2_output(0.5f);
 2024              		.loc 1 553 0
 2025 12e8 4FF07C50 		mov	r0, #1056964608
 2026 12ec FFF7FEFF 		bl	_Z11pwm2_outputf
 554:../src/interrupt_defs.cpp **** 					rt = 0;
 2027              		.loc 1 554 0
 2028 12f0 40F20003 		movw	r3, #:lower16:rt
 2029 12f4 C0F20003 		movt	r3, #:upper16:rt
 2030 12f8 4FF00002 		mov	r2, #0
 2031 12fc 1A60     		str	r2, [r3, #0]	@ float
 555:../src/interrupt_defs.cpp **** 					state = ST_DONE;
 2032              		.loc 1 555 0
 2033 12fe 40F20003 		movw	r3, #:lower16:state
 2034 1302 C0F20003 		movt	r3, #:upper16:state
 2035 1306 4FF00402 		mov	r2, #4
 2036 130a 1A60     		str	r2, [r3, #0]
 2037              	.L76:
 556:../src/interrupt_defs.cpp **** 				}
 557:../src/interrupt_defs.cpp **** 			}
 558:../src/interrupt_defs.cpp **** 		}
 559:../src/interrupt_defs.cpp **** 		if(state == ST_REDO_FIREFIGHT)
 2038              		.loc 1 559 0
 2039 130c 40F20003 		movw	r3, #:lower16:state
 2040 1310 C0F20003 		movt	r3, #:upper16:state
 2041 1314 1B68     		ldr	r3, [r3, #0]
 2042 1316 052B     		cmp	r3, #5
 2043 1318 1BD1     		bne	.L114
 560:../src/interrupt_defs.cpp **** 		{
 561:../src/interrupt_defs.cpp **** 			if(match_time_counter > 1.5f)
 2044              		.loc 1 561 0
 2045 131a 40F20003 		movw	r3, #:lower16:match_time_counter
 2046 131e C0F20003 		movt	r3, #:upper16:match_time_counter
 2047 1322 93ED007A 		flds	s14, [r3, #0]
 2048 1326 F7EE087A 		fconsts	s15, #120
 2049 132a B4EEE77A 		fcmpes	s14, s15
 2050 132e F1EE10FA 		fmstat
 2051 1332 0EDD     		ble	.L114
 2052              	.L138:
 562:../src/interrupt_defs.cpp **** 			{
 563:../src/interrupt_defs.cpp **** 				pwm1_output(0.5f);
 2053              		.loc 1 563 0
 2054 1334 4FF07C50 		mov	r0, #1056964608
 2055 1338 FFF7FEFF 		bl	_Z11pwm1_outputf
 564:../src/interrupt_defs.cpp **** 				pwm2_output(0.5f);
 2056              		.loc 1 564 0
 2057 133c 4FF07C50 		mov	r0, #1056964608
 2058 1340 FFF7FEFF 		bl	_Z11pwm2_outputf
 565:../src/interrupt_defs.cpp **** 				state = ST_HOMING;
 2059              		.loc 1 565 0
 2060 1344 40F20003 		movw	r3, #:lower16:state
 2061 1348 C0F20003 		movt	r3, #:upper16:state
 2062 134c 4FF00102 		mov	r2, #1
 2063 1350 1A60     		str	r2, [r3, #0]
 2064              	.L114:
 566:../src/interrupt_defs.cpp **** 			}
 567:../src/interrupt_defs.cpp **** 		}
 568:../src/interrupt_defs.cpp **** 		if(state == ST_WANDER || state == ST_HOMING || state == ST_CANDLE_BLOWOUT) {
 2065              		.loc 1 568 0
 2066 1352 40F20003 		movw	r3, #:lower16:state
 2067 1356 C0F20003 		movt	r3, #:upper16:state
 2068 135a 1B68     		ldr	r3, [r3, #0]
 2069 135c 002B     		cmp	r3, #0
 2070 135e 0DD0     		beq	.L116
 2071              		.loc 1 568 0 is_stmt 0 discriminator 1
 2072 1360 40F20003 		movw	r3, #:lower16:state
 2073 1364 C0F20003 		movt	r3, #:upper16:state
 2074 1368 1B68     		ldr	r3, [r3, #0]
 2075 136a 012B     		cmp	r3, #1
 2076 136c 06D0     		beq	.L116
 2077              		.loc 1 568 0 discriminator 2
 2078 136e 40F20003 		movw	r3, #:lower16:state
 2079 1372 C0F20003 		movt	r3, #:upper16:state
 2080 1376 1B68     		ldr	r3, [r3, #0]
 2081 1378 032B     		cmp	r3, #3
 2082 137a 19D1     		bne	.L60
 2083              	.L116:
 569:../src/interrupt_defs.cpp **** 		pwm1_output(left);
 2084              		.loc 1 569 0 is_stmt 1
 2085 137c 40F20003 		movw	r3, #:lower16:left
 2086 1380 C0F20003 		movt	r3, #:upper16:left
 2087 1384 1B68     		ldr	r3, [r3, #0]	@ float
 2088 1386 1846     		mov	r0, r3	@ float
 2089 1388 FFF7FEFF 		bl	_Z11pwm1_outputf
 570:../src/interrupt_defs.cpp **** 		pwm2_output(right);
 2090              		.loc 1 570 0
 2091 138c 40F20003 		movw	r3, #:lower16:right
 2092 1390 C0F20003 		movt	r3, #:upper16:right
 2093 1394 1B68     		ldr	r3, [r3, #0]	@ float
 2094 1396 1846     		mov	r0, r3	@ float
 2095 1398 FFF7FEFF 		bl	_Z11pwm2_outputf
 571:../src/interrupt_defs.cpp **** 		last_err = err;
 2096              		.loc 1 571 0
 2097 139c 40F20003 		movw	r3, #:lower16:err
 2098 13a0 C0F20003 		movt	r3, #:upper16:err
 2099 13a4 1A68     		ldr	r2, [r3, #0]	@ float
 2100 13a6 40F20003 		movw	r3, #:lower16:last_err
 2101 13aa C0F20003 		movt	r3, #:upper16:last_err
 2102 13ae 1A60     		str	r2, [r3, #0]	@ float
 2103              	.L60:
 2104              	.LBE11:
 572:../src/interrupt_defs.cpp **** 		}
 573:../src/interrupt_defs.cpp **** 	}
 2105              		.loc 1 573 0
 2106 13b0 07F10807 		add	r7, r7, #8
 2107 13b4 BD46     		mov	sp, r7
 2108 13b6 80BD     		pop	{r7, pc}
 2109              		.cfi_endproc
 2110              	.LFE119:
 2112              	.Letext0:
 2113              		.file 2 "/home/aghosh01/gcc-arm-none-eabi-4_7-2012q4/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../.
 2114              		.file 3 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x.h"
 2115              		.file 4 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x_exti.h"
 2116              		.file 5 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x_gpio.h"
 2117              		.file 6 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x_misc.h"
 2118              		.file 7 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/Robot/encoder.h"
 2119              		.file 8 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 interrupt_defs.cpp
     /tmp/cc2rk5e0.s:23     .text:00000000 $t
     /tmp/cc2rk5e0.s:28     .text:00000000 TIM7_IRQHandler
     /tmp/cc2rk5e0.s:430    .text:00000438 $d
     /tmp/cc2rk5e0.s:441    .text:0000045c $t
     /tmp/cc2rk5e0.s:1254   .text:00000a68 update_pid
     /tmp/cc2rk5e0.s:480    .text:000004b0 TIM1_TRG_COM_TIM17_IRQHandler
     /tmp/cc2rk5e0.s:649    .text:000005fc TIM6_DAC_IRQHandler
     /tmp/cc2rk5e0.s:890    .text:00000824 ADC1_2_IRQHandler
     /tmp/cc2rk5e0.s:939    .text:00000868 DMA1_Channel1_IRQHandler
     /tmp/cc2rk5e0.s:971    .text:00000884 DMA2_Channel1_IRQHandler
     /tmp/cc2rk5e0.s:1004   .text:000008a4 ADC3_IRQHandler
     /tmp/cc2rk5e0.s:1122   .text:00000990 $d
     /tmp/cc2rk5e0.s:1127   .text:00000998 $t
     /tmp/cc2rk5e0.s:1132   .text:00000998 EXTI9_5_IRQHandler
     /tmp/cc2rk5e0.s:1587   .text:00000e20 $d
     /tmp/cc2rk5e0.s:1600   .text:00000e4c $t
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.934603b1d669cb2b32fd4cb6dd11b673
                           .group:00000000 wm4.common_headers.h.9.0807ea068105522ac6d873d27913cd99
                           .group:00000000 wm4.stm32f30x.h.56.6f19c65e98e3319a61449cb2b2455af5
                           .group:00000000 wm4.core_cm4.h.32.1434cd257ff5806b1b03cd32ab0641e9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.29.013e5bcf58dba2d27c60184174208e07
                           .group:00000000 wm4.core_cm4.h.155.170ad2f92df387b9fa0dc3deabd34ef9
                           .group:00000000 wm4.stm32f30x.h.294.d8a54360eca16e4157694b52a095202d
                           .group:00000000 wm4.stm32f30x_adc.h.130.cbebad91f78fb87381fe0860eea6104e
                           .group:00000000 wm4.stm32f30x_can.h.50.8b8f5d301152c422a6e50622b33ef620
                           .group:00000000 wm4.stm32f30x_crc.h.54.66d4c5e565e18566aebd9abfd4bcd4b0
                           .group:00000000 wm4.stm32f30x_comp.h.91.06ae44150aaaa82c077b71df8db3541a
                           .group:00000000 wm4.stm32f30x_dac.h.49.b1b5b26e4ca241dbe67fa16dc86a615f
                           .group:00000000 wm4.stm32f30x_dbgmcu.h.53.b238a263ce6a2cc83f610cc35302a38b
                           .group:00000000 wm4.stm32f30x_dma.h.96.d7a2ddd10023e12781aa8ff5ac15d212
                           .group:00000000 wm4.stm32f30x_exti.h.60.8ca0809491a21dec6fc69cf7471e2bab
                           .group:00000000 wm4.stm32f30x_flash.h.70.32613455dfe7328932f786a224daac23
                           .group:00000000 wm4.stm32f30x_gpio.h.50.408e1f6250246e4cc28221970909d34c
                           .group:00000000 wm4.stm32f30x_syscfg.h.58.4cadeb4ec8e47d36b972bbb6b96b7161
                           .group:00000000 wm4.stm32f30x_i2c.h.86.3d51d4edc0e3b9ee9aae045ccbb7739a
                           .group:00000000 wm4.stm32f30x_iwdg.h.59.467d704fb073a015941f19b50fa6470a
                           .group:00000000 wm4.stm32f30x_opamp.h.75.704e2e5e2aab039de307aaa2dcc99fa5
                           .group:00000000 wm4.stm32f30x_pwr.h.59.5c85acff2a3e3c5085b2140c06025cfc
                           .group:00000000 wm4.stm32f30x_rcc.h.79.5ba7cac1e74879861a72556c25322aa4
                           .group:00000000 wm4.stm32f30x_rtc.h.133.d184e08ff40bda44db4bed94f9633384
                           .group:00000000 wm4.stm32f30x_spi.h.119.4d21ec94ec14f3553a127e61c0a9874f
                           .group:00000000 wm4.stm32f30x_tim.h.175.d4a93cff2e7924577147254e501271b6
                           .group:00000000 wm4.stm32f30x_usart.h.110.c89016273702821ff4f9fe43881f70b5
                           .group:00000000 wm4.stm32f30x_wwdg.h.58.4688eee61a2709866472b4b4c07d9275
                           .group:00000000 wm4.stm32f30x_misc.h.113.6a52e4fe7c3825a3ab05990f30dddf92
                           .group:00000000 wm4.stm32f3_discovery_l3gd20.h.98.ce6c56e3c59772d76fdcff14d2dcb612
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.fa6206289f154965d075fc01e2867808
                           .group:00000000 wm4._default_types.h.6.1dbd2e581fd590860c7c17f21d147e91
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.math.h.35.4ec5c5df469deeb27bddb969fc54c06a
                           .group:00000000 wm4.encoder.h.14.d5e5872c27905990847e2dff40a1b2fe

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_dmul
__aeabi_dcmpgt
__aeabi_dcmplt
TIM_ClearITPendingBit
left_enc
right_enc
TIM_GetCounter
TIM_SetCounter
_Z11pwm2_outputf
_Z11pwm1_outputf
state
match_time_counter
EXTI_Init
GPIO_Init
GPIO_WriteBit
stage
NVIC_Init
led_matrix
GPIO_Write
led_iter
ADC_GetITStatus
ADC_GetConversionValue
adcval
ADC_ClearITPendingBit
DMA_ClearITPendingBit
new_data
adc2_new_data
adc3_awd1
adc3_awd2
EXTI_ClearITPendingBit
TIM_Cmd
count
__aeabi_f2d
d_front
adcData
adc2_data
err
last_err
diff_err
integral
drive_cmd
rt
left
right
t_firefight_start
_Z11pwm3_outputf
