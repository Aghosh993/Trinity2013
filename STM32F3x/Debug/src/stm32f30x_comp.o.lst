   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f30x_comp.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.align	2
  20              		.global	COMP_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	COMP_DeInit:
  25              	.LFB111:
  26              		.file 1 "../src/stm32f30x_comp.c"
   1:../src/stm32f30x_comp.c **** /**
   2:../src/stm32f30x_comp.c ****   ******************************************************************************
   3:../src/stm32f30x_comp.c ****   * @file    stm32f30x_comp.c
   4:../src/stm32f30x_comp.c ****   * @author  MCD Application Team
   5:../src/stm32f30x_comp.c ****   * @version V1.0.1
   6:../src/stm32f30x_comp.c ****   * @date    23-October-2012
   7:../src/stm32f30x_comp.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../src/stm32f30x_comp.c ****   *          functionalities of the 7 analog comparators (COMP1, COMP2...COMP7) peripheral: 
   9:../src/stm32f30x_comp.c ****   *           + Comparators configuration
  10:../src/stm32f30x_comp.c ****   *           + Window mode control
  11:../src/stm32f30x_comp.c ****   *
  12:../src/stm32f30x_comp.c ****   @verbatim
  13:../src/stm32f30x_comp.c ****    
  14:../src/stm32f30x_comp.c ****   ==============================================================================
  15:../src/stm32f30x_comp.c ****                         ##### COMP Peripheral features #####
  16:../src/stm32f30x_comp.c ****   ==============================================================================
  17:../src/stm32f30x_comp.c ****   [..]       
  18:../src/stm32f30x_comp.c ****       The device integrates 7 analog comparators COMP1, COMP2...COMP7:
  19:../src/stm32f30x_comp.c ****       (#) The non inverting input and inverting input can be set to GPIO pins
  20:../src/stm32f30x_comp.c ****           as shown in table1. COMP Inputs below.
  21:../src/stm32f30x_comp.c ****   
  22:../src/stm32f30x_comp.c ****       (#) The COMP output is internally is available using COMP_GetOutputLevel()
  23:../src/stm32f30x_comp.c ****           and can be set on GPIO pins. Refer to table 2. COMP Outputs below.
  24:../src/stm32f30x_comp.c ****   
  25:../src/stm32f30x_comp.c ****       (#) The COMP output can be redirected to embedded timers (TIM1, TIM2, TIM3...)
  26:../src/stm32f30x_comp.c ****           Refer to table 3. COMP Outputs redirection to embedded timers below.
  27:../src/stm32f30x_comp.c ****   
  28:../src/stm32f30x_comp.c ****       (#) The comparators COMP1 and COMP2, COMP3 and COMP4, COMP5 and COMP6 can be combined in wind
  29:../src/stm32f30x_comp.c ****           mode and only COMP1, COMP3 and COMP5 non inverting input can be used as non-inverting inp
  30:../src/stm32f30x_comp.c ****   
  31:../src/stm32f30x_comp.c ****       (#) The seven comparators have interrupt capability with wake-up
  32:../src/stm32f30x_comp.c ****           from Sleep and Stop modes (through the EXTI controller):
  33:../src/stm32f30x_comp.c ****           (++) COMP1 is internally connected to EXTI Line 21
  34:../src/stm32f30x_comp.c ****           (++) COMP2 is internally connected to EXTI Line 22
  35:../src/stm32f30x_comp.c ****           (++) COMP3 is internally connected to EXTI Line 29
  36:../src/stm32f30x_comp.c ****           (++) COMP4 is internally connected to EXTI Line 30
  37:../src/stm32f30x_comp.c ****           (++) COMP5 is internally connected to EXTI Line 31
  38:../src/stm32f30x_comp.c ****           (++) COMP6 is internally connected to EXTI Line 32
  39:../src/stm32f30x_comp.c ****           (++) COMP7 is internally connected to EXTI Line 33
  40:../src/stm32f30x_comp.c **** 
  41:../src/stm32f30x_comp.c ****  [..] Table 1. COMP Inputs
  42:../src/stm32f30x_comp.c ****  +------------------------------------------------------------------------------------------+     
  43:../src/stm32f30x_comp.c ****  |                 |                | COMP1 | COMP2 | COMP3 | COMP4 | COMP5 | COMP6 | COMP7 |
  44:../src/stm32f30x_comp.c ****  |-----------------|----------------|---------------|---------------------------------------|
  45:../src/stm32f30x_comp.c ****  |                 | 1/4 VREFINT    |  OK   |  OK   |  OK   |  OK   |  OK   |  OK   |  OK   |
  46:../src/stm32f30x_comp.c ****  |                 | 1/2 VREFINT    |  OK   |  OK   |  OK   |  OK   |  OK   |  OK   |  OK   |
  47:../src/stm32f30x_comp.c ****  |                 | 3/4 VREFINT    |  OK   |  OK   |  OK   |  OK   |  OK   |  OK   |  OK   |
  48:../src/stm32f30x_comp.c ****  | Inverting Input | VREFINT        |  OK   |  OK   |  OK   |  OK   |  OK   |  OK   |  OK   |
  49:../src/stm32f30x_comp.c ****  |                 | DAC1 OUT (PA4) |  OK   |  OK   |  OK   |  OK   |  OK   |  OK   |  OK   |
  50:../src/stm32f30x_comp.c ****  |                 | DAC2 OUT (PA5) |  OK   |  OK   |  OK   |  OK   |  OK   |  OK   |  OK   |
  51:../src/stm32f30x_comp.c ****  |                 | IO1            |  PA0  |  PA2  |  PD15 |  PE8  |  PD13 |  PD10 |  PC0  |
  52:../src/stm32f30x_comp.c ****  |                 | IO2            |  ---  |  ---  |  PB12 |  PB2  |  PB10 |  PB15 |  ---  |
  53:../src/stm32f30x_comp.c ****  |-----------------|----------------|-------|-------|-------|-------|-------|-------|-------|
  54:../src/stm32f30x_comp.c ****  |  Non Inverting  | IO1            |  PA1  |  PA7  |  PB14 |  PB0  |  PD12 |  PD11 |  PA0  |
  55:../src/stm32f30x_comp.c ****  |    Input        | IO2            |  ---  |  PA3  |  PD14 |  PE7  |  PB13 |  PB11 |  PC1  |
  56:../src/stm32f30x_comp.c ****  +------------------------------------------------------------------------------------------+  
  57:../src/stm32f30x_comp.c **** 
  58:../src/stm32f30x_comp.c ****  [..] Table 2. COMP Outputs
  59:../src/stm32f30x_comp.c ****  +-------------------------------------------------------+     
  60:../src/stm32f30x_comp.c ****  | COMP1 | COMP2 | COMP3 | COMP4 | COMP5 | COMP6 | COMP7 |
  61:../src/stm32f30x_comp.c ****  |-------|-------|-------|-------|-------|-------|-------|
  62:../src/stm32f30x_comp.c ****  |  PA0  |  PA2  |  PB1  |  PC8  |  PC7  |  PA10 |  PC2  |
  63:../src/stm32f30x_comp.c ****  |  PF4  |  PA7  |  ---  |  PA8  |  PA9  |  PC6  |  ---  |
  64:../src/stm32f30x_comp.c ****  |  PA6  |  PA12 |  ---  |  ---  |  ---  |  ---  |  ---  |
  65:../src/stm32f30x_comp.c ****  |  PA11 |  PB9  |  ---  |  ---  |  ---  |  ---  |  ---  |
  66:../src/stm32f30x_comp.c ****  |  PB8  |  ---  |  ---  |  ---  |  ---  |  ---  |  ---  |
  67:../src/stm32f30x_comp.c ****  +-------------------------------------------------------+
  68:../src/stm32f30x_comp.c **** 
  69:../src/stm32f30x_comp.c ****  [..] Table 3. COMP Outputs redirection to embedded timers
  70:../src/stm32f30x_comp.c ****  +-------------------------------------------------------------------------------------------------
  71:../src/stm32f30x_comp.c ****  |     COMP1      |     COMP2      |     COMP3      |     COMP4      |     COMP5      |     COMP6  
  72:../src/stm32f30x_comp.c ****  |----------------|----------------|----------------|----------------|----------------|------------
  73:../src/stm32f30x_comp.c ****  |  TIM1 BKIN     |  TIM1 BKIN     |  TIM1 BKIN     |  TIM1 BKIN     |  TIM1 BKIN     |  TIM1 BKIN 
  74:../src/stm32f30x_comp.c ****  |                |                |                |                |                |            
  75:../src/stm32f30x_comp.c ****  |  TIM1 BKIN2    |  TIM1 BKIN2    |  TIM1 BKIN2    |  TIM1 BKIN2    |  TIM1 BKIN2    |  TIM1 BKIN2
  76:../src/stm32f30x_comp.c ****  |                |                |                |                |                |            
  77:../src/stm32f30x_comp.c ****  |  TIM8 BKIN     |  TIM8 BKIN     |  TIM8 BKIN     |  TIM8 BKIN     |  TIM8 BKIN     |  TIM8 BKIN 
  78:../src/stm32f30x_comp.c ****  |                |                |                |                |                |            
  79:../src/stm32f30x_comp.c ****  |  TIM8 BKIN2    |  TIM8 BKIN2    |  TIM8 BKIN2    |  TIM8 BKIN2    |  TIM8 BKIN2    |  TIM8 BKIN2
  80:../src/stm32f30x_comp.c ****  |                |                |                |                |                |            
  81:../src/stm32f30x_comp.c ****  |  TIM1 BKIN2    |  TIM1 BKIN2    |  TIM1 BKIN2    |  TIM1 BKIN2    |  TIM1 BKIN2    |  TIM1 BKIN2
  82:../src/stm32f30x_comp.c ****  |     +          |     +          |     +          |     +          |     +          |     +      
  83:../src/stm32f30x_comp.c ****  |  TIM8BKIN2     |  TIM8BKIN2     |  TIM8BKIN2     |  TIM8BKIN2     |  TIM8BKIN2     |  TIM8BKIN2 
  84:../src/stm32f30x_comp.c ****  |                |                |                |                |                |            
  85:../src/stm32f30x_comp.c ****  |  TIM1 OCREFCLR |  TIM1 OCREFCLR |  TIM1 OCREFCLR |  TIM8 OCREFCLR |  TIM8 OCREFCLR |  TIM8 OCREF
  86:../src/stm32f30x_comp.c ****  |                |                |                |                |                |            
  87:../src/stm32f30x_comp.c ****  |  TIM1 IC1      |  TIM1 IC1      |  TIM2 OCREFCLR |  TIM3 IC3      |  TIM2 IC1      |  TIM2 IC2  
  88:../src/stm32f30x_comp.c ****  |                |                |                |                |                |            
  89:../src/stm32f30x_comp.c ****  |  TIM2 IC4      |  TIM2 IC4      |  TIM3 IC2      |  TIM3 OCREFCLR |  TIM3 OCREFCLR |  TIM2 OCREF
  90:../src/stm32f30x_comp.c ****  |                |                |                |                |                |            
  91:../src/stm32f30x_comp.c ****  |  TIM2 OCREFCLR |  TIM2 OCREFCLR |  TIM4 IC1      |  TIM4 IC2      |  TIM4 IC3      |  TIM16 OCRE
  92:../src/stm32f30x_comp.c ****  |                |                |                |                |                |            
  93:../src/stm32f30x_comp.c ****  |  TIM3 IC1      |  TIM3 IC1      |  TIM15 IC1     |  TIM15 OCREFCLR|  TIM16 BKIN    |  TIM16 IC1 
  94:../src/stm32f30x_comp.c ****  |                |                |                |                |                |            
  95:../src/stm32f30x_comp.c ****  |  TIM3 OCREFCLR |  TIM3 OCREFCLR |  TIM15 BKIN    |  TIM15 IC2     |  TIM17 IC1     |  TIM4 IC4  
  96:../src/stm32f30x_comp.c ****  +-------------------------------------------------------------------------------------------------
  97:../src/stm32f30x_comp.c **** 
  98:../src/stm32f30x_comp.c ****  [..] Table 4. COMP Outputs blanking sources
  99:../src/stm32f30x_comp.c ****  +-------------------------------------------------------------------------------------------------
 100:../src/stm32f30x_comp.c ****  |     COMP1      |     COMP2      |     COMP3      |     COMP4      |     COMP5      |     COMP6  
 101:../src/stm32f30x_comp.c ****  |----------------|----------------|----------------|----------------|----------------|------------
 102:../src/stm32f30x_comp.c ****  |  TIM1 OC5      |  TIM1 OC5      |  TIM1 OC5      |  TIM3 OC4      |  TIM3 OC3      |  TIM2 OC4  
 103:../src/stm32f30x_comp.c ****  |                |                |                |                |                |            
 104:../src/stm32f30x_comp.c ****  |  TIM2 OC3      |  TIM2 OC3      |  --------      |  TIM8 OC5      |  TIM8 OC5      |  TIM8 OC5  
 105:../src/stm32f30x_comp.c ****  |                |                |                |                |                |            
 106:../src/stm32f30x_comp.c ****  |  TIM3 OC3      |  TIM3 OC3      |  TIM2 OC4      |  TIM15 OC1     |  TIM8 BKIN     |  TIM15 OC2 
 107:../src/stm32f30x_comp.c ****  |                |                |                |                |                |            
 108:../src/stm32f30x_comp.c ****  +-------------------------------------------------------------------------------------------------
 109:../src/stm32f30x_comp.c **** 
 110:../src/stm32f30x_comp.c ****   
 111:../src/stm32f30x_comp.c ****                          ##### How to use this driver #####
 112:../src/stm32f30x_comp.c ****   ==============================================================================
 113:../src/stm32f30x_comp.c ****   [..]
 114:../src/stm32f30x_comp.c ****   This driver provides functions to configure and program the Comparators 
 115:../src/stm32f30x_comp.c ****   of all STM32F30x devices.
 116:../src/stm32f30x_comp.c ****   
 117:../src/stm32f30x_comp.c ****   To use the comparator, perform the following steps:
 118:../src/stm32f30x_comp.c ****   
 119:../src/stm32f30x_comp.c ****   (#) Enable the SYSCFG APB clock to get write access to comparator
 120:../src/stm32f30x_comp.c ****       register using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
 121:../src/stm32f30x_comp.c ****   
 122:../src/stm32f30x_comp.c ****   (#) Configure the comparator input in analog mode using GPIO_Init()
 123:../src/stm32f30x_comp.c ****   
 124:../src/stm32f30x_comp.c ****   (#) Configure the comparator output in alternate function mode
 125:../src/stm32f30x_comp.c ****       using GPIO_Init() and use GPIO_PinAFConfig() function to map the
 126:../src/stm32f30x_comp.c ****       comparator output to the GPIO pin
 127:../src/stm32f30x_comp.c ****   
 128:../src/stm32f30x_comp.c ****   (#) Configure the comparator using COMP_Init() function:
 129:../src/stm32f30x_comp.c ****       (++) Select the inverting input
 130:../src/stm32f30x_comp.c ****       (++) Select the non-inverting input
 131:../src/stm32f30x_comp.c ****       (++) Select the output polarity  
 132:../src/stm32f30x_comp.c ****       (++) Select the output redirection
 133:../src/stm32f30x_comp.c ****       (++) Select the hysteresis level
 134:../src/stm32f30x_comp.c ****       (++) Select the power mode
 135:../src/stm32f30x_comp.c ****   
 136:../src/stm32f30x_comp.c ****   (#) Enable the comparator using COMP_Cmd() function
 137:../src/stm32f30x_comp.c ****   
 138:../src/stm32f30x_comp.c ****   (#) If required enable the COMP interrupt by configuring and enabling
 139:../src/stm32f30x_comp.c ****       EXTI line in Interrupt mode and selecting the desired sensitivity
 140:../src/stm32f30x_comp.c ****       level using EXTI_Init() function. After that enable the comparator
 141:../src/stm32f30x_comp.c ****       interrupt vector using NVIC_Init() function.
 142:../src/stm32f30x_comp.c **** 
 143:../src/stm32f30x_comp.c ****   @endverbatim
 144:../src/stm32f30x_comp.c ****   *    
 145:../src/stm32f30x_comp.c ****   ******************************************************************************
 146:../src/stm32f30x_comp.c ****   * @attention
 147:../src/stm32f30x_comp.c ****   *
 148:../src/stm32f30x_comp.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
 149:../src/stm32f30x_comp.c ****   *
 150:../src/stm32f30x_comp.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
 151:../src/stm32f30x_comp.c ****   * You may not use this file except in compliance with the License.
 152:../src/stm32f30x_comp.c ****   * You may obtain a copy of the License at:
 153:../src/stm32f30x_comp.c ****   *
 154:../src/stm32f30x_comp.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 155:../src/stm32f30x_comp.c ****   *
 156:../src/stm32f30x_comp.c ****   * Unless required by applicable law or agreed to in writing, software 
 157:../src/stm32f30x_comp.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 158:../src/stm32f30x_comp.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 159:../src/stm32f30x_comp.c ****   * See the License for the specific language governing permissions and
 160:../src/stm32f30x_comp.c ****   * limitations under the License.
 161:../src/stm32f30x_comp.c ****   *
 162:../src/stm32f30x_comp.c ****   ******************************************************************************
 163:../src/stm32f30x_comp.c ****   */ 
 164:../src/stm32f30x_comp.c **** 
 165:../src/stm32f30x_comp.c **** /* Includes ------------------------------------------------------------------*/
 166:../src/stm32f30x_comp.c **** #include "stm32f30x_comp.h"
 167:../src/stm32f30x_comp.c **** 
 168:../src/stm32f30x_comp.c **** /** @addtogroup STM32F30x_StdPeriph_Driver
 169:../src/stm32f30x_comp.c ****   * @{
 170:../src/stm32f30x_comp.c ****   */
 171:../src/stm32f30x_comp.c **** 
 172:../src/stm32f30x_comp.c **** /** @defgroup COMP 
 173:../src/stm32f30x_comp.c ****   * @brief COMP driver modules
 174:../src/stm32f30x_comp.c ****   * @{
 175:../src/stm32f30x_comp.c ****   */ 
 176:../src/stm32f30x_comp.c **** 
 177:../src/stm32f30x_comp.c **** /* Private typedef -----------------------------------------------------------*/
 178:../src/stm32f30x_comp.c **** /* Private define ------------------------------------------------------------*/
 179:../src/stm32f30x_comp.c **** /* CSR register Mask */
 180:../src/stm32f30x_comp.c **** #define COMP_CSR_CLEAR_MASK              ((uint32_t)0x00000003)
 181:../src/stm32f30x_comp.c **** 
 182:../src/stm32f30x_comp.c **** /* Private macro -------------------------------------------------------------*/
 183:../src/stm32f30x_comp.c **** /* Private variables ---------------------------------------------------------*/
 184:../src/stm32f30x_comp.c **** /* Private function prototypes -----------------------------------------------*/
 185:../src/stm32f30x_comp.c **** /* Private functions ---------------------------------------------------------*/
 186:../src/stm32f30x_comp.c **** 
 187:../src/stm32f30x_comp.c **** /** @defgroup COMP_Private_Functions
 188:../src/stm32f30x_comp.c ****   * @{
 189:../src/stm32f30x_comp.c ****   */
 190:../src/stm32f30x_comp.c **** 
 191:../src/stm32f30x_comp.c **** /** @defgroup COMP_Group1 Initialization and Configuration functions
 192:../src/stm32f30x_comp.c ****  *  @brief   Initialization and Configuration functions 
 193:../src/stm32f30x_comp.c ****  *
 194:../src/stm32f30x_comp.c **** @verbatim   
 195:../src/stm32f30x_comp.c ****  ===============================================================================
 196:../src/stm32f30x_comp.c ****             ##### Initialization and Configuration functions #####
 197:../src/stm32f30x_comp.c ****  ===============================================================================  
 198:../src/stm32f30x_comp.c **** 
 199:../src/stm32f30x_comp.c **** @endverbatim
 200:../src/stm32f30x_comp.c ****   * @{
 201:../src/stm32f30x_comp.c ****   */
 202:../src/stm32f30x_comp.c ****    
 203:../src/stm32f30x_comp.c **** /**
 204:../src/stm32f30x_comp.c ****   * @brief  Deinitializes COMP peripheral registers to their default reset values.
 205:../src/stm32f30x_comp.c ****   * @note   Deinitialization can't be performed if the COMP configuration is locked.
 206:../src/stm32f30x_comp.c ****   *         To unlock the configuration, perform a system reset.
 207:../src/stm32f30x_comp.c ****   * @param  COMP_Selection: the selected comparator. 
 208:../src/stm32f30x_comp.c ****   *          This parameter can be COMP_Selection_COMPx where x can be 1 to 7
 209:../src/stm32f30x_comp.c ****   *          to select the COMP peripheral.
 210:../src/stm32f30x_comp.c ****   * @param  None
 211:../src/stm32f30x_comp.c ****   * @retval None
 212:../src/stm32f30x_comp.c ****   */
 213:../src/stm32f30x_comp.c **** void COMP_DeInit(uint32_t COMP_Selection)
 214:../src/stm32f30x_comp.c **** {
  27              		.loc 1 214 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 215:../src/stm32f30x_comp.c ****   /*!< Set COMP_CSR register to reset value */
 216:../src/stm32f30x_comp.c ****   *(__IO uint32_t *) (COMP_BASE + COMP_Selection) = ((uint32_t)0x00000000);
  43              		.loc 1 216 0
  44 0008 7A68     		ldr	r2, [r7, #4]
  45 000a 4FF01C03 		mov	r3, #28
  46 000e C4F20103 		movt	r3, 16385
  47 0012 D318     		adds	r3, r2, r3
  48 0014 4FF00002 		mov	r2, #0
  49 0018 1A60     		str	r2, [r3, #0]
 217:../src/stm32f30x_comp.c **** }
  50              		.loc 1 217 0
  51 001a 07F10C07 		add	r7, r7, #12
  52 001e BD46     		mov	sp, r7
  53 0020 80BC     		pop	{r7}
  54 0022 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE111:
  58              		.align	2
  59              		.global	COMP_Init
  60              		.thumb
  61              		.thumb_func
  63              	COMP_Init:
  64              	.LFB112:
 218:../src/stm32f30x_comp.c **** 
 219:../src/stm32f30x_comp.c **** /**
 220:../src/stm32f30x_comp.c ****   * @brief  Initializes the COMP peripheral according to the specified parameters
 221:../src/stm32f30x_comp.c ****   *         in COMP_InitStruct
 222:../src/stm32f30x_comp.c ****   * @note   If the selected comparator is locked, initialization can't be performed.
 223:../src/stm32f30x_comp.c ****   *         To unlock the configuration, perform a system reset.
 224:../src/stm32f30x_comp.c ****   * @note   By default, PA1 is selected as COMP1 non inverting input.
 225:../src/stm32f30x_comp.c ****   *         To use PA4 as COMP1 non inverting input call COMP_SwitchCmd() after COMP_Init()
 226:../src/stm32f30x_comp.c ****   * @param  COMP_Selection: the selected comparator. 
 227:../src/stm32f30x_comp.c ****   *          This parameter can be COMP_Selection_COMPx where x can be 1 to 7
 228:../src/stm32f30x_comp.c ****   *          to select the COMP peripheral.
 229:../src/stm32f30x_comp.c ****   * @param  COMP_InitStruct: pointer to an COMP_InitTypeDef structure that contains 
 230:../src/stm32f30x_comp.c ****   *         the configuration information for the specified COMP peripheral.
 231:../src/stm32f30x_comp.c ****   *           - COMP_InvertingInput specifies the inverting input of COMP
 232:../src/stm32f30x_comp.c ****   *           - COMP_NonInvertingInput specifies the non inverting input of COMP
 233:../src/stm32f30x_comp.c ****   *           - COMP_Output connect COMP output to selected timer
 234:../src/stm32f30x_comp.c ****   *             input (Input capture / Output Compare Reference Clear / Break Input)
 235:../src/stm32f30x_comp.c ****   *           - COMP_BlankingSrce specifies the blanking source of COMP
 236:../src/stm32f30x_comp.c ****   *           - COMP_OutputPol select output polarity
 237:../src/stm32f30x_comp.c ****   *           - COMP_Hysteresis configures COMP hysteresis value
 238:../src/stm32f30x_comp.c ****   *           - COMP_Mode configures COMP power mode
 239:../src/stm32f30x_comp.c ****   * @retval None
 240:../src/stm32f30x_comp.c ****   */
 241:../src/stm32f30x_comp.c **** void COMP_Init(uint32_t COMP_Selection, COMP_InitTypeDef* COMP_InitStruct)
 242:../src/stm32f30x_comp.c **** {
  65              		.loc 1 242 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 16
  68              		@ frame_needed = 1, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  70 0024 80B4     		push	{r7}
  71              	.LCFI3:
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 7, -4
  74 0026 85B0     		sub	sp, sp, #20
  75              	.LCFI4:
  76              		.cfi_def_cfa_offset 24
  77 0028 00AF     		add	r7, sp, #0
  78              	.LCFI5:
  79              		.cfi_def_cfa_register 7
  80 002a 7860     		str	r0, [r7, #4]
  81 002c 3960     		str	r1, [r7, #0]
 243:../src/stm32f30x_comp.c ****   uint32_t tmpreg = 0;
  82              		.loc 1 243 0
  83 002e 4FF00003 		mov	r3, #0
  84 0032 FB60     		str	r3, [r7, #12]
 244:../src/stm32f30x_comp.c **** 
 245:../src/stm32f30x_comp.c ****   /* Check the parameters */
 246:../src/stm32f30x_comp.c ****   assert_param(IS_COMP_ALL_PERIPH(COMP_Selection));
 247:../src/stm32f30x_comp.c ****   assert_param(IS_COMP_INVERTING_INPUT(COMP_InitStruct->COMP_InvertingInput));
 248:../src/stm32f30x_comp.c ****   assert_param(IS_COMP_NONINVERTING_INPUT(COMP_InitStruct->COMP_NonInvertingInput));
 249:../src/stm32f30x_comp.c ****   assert_param(IS_COMP_OUTPUT(COMP_InitStruct->COMP_Output));
 250:../src/stm32f30x_comp.c ****   assert_param(IS_COMP_BLANKING_SOURCE(COMP_InitStruct->COMP_BlankingSrce));
 251:../src/stm32f30x_comp.c ****   assert_param(IS_COMP_OUTPUT_POL(COMP_InitStruct->COMP_OutputPol));
 252:../src/stm32f30x_comp.c ****   assert_param(IS_COMP_HYSTERESIS(COMP_InitStruct->COMP_Hysteresis));
 253:../src/stm32f30x_comp.c ****   assert_param(IS_COMP_MODE(COMP_InitStruct->COMP_Mode));
 254:../src/stm32f30x_comp.c **** 
 255:../src/stm32f30x_comp.c ****   /*!< Get the COMPx_CSR register value */
 256:../src/stm32f30x_comp.c ****   tmpreg = *(__IO uint32_t *) (COMP_BASE + COMP_Selection);
  85              		.loc 1 256 0
  86 0034 7A68     		ldr	r2, [r7, #4]
  87 0036 4FF01C03 		mov	r3, #28
  88 003a C4F20103 		movt	r3, 16385
  89 003e D318     		adds	r3, r2, r3
  90 0040 1B68     		ldr	r3, [r3, #0]
  91 0042 FB60     		str	r3, [r7, #12]
 257:../src/stm32f30x_comp.c **** 
 258:../src/stm32f30x_comp.c ****   /*!< Clear the COMP1SW1, COMPxINSEL, COMPxOUTSEL, COMPxPOL, COMPxHYST and COMPxMODE bits */
 259:../src/stm32f30x_comp.c ****   tmpreg &= (uint32_t) (COMP_CSR_CLEAR_MASK);
  92              		.loc 1 259 0
  93 0044 FB68     		ldr	r3, [r7, #12]
  94 0046 03F00303 		and	r3, r3, #3
  95 004a FB60     		str	r3, [r7, #12]
 260:../src/stm32f30x_comp.c **** 
 261:../src/stm32f30x_comp.c ****   /*!< Configure COMP: inverting input, output redirection, hysteresis value and power mode */
 262:../src/stm32f30x_comp.c ****   /*!< Set COMPxINSEL bits according to COMP_InitStruct->COMP_InvertingInput value */
 263:../src/stm32f30x_comp.c ****   /*!< Set COMPxNONINSEL bits according to COMP_InitStruct->COMP_NonInvertingInput value */
 264:../src/stm32f30x_comp.c ****   /*!< Set COMPxBLANKING bits according to COMP_InitStruct->COMP_BlankingSrce value */
 265:../src/stm32f30x_comp.c ****   /*!< Set COMPxOUTSEL bits according to COMP_InitStruct->COMP_Output value */
 266:../src/stm32f30x_comp.c ****   /*!< Set COMPxPOL bit according to COMP_InitStruct->COMP_OutputPol value */
 267:../src/stm32f30x_comp.c ****   /*!< Set COMPxHYST bits according to COMP_InitStruct->COMP_Hysteresis value */
 268:../src/stm32f30x_comp.c ****   /*!< Set COMPxMODE bits according to COMP_InitStruct->COMP_Mode value */
 269:../src/stm32f30x_comp.c ****   tmpreg |= (uint32_t)(COMP_InitStruct->COMP_InvertingInput | COMP_InitStruct->COMP_NonInvertingInp
  96              		.loc 1 269 0
  97 004c 3B68     		ldr	r3, [r7, #0]
  98 004e 1A68     		ldr	r2, [r3, #0]
  99 0050 3B68     		ldr	r3, [r7, #0]
 100 0052 5B68     		ldr	r3, [r3, #4]
 101 0054 1A43     		orrs	r2, r2, r3
 270:../src/stm32f30x_comp.c ****                         COMP_InitStruct->COMP_Output | COMP_InitStruct->COMP_OutputPol | COMP_InitS
 102              		.loc 1 270 0
 103 0056 3B68     		ldr	r3, [r7, #0]
 104 0058 9B68     		ldr	r3, [r3, #8]
 269:../src/stm32f30x_comp.c ****   tmpreg |= (uint32_t)(COMP_InitStruct->COMP_InvertingInput | COMP_InitStruct->COMP_NonInvertingInp
 105              		.loc 1 269 0
 106 005a 1A43     		orrs	r2, r2, r3
 107              		.loc 1 270 0
 108 005c 3B68     		ldr	r3, [r7, #0]
 109 005e 1B69     		ldr	r3, [r3, #16]
 110 0060 1A43     		orrs	r2, r2, r3
 111 0062 3B68     		ldr	r3, [r7, #0]
 112 0064 DB68     		ldr	r3, [r3, #12]
 113 0066 1A43     		orrs	r2, r2, r3
 271:../src/stm32f30x_comp.c ****                         COMP_InitStruct->COMP_Hysteresis | COMP_InitStruct->COMP_Mode);
 114              		.loc 1 271 0
 115 0068 3B68     		ldr	r3, [r7, #0]
 116 006a 5B69     		ldr	r3, [r3, #20]
 270:../src/stm32f30x_comp.c ****                         COMP_InitStruct->COMP_Output | COMP_InitStruct->COMP_OutputPol | COMP_InitS
 117              		.loc 1 270 0
 118 006c 1A43     		orrs	r2, r2, r3
 119              		.loc 1 271 0
 120 006e 3B68     		ldr	r3, [r7, #0]
 121 0070 9B69     		ldr	r3, [r3, #24]
 269:../src/stm32f30x_comp.c ****   tmpreg |= (uint32_t)(COMP_InitStruct->COMP_InvertingInput | COMP_InitStruct->COMP_NonInvertingInp
 122              		.loc 1 269 0
 123 0072 1343     		orrs	r3, r3, r2
 124 0074 FA68     		ldr	r2, [r7, #12]
 125 0076 1343     		orrs	r3, r3, r2
 126 0078 FB60     		str	r3, [r7, #12]
 272:../src/stm32f30x_comp.c **** 
 273:../src/stm32f30x_comp.c ****   /*!< Write to COMPx_CSR register */
 274:../src/stm32f30x_comp.c ****   *(__IO uint32_t *) (COMP_BASE + COMP_Selection) = tmpreg;
 127              		.loc 1 274 0
 128 007a 7A68     		ldr	r2, [r7, #4]
 129 007c 4FF01C03 		mov	r3, #28
 130 0080 C4F20103 		movt	r3, 16385
 131 0084 D318     		adds	r3, r2, r3
 132 0086 FA68     		ldr	r2, [r7, #12]
 133 0088 1A60     		str	r2, [r3, #0]
 275:../src/stm32f30x_comp.c **** }
 134              		.loc 1 275 0
 135 008a 07F11407 		add	r7, r7, #20
 136 008e BD46     		mov	sp, r7
 137 0090 80BC     		pop	{r7}
 138 0092 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE112:
 142              		.align	2
 143              		.global	COMP_StructInit
 144              		.thumb
 145              		.thumb_func
 147              	COMP_StructInit:
 148              	.LFB113:
 276:../src/stm32f30x_comp.c **** 
 277:../src/stm32f30x_comp.c **** /**
 278:../src/stm32f30x_comp.c ****   * @brief  Fills each COMP_InitStruct member with its default value.
 279:../src/stm32f30x_comp.c ****   * @param  COMP_InitStruct: pointer to an COMP_InitTypeDef structure which will 
 280:../src/stm32f30x_comp.c ****   *         be initialized.
 281:../src/stm32f30x_comp.c ****   * @retval None
 282:../src/stm32f30x_comp.c ****   */
 283:../src/stm32f30x_comp.c **** void COMP_StructInit(COMP_InitTypeDef* COMP_InitStruct)
 284:../src/stm32f30x_comp.c **** {
 149              		.loc 1 284 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 8
 152              		@ frame_needed = 1, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 154 0094 80B4     		push	{r7}
 155              	.LCFI6:
 156              		.cfi_def_cfa_offset 4
 157              		.cfi_offset 7, -4
 158 0096 83B0     		sub	sp, sp, #12
 159              	.LCFI7:
 160              		.cfi_def_cfa_offset 16
 161 0098 00AF     		add	r7, sp, #0
 162              	.LCFI8:
 163              		.cfi_def_cfa_register 7
 164 009a 7860     		str	r0, [r7, #4]
 285:../src/stm32f30x_comp.c ****   COMP_InitStruct->COMP_InvertingInput = COMP_InvertingInput_1_4VREFINT;
 165              		.loc 1 285 0
 166 009c 7B68     		ldr	r3, [r7, #4]
 167 009e 4FF00002 		mov	r2, #0
 168 00a2 1A60     		str	r2, [r3, #0]
 286:../src/stm32f30x_comp.c ****   COMP_InitStruct->COMP_NonInvertingInput = COMP_NonInvertingInput_IO1;
 169              		.loc 1 286 0
 170 00a4 7B68     		ldr	r3, [r7, #4]
 171 00a6 4FF00002 		mov	r2, #0
 172 00aa 5A60     		str	r2, [r3, #4]
 287:../src/stm32f30x_comp.c ****   COMP_InitStruct->COMP_Output = COMP_Output_None;
 173              		.loc 1 287 0
 174 00ac 7B68     		ldr	r3, [r7, #4]
 175 00ae 4FF00002 		mov	r2, #0
 176 00b2 9A60     		str	r2, [r3, #8]
 288:../src/stm32f30x_comp.c ****   COMP_InitStruct->COMP_BlankingSrce = COMP_BlankingSrce_None;
 177              		.loc 1 288 0
 178 00b4 7B68     		ldr	r3, [r7, #4]
 179 00b6 4FF00002 		mov	r2, #0
 180 00ba DA60     		str	r2, [r3, #12]
 289:../src/stm32f30x_comp.c ****   COMP_InitStruct->COMP_OutputPol = COMP_OutputPol_NonInverted;
 181              		.loc 1 289 0
 182 00bc 7B68     		ldr	r3, [r7, #4]
 183 00be 4FF00002 		mov	r2, #0
 184 00c2 1A61     		str	r2, [r3, #16]
 290:../src/stm32f30x_comp.c ****   COMP_InitStruct->COMP_Hysteresis = COMP_Hysteresis_No;
 185              		.loc 1 290 0
 186 00c4 7B68     		ldr	r3, [r7, #4]
 187 00c6 4FF00002 		mov	r2, #0
 188 00ca 5A61     		str	r2, [r3, #20]
 291:../src/stm32f30x_comp.c ****   COMP_InitStruct->COMP_Mode = COMP_Mode_UltraLowPower;
 189              		.loc 1 291 0
 190 00cc 7B68     		ldr	r3, [r7, #4]
 191 00ce 4FF00C02 		mov	r2, #12
 192 00d2 9A61     		str	r2, [r3, #24]
 292:../src/stm32f30x_comp.c **** }
 193              		.loc 1 292 0
 194 00d4 07F10C07 		add	r7, r7, #12
 195 00d8 BD46     		mov	sp, r7
 196 00da 80BC     		pop	{r7}
 197 00dc 7047     		bx	lr
 198              		.cfi_endproc
 199              	.LFE113:
 201 00de 00BF     		.align	2
 202              		.global	COMP_Cmd
 203              		.thumb
 204              		.thumb_func
 206              	COMP_Cmd:
 207              	.LFB114:
 293:../src/stm32f30x_comp.c **** 
 294:../src/stm32f30x_comp.c **** /**
 295:../src/stm32f30x_comp.c ****   * @brief  Enable or disable the COMP peripheral.
 296:../src/stm32f30x_comp.c ****   * @note   If the selected comparator is locked, enable/disable can't be performed.
 297:../src/stm32f30x_comp.c ****   *         To unlock the configuration, perform a system reset.
 298:../src/stm32f30x_comp.c ****   * @param  COMP_Selection: the selected comparator. 
 299:../src/stm32f30x_comp.c ****   *          This parameter can be COMP_Selection_COMPx where x can be 1 to 7
 300:../src/stm32f30x_comp.c ****   *          to select the COMP peripheral.
 301:../src/stm32f30x_comp.c ****   * @param  NewState: new state of the COMP peripheral.
 302:../src/stm32f30x_comp.c ****   *         This parameter can be: ENABLE or DISABLE.
 303:../src/stm32f30x_comp.c ****   *         When enabled, the comparator compares the non inverting input with 
 304:../src/stm32f30x_comp.c ****   *                       the inverting input and the comparison result is available
 305:../src/stm32f30x_comp.c ****   *                       on comparator output.
 306:../src/stm32f30x_comp.c ****   *         When disabled, the comparator doesn't perform comparison and the 
 307:../src/stm32f30x_comp.c ****   *                        output level is low.
 308:../src/stm32f30x_comp.c ****   * @retval None
 309:../src/stm32f30x_comp.c ****   */
 310:../src/stm32f30x_comp.c **** void COMP_Cmd(uint32_t COMP_Selection, FunctionalState NewState)
 311:../src/stm32f30x_comp.c **** {
 208              		.loc 1 311 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 8
 211              		@ frame_needed = 1, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 213 00e0 80B4     		push	{r7}
 214              	.LCFI9:
 215              		.cfi_def_cfa_offset 4
 216              		.cfi_offset 7, -4
 217 00e2 83B0     		sub	sp, sp, #12
 218              	.LCFI10:
 219              		.cfi_def_cfa_offset 16
 220 00e4 00AF     		add	r7, sp, #0
 221              	.LCFI11:
 222              		.cfi_def_cfa_register 7
 223 00e6 7860     		str	r0, [r7, #4]
 224 00e8 0B46     		mov	r3, r1
 225 00ea FB70     		strb	r3, [r7, #3]
 312:../src/stm32f30x_comp.c ****   /* Check the parameters */
 313:../src/stm32f30x_comp.c ****   assert_param(IS_COMP_ALL_PERIPH(COMP_Selection));
 314:../src/stm32f30x_comp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 315:../src/stm32f30x_comp.c **** 
 316:../src/stm32f30x_comp.c ****   if (NewState != DISABLE)
 226              		.loc 1 316 0
 227 00ec FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 228 00ee 002B     		cmp	r3, #0
 229 00f0 11D0     		beq	.L5
 317:../src/stm32f30x_comp.c ****   {
 318:../src/stm32f30x_comp.c ****     /* Enable the selected COMPx peripheral */
 319:../src/stm32f30x_comp.c ****     *(__IO uint32_t *) (COMP_BASE + COMP_Selection) |= (uint32_t) (COMP_CSR_COMPxEN);
 230              		.loc 1 319 0
 231 00f2 7A68     		ldr	r2, [r7, #4]
 232 00f4 4FF01C03 		mov	r3, #28
 233 00f8 C4F20103 		movt	r3, 16385
 234 00fc D318     		adds	r3, r2, r3
 235 00fe 1A46     		mov	r2, r3
 236 0100 7968     		ldr	r1, [r7, #4]
 237 0102 4FF01C03 		mov	r3, #28
 238 0106 C4F20103 		movt	r3, 16385
 239 010a CB18     		adds	r3, r1, r3
 240 010c 1B68     		ldr	r3, [r3, #0]
 241 010e 43F00103 		orr	r3, r3, #1
 242 0112 1360     		str	r3, [r2, #0]
 243 0114 10E0     		b	.L4
 244              	.L5:
 320:../src/stm32f30x_comp.c ****   }
 321:../src/stm32f30x_comp.c ****   else
 322:../src/stm32f30x_comp.c ****   {
 323:../src/stm32f30x_comp.c ****     /* Disable the selected COMP peripheral  */
 324:../src/stm32f30x_comp.c ****     *(__IO uint32_t *) (COMP_BASE + COMP_Selection) &= (uint32_t)(~COMP_CSR_COMPxEN);
 245              		.loc 1 324 0
 246 0116 7A68     		ldr	r2, [r7, #4]
 247 0118 4FF01C03 		mov	r3, #28
 248 011c C4F20103 		movt	r3, 16385
 249 0120 D318     		adds	r3, r2, r3
 250 0122 1A46     		mov	r2, r3
 251 0124 7968     		ldr	r1, [r7, #4]
 252 0126 4FF01C03 		mov	r3, #28
 253 012a C4F20103 		movt	r3, 16385
 254 012e CB18     		adds	r3, r1, r3
 255 0130 1B68     		ldr	r3, [r3, #0]
 256 0132 23F00103 		bic	r3, r3, #1
 257 0136 1360     		str	r3, [r2, #0]
 258              	.L4:
 325:../src/stm32f30x_comp.c ****   }
 326:../src/stm32f30x_comp.c **** }
 259              		.loc 1 326 0
 260 0138 07F10C07 		add	r7, r7, #12
 261 013c BD46     		mov	sp, r7
 262 013e 80BC     		pop	{r7}
 263 0140 7047     		bx	lr
 264              		.cfi_endproc
 265              	.LFE114:
 267 0142 00BF     		.align	2
 268              		.global	COMP_SwitchCmd
 269              		.thumb
 270              		.thumb_func
 272              	COMP_SwitchCmd:
 273              	.LFB115:
 327:../src/stm32f30x_comp.c **** 
 328:../src/stm32f30x_comp.c **** /**
 329:../src/stm32f30x_comp.c ****   * @brief  Close or Open the SW1 switch.
 330:../src/stm32f30x_comp.c ****   * @note   If the COMP1 is locked, Close/Open the SW1 switch can't be performed.
 331:../src/stm32f30x_comp.c ****   *         To unlock the configuration, perform a system reset.  
 332:../src/stm32f30x_comp.c ****   * @note   This switch is solely intended to redirect signals onto high
 333:../src/stm32f30x_comp.c ****   *         impedance input, such as COMP1 non-inverting input (highly resistive switch)
 334:../src/stm32f30x_comp.c ****   * @param  NewState: New state of the analog switch.
 335:../src/stm32f30x_comp.c ****   *   This parameter can be 
 336:../src/stm32f30x_comp.c ****   *     ENABLE so the SW1 is closed; PA1 is connected to PA4
 337:../src/stm32f30x_comp.c ****   *     or DISABLE so the SW1 switch is open; PA1 is disconnected from PA4
 338:../src/stm32f30x_comp.c ****   * @retval None
 339:../src/stm32f30x_comp.c ****   */
 340:../src/stm32f30x_comp.c **** void COMP_SwitchCmd(uint32_t COMP_Selection, FunctionalState NewState)
 341:../src/stm32f30x_comp.c **** {
 274              		.loc 1 341 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 8
 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 279 0144 80B4     		push	{r7}
 280              	.LCFI12:
 281              		.cfi_def_cfa_offset 4
 282              		.cfi_offset 7, -4
 283 0146 83B0     		sub	sp, sp, #12
 284              	.LCFI13:
 285              		.cfi_def_cfa_offset 16
 286 0148 00AF     		add	r7, sp, #0
 287              	.LCFI14:
 288              		.cfi_def_cfa_register 7
 289 014a 7860     		str	r0, [r7, #4]
 290 014c 0B46     		mov	r3, r1
 291 014e FB70     		strb	r3, [r7, #3]
 342:../src/stm32f30x_comp.c ****   /* Check the parameter */
 343:../src/stm32f30x_comp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 344:../src/stm32f30x_comp.c **** 
 345:../src/stm32f30x_comp.c ****   if (NewState != DISABLE)
 292              		.loc 1 345 0
 293 0150 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 294 0152 002B     		cmp	r3, #0
 295 0154 11D0     		beq	.L8
 346:../src/stm32f30x_comp.c ****   {
 347:../src/stm32f30x_comp.c ****     /* Close SW1 switch */
 348:../src/stm32f30x_comp.c ****     *(__IO uint32_t *) (COMP_BASE + COMP_Selection) |= (uint32_t) (COMP_CSR_COMP1SW1);
 296              		.loc 1 348 0
 297 0156 7A68     		ldr	r2, [r7, #4]
 298 0158 4FF01C03 		mov	r3, #28
 299 015c C4F20103 		movt	r3, 16385
 300 0160 D318     		adds	r3, r2, r3
 301 0162 1A46     		mov	r2, r3
 302 0164 7968     		ldr	r1, [r7, #4]
 303 0166 4FF01C03 		mov	r3, #28
 304 016a C4F20103 		movt	r3, 16385
 305 016e CB18     		adds	r3, r1, r3
 306 0170 1B68     		ldr	r3, [r3, #0]
 307 0172 43F00203 		orr	r3, r3, #2
 308 0176 1360     		str	r3, [r2, #0]
 309 0178 10E0     		b	.L7
 310              	.L8:
 349:../src/stm32f30x_comp.c ****   }
 350:../src/stm32f30x_comp.c ****   else
 351:../src/stm32f30x_comp.c ****   {
 352:../src/stm32f30x_comp.c ****     /* Open SW1 switch */
 353:../src/stm32f30x_comp.c ****     *(__IO uint32_t *) (COMP_BASE + COMP_Selection) &= (uint32_t)(~COMP_CSR_COMP1SW1);
 311              		.loc 1 353 0
 312 017a 7A68     		ldr	r2, [r7, #4]
 313 017c 4FF01C03 		mov	r3, #28
 314 0180 C4F20103 		movt	r3, 16385
 315 0184 D318     		adds	r3, r2, r3
 316 0186 1A46     		mov	r2, r3
 317 0188 7968     		ldr	r1, [r7, #4]
 318 018a 4FF01C03 		mov	r3, #28
 319 018e C4F20103 		movt	r3, 16385
 320 0192 CB18     		adds	r3, r1, r3
 321 0194 1B68     		ldr	r3, [r3, #0]
 322 0196 23F00203 		bic	r3, r3, #2
 323 019a 1360     		str	r3, [r2, #0]
 324              	.L7:
 354:../src/stm32f30x_comp.c ****   }
 355:../src/stm32f30x_comp.c **** }
 325              		.loc 1 355 0
 326 019c 07F10C07 		add	r7, r7, #12
 327 01a0 BD46     		mov	sp, r7
 328 01a2 80BC     		pop	{r7}
 329 01a4 7047     		bx	lr
 330              		.cfi_endproc
 331              	.LFE115:
 333 01a6 00BF     		.align	2
 334              		.global	COMP_GetOutputLevel
 335              		.thumb
 336              		.thumb_func
 338              	COMP_GetOutputLevel:
 339              	.LFB116:
 356:../src/stm32f30x_comp.c **** 
 357:../src/stm32f30x_comp.c **** /**
 358:../src/stm32f30x_comp.c ****   * @brief  Return the output level (high or low) of the selected comparator. 
 359:../src/stm32f30x_comp.c ****   *         The output level depends on the selected polarity.
 360:../src/stm32f30x_comp.c ****   *         If the polarity is not inverted:
 361:../src/stm32f30x_comp.c ****   *           - Comparator output is low when the non-inverting input is at a lower
 362:../src/stm32f30x_comp.c ****   *             voltage than the inverting input
 363:../src/stm32f30x_comp.c ****   *           - Comparator output is high when the non-inverting input is at a higher
 364:../src/stm32f30x_comp.c ****   *             voltage than the inverting input
 365:../src/stm32f30x_comp.c ****   *         If the polarity is inverted:
 366:../src/stm32f30x_comp.c ****   *           - Comparator output is high when the non-inverting input is at a lower
 367:../src/stm32f30x_comp.c ****   *             voltage than the inverting input
 368:../src/stm32f30x_comp.c ****   *           - Comparator output is low when the non-inverting input is at a higher
 369:../src/stm32f30x_comp.c ****   *             voltage than the inverting input
 370:../src/stm32f30x_comp.c ****   * @param  COMP_Selection: the selected comparator. 
 371:../src/stm32f30x_comp.c ****   *          This parameter can be COMP_Selection_COMPx where x can be 1 to 7
 372:../src/stm32f30x_comp.c ****   *          to select the COMP peripheral.
 373:../src/stm32f30x_comp.c ****   * @retval Returns the selected comparator output level: low or high.
 374:../src/stm32f30x_comp.c ****   *       
 375:../src/stm32f30x_comp.c ****   */
 376:../src/stm32f30x_comp.c **** uint32_t COMP_GetOutputLevel(uint32_t COMP_Selection)
 377:../src/stm32f30x_comp.c **** {
 340              		.loc 1 377 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 16
 343              		@ frame_needed = 1, uses_anonymous_args = 0
 344              		@ link register save eliminated.
 345 01a8 80B4     		push	{r7}
 346              	.LCFI15:
 347              		.cfi_def_cfa_offset 4
 348              		.cfi_offset 7, -4
 349 01aa 85B0     		sub	sp, sp, #20
 350              	.LCFI16:
 351              		.cfi_def_cfa_offset 24
 352 01ac 00AF     		add	r7, sp, #0
 353              	.LCFI17:
 354              		.cfi_def_cfa_register 7
 355 01ae 7860     		str	r0, [r7, #4]
 378:../src/stm32f30x_comp.c ****   uint32_t compout = 0x0;
 356              		.loc 1 378 0
 357 01b0 4FF00003 		mov	r3, #0
 358 01b4 FB60     		str	r3, [r7, #12]
 379:../src/stm32f30x_comp.c **** 
 380:../src/stm32f30x_comp.c ****   /* Check the parameters */
 381:../src/stm32f30x_comp.c ****   assert_param(IS_COMP_ALL_PERIPH(COMP_Selection));
 382:../src/stm32f30x_comp.c **** 
 383:../src/stm32f30x_comp.c ****   /* Check if selected comparator output is high */
 384:../src/stm32f30x_comp.c ****   if ((*(__IO uint32_t *) (COMP_BASE + COMP_Selection) & (COMP_CSR_COMPxOUT)) != 0)
 359              		.loc 1 384 0
 360 01b6 7A68     		ldr	r2, [r7, #4]
 361 01b8 4FF01C03 		mov	r3, #28
 362 01bc C4F20103 		movt	r3, 16385
 363 01c0 D318     		adds	r3, r2, r3
 364 01c2 1B68     		ldr	r3, [r3, #0]
 365 01c4 03F08043 		and	r3, r3, #1073741824
 366 01c8 002B     		cmp	r3, #0
 367 01ca 03D0     		beq	.L11
 385:../src/stm32f30x_comp.c ****   {
 386:../src/stm32f30x_comp.c ****     compout = COMP_OutputLevel_High;
 368              		.loc 1 386 0
 369 01cc 4FF08043 		mov	r3, #1073741824
 370 01d0 FB60     		str	r3, [r7, #12]
 371 01d2 02E0     		b	.L12
 372              	.L11:
 387:../src/stm32f30x_comp.c ****   }
 388:../src/stm32f30x_comp.c ****   else
 389:../src/stm32f30x_comp.c ****   {
 390:../src/stm32f30x_comp.c ****     compout = COMP_OutputLevel_Low;
 373              		.loc 1 390 0
 374 01d4 4FF00003 		mov	r3, #0
 375 01d8 FB60     		str	r3, [r7, #12]
 376              	.L12:
 391:../src/stm32f30x_comp.c ****   }
 392:../src/stm32f30x_comp.c **** 
 393:../src/stm32f30x_comp.c ****   /* Return the comparator output level */
 394:../src/stm32f30x_comp.c ****   return (uint32_t)(compout);
 377              		.loc 1 394 0
 378 01da FB68     		ldr	r3, [r7, #12]
 395:../src/stm32f30x_comp.c **** }
 379              		.loc 1 395 0
 380 01dc 1846     		mov	r0, r3
 381 01de 07F11407 		add	r7, r7, #20
 382 01e2 BD46     		mov	sp, r7
 383 01e4 80BC     		pop	{r7}
 384 01e6 7047     		bx	lr
 385              		.cfi_endproc
 386              	.LFE116:
 388              		.align	2
 389              		.global	COMP_WindowCmd
 390              		.thumb
 391              		.thumb_func
 393              	COMP_WindowCmd:
 394              	.LFB117:
 396:../src/stm32f30x_comp.c **** 
 397:../src/stm32f30x_comp.c **** /**
 398:../src/stm32f30x_comp.c ****   * @}
 399:../src/stm32f30x_comp.c ****   */
 400:../src/stm32f30x_comp.c **** 
 401:../src/stm32f30x_comp.c **** /** @defgroup COMP_Group2 Window mode control function
 402:../src/stm32f30x_comp.c ****  *  @brief   Window mode control function 
 403:../src/stm32f30x_comp.c ****  *
 404:../src/stm32f30x_comp.c **** @verbatim   
 405:../src/stm32f30x_comp.c ****  ===============================================================================
 406:../src/stm32f30x_comp.c ****                     ##### Window mode control function #####
 407:../src/stm32f30x_comp.c ****  ===============================================================================  
 408:../src/stm32f30x_comp.c **** 
 409:../src/stm32f30x_comp.c **** @endverbatim
 410:../src/stm32f30x_comp.c ****   * @{
 411:../src/stm32f30x_comp.c ****   */
 412:../src/stm32f30x_comp.c **** 
 413:../src/stm32f30x_comp.c **** /**
 414:../src/stm32f30x_comp.c ****   * @brief  Enables or disables the window mode.
 415:../src/stm32f30x_comp.c ****   *         Window mode for comparators makes use of two comparators:
 416:../src/stm32f30x_comp.c ****   *         COMP1 and COM2, COMP3 and COMP4, COMP5 and COMP6.
 417:../src/stm32f30x_comp.c ****   *         In window mode, COMPx and COMPx-1 (where x can be 2, 4 or 6)
 418:../src/stm32f30x_comp.c ****   *         non inverting inputs are connected together and only COMPx-1 non
 419:../src/stm32f30x_comp.c ****   *         inverting input can be used.
 420:../src/stm32f30x_comp.c ****   *         e.g When window mode enabled for COMP4, COMP3 non inverting input (PB14 or PD14)
 421:../src/stm32f30x_comp.c ****   *             is to be used.
 422:../src/stm32f30x_comp.c ****   * @note   If the COMPx is locked, ENABLE/DISABLE the window mode can't be performed.
 423:../src/stm32f30x_comp.c ****   *         To unlock the configuration, perform a system reset.
 424:../src/stm32f30x_comp.c ****   * @param  COMP_Selection: the selected comparator.
 425:../src/stm32f30x_comp.c ****   *          This parameter can be COMP_Selection_COMPx where x can be 2, 4 or 6
 426:../src/stm32f30x_comp.c ****   *          to select the COMP peripheral.
 427:../src/stm32f30x_comp.c ****   * param   NewState: new state of the window mode.
 428:../src/stm32f30x_comp.c ****   *   This parameter can be ENABLE or DISABLE.
 429:../src/stm32f30x_comp.c ****   *        When enbaled, COMPx and COMPx-1 non inverting inputs are connected together.
 430:../src/stm32f30x_comp.c ****   *        When disabled, COMPx and COMPx-1 non inverting inputs are disconnected.
 431:../src/stm32f30x_comp.c ****   * @retval None
 432:../src/stm32f30x_comp.c ****   */
 433:../src/stm32f30x_comp.c **** void COMP_WindowCmd(uint32_t COMP_Selection, FunctionalState NewState)
 434:../src/stm32f30x_comp.c **** {
 395              		.loc 1 434 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 8
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 400 01e8 80B4     		push	{r7}
 401              	.LCFI18:
 402              		.cfi_def_cfa_offset 4
 403              		.cfi_offset 7, -4
 404 01ea 83B0     		sub	sp, sp, #12
 405              	.LCFI19:
 406              		.cfi_def_cfa_offset 16
 407 01ec 00AF     		add	r7, sp, #0
 408              	.LCFI20:
 409              		.cfi_def_cfa_register 7
 410 01ee 7860     		str	r0, [r7, #4]
 411 01f0 0B46     		mov	r3, r1
 412 01f2 FB70     		strb	r3, [r7, #3]
 435:../src/stm32f30x_comp.c ****   /* Check the parameters */
 436:../src/stm32f30x_comp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 437:../src/stm32f30x_comp.c ****   assert_param(IS_COMP_WINDOW(COMP_Selection));
 438:../src/stm32f30x_comp.c ****   
 439:../src/stm32f30x_comp.c ****   if (NewState != DISABLE)
 413              		.loc 1 439 0
 414 01f4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 415 01f6 002B     		cmp	r3, #0
 416 01f8 11D0     		beq	.L15
 440:../src/stm32f30x_comp.c ****   {
 441:../src/stm32f30x_comp.c ****     /* Enable the window mode */
 442:../src/stm32f30x_comp.c ****     *(__IO uint32_t *) (COMP_BASE + COMP_Selection) |= (uint32_t) COMP_CSR_COMPxWNDWEN;
 417              		.loc 1 442 0
 418 01fa 7A68     		ldr	r2, [r7, #4]
 419 01fc 4FF01C03 		mov	r3, #28
 420 0200 C4F20103 		movt	r3, 16385
 421 0204 D318     		adds	r3, r2, r3
 422 0206 1A46     		mov	r2, r3
 423 0208 7968     		ldr	r1, [r7, #4]
 424 020a 4FF01C03 		mov	r3, #28
 425 020e C4F20103 		movt	r3, 16385
 426 0212 CB18     		adds	r3, r1, r3
 427 0214 1B68     		ldr	r3, [r3, #0]
 428 0216 43F40073 		orr	r3, r3, #512
 429 021a 1360     		str	r3, [r2, #0]
 430 021c 10E0     		b	.L14
 431              	.L15:
 443:../src/stm32f30x_comp.c ****   }
 444:../src/stm32f30x_comp.c ****   else
 445:../src/stm32f30x_comp.c ****   {
 446:../src/stm32f30x_comp.c ****     /* Disable the window mode */
 447:../src/stm32f30x_comp.c ****     *(__IO uint32_t *) (COMP_BASE + COMP_Selection) &= (uint32_t)(~COMP_CSR_COMPxWNDWEN);
 432              		.loc 1 447 0
 433 021e 7A68     		ldr	r2, [r7, #4]
 434 0220 4FF01C03 		mov	r3, #28
 435 0224 C4F20103 		movt	r3, 16385
 436 0228 D318     		adds	r3, r2, r3
 437 022a 1A46     		mov	r2, r3
 438 022c 7968     		ldr	r1, [r7, #4]
 439 022e 4FF01C03 		mov	r3, #28
 440 0232 C4F20103 		movt	r3, 16385
 441 0236 CB18     		adds	r3, r1, r3
 442 0238 1B68     		ldr	r3, [r3, #0]
 443 023a 23F40073 		bic	r3, r3, #512
 444 023e 1360     		str	r3, [r2, #0]
 445              	.L14:
 448:../src/stm32f30x_comp.c ****   }
 449:../src/stm32f30x_comp.c **** }
 446              		.loc 1 449 0
 447 0240 07F10C07 		add	r7, r7, #12
 448 0244 BD46     		mov	sp, r7
 449 0246 80BC     		pop	{r7}
 450 0248 7047     		bx	lr
 451              		.cfi_endproc
 452              	.LFE117:
 454 024a 00BF     		.align	2
 455              		.global	COMP_LockConfig
 456              		.thumb
 457              		.thumb_func
 459              	COMP_LockConfig:
 460              	.LFB118:
 450:../src/stm32f30x_comp.c **** 
 451:../src/stm32f30x_comp.c **** /**
 452:../src/stm32f30x_comp.c ****   * @}
 453:../src/stm32f30x_comp.c ****   */
 454:../src/stm32f30x_comp.c **** 
 455:../src/stm32f30x_comp.c **** /** @defgroup COMP_Group3 COMP configuration locking function
 456:../src/stm32f30x_comp.c ****  *  @brief   COMP1, COMP2,...COMP7 configuration locking function
 457:../src/stm32f30x_comp.c ****  *           COMP1, COMP2,...COMP7 configuration can be locked each separately.
 458:../src/stm32f30x_comp.c ****  *           Unlocking is performed by system reset.
 459:../src/stm32f30x_comp.c ****  *
 460:../src/stm32f30x_comp.c **** @verbatim   
 461:../src/stm32f30x_comp.c ****  ===============================================================================
 462:../src/stm32f30x_comp.c ****                    ##### Configuration Lock function #####
 463:../src/stm32f30x_comp.c ****  ===============================================================================  
 464:../src/stm32f30x_comp.c **** 
 465:../src/stm32f30x_comp.c **** @endverbatim
 466:../src/stm32f30x_comp.c ****   * @{
 467:../src/stm32f30x_comp.c ****   */
 468:../src/stm32f30x_comp.c **** 
 469:../src/stm32f30x_comp.c **** /**
 470:../src/stm32f30x_comp.c ****   * @brief  Lock the selected comparator (COMP1/COMP2) configuration.
 471:../src/stm32f30x_comp.c ****   * @note   Locking the configuration means that all control bits are read-only.
 472:../src/stm32f30x_comp.c ****   *         To unlock the comparator configuration, perform a system reset.
 473:../src/stm32f30x_comp.c ****   * @param  COMP_Selection: the selected comparator. 
 474:../src/stm32f30x_comp.c ****   *          This parameter can be COMP_Selection_COMPx where x can be 1 to 7
 475:../src/stm32f30x_comp.c ****   *          to select the COMP peripheral.
 476:../src/stm32f30x_comp.c ****   * @retval None
 477:../src/stm32f30x_comp.c ****   */
 478:../src/stm32f30x_comp.c **** void COMP_LockConfig(uint32_t COMP_Selection)
 479:../src/stm32f30x_comp.c **** {
 461              		.loc 1 479 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 8
 464              		@ frame_needed = 1, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 466 024c 80B4     		push	{r7}
 467              	.LCFI21:
 468              		.cfi_def_cfa_offset 4
 469              		.cfi_offset 7, -4
 470 024e 83B0     		sub	sp, sp, #12
 471              	.LCFI22:
 472              		.cfi_def_cfa_offset 16
 473 0250 00AF     		add	r7, sp, #0
 474              	.LCFI23:
 475              		.cfi_def_cfa_register 7
 476 0252 7860     		str	r0, [r7, #4]
 480:../src/stm32f30x_comp.c ****   /* Check the parameter */
 481:../src/stm32f30x_comp.c ****   assert_param(IS_COMP_ALL_PERIPH(COMP_Selection));
 482:../src/stm32f30x_comp.c **** 
 483:../src/stm32f30x_comp.c ****   /* Set the lock bit corresponding to selected comparator */
 484:../src/stm32f30x_comp.c ****   *(__IO uint32_t *) (COMP_BASE + COMP_Selection) |= (uint32_t) (COMP_CSR_COMPxLOCK);
 477              		.loc 1 484 0
 478 0254 7A68     		ldr	r2, [r7, #4]
 479 0256 4FF01C03 		mov	r3, #28
 480 025a C4F20103 		movt	r3, 16385
 481 025e D318     		adds	r3, r2, r3
 482 0260 1A46     		mov	r2, r3
 483 0262 7968     		ldr	r1, [r7, #4]
 484 0264 4FF01C03 		mov	r3, #28
 485 0268 C4F20103 		movt	r3, 16385
 486 026c CB18     		adds	r3, r1, r3
 487 026e 1B68     		ldr	r3, [r3, #0]
 488 0270 43F00043 		orr	r3, r3, #-2147483648
 489 0274 1360     		str	r3, [r2, #0]
 485:../src/stm32f30x_comp.c **** }
 490              		.loc 1 485 0
 491 0276 07F10C07 		add	r7, r7, #12
 492 027a BD46     		mov	sp, r7
 493 027c 80BC     		pop	{r7}
 494 027e 7047     		bx	lr
 495              		.cfi_endproc
 496              	.LFE118:
 498              	.Letext0:
 499              		.file 2 "/home/aghosh01/gcc-arm-none-eabi-4_7-2012q4/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../.
 500              		.file 3 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x.h"
 501              		.file 4 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x_comp.h"
 502              		.file 5 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f30x_comp.c
     /tmp/ccR22k8b.s:19     .text:00000000 $t
     /tmp/ccR22k8b.s:24     .text:00000000 COMP_DeInit
     /tmp/ccR22k8b.s:63     .text:00000024 COMP_Init
     /tmp/ccR22k8b.s:147    .text:00000094 COMP_StructInit
     /tmp/ccR22k8b.s:206    .text:000000e0 COMP_Cmd
     /tmp/ccR22k8b.s:272    .text:00000144 COMP_SwitchCmd
     /tmp/ccR22k8b.s:338    .text:000001a8 COMP_GetOutputLevel
     /tmp/ccR22k8b.s:393    .text:000001e8 COMP_WindowCmd
     /tmp/ccR22k8b.s:459    .text:0000024c COMP_LockConfig
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.323dce8664331a0daf4a2675e107c70c
                           .group:00000000 wm4.stm32f30x.h.56.6f19c65e98e3319a61449cb2b2455af5
                           .group:00000000 wm4.core_cm4.h.32.1434cd257ff5806b1b03cd32ab0641e9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.29.013e5bcf58dba2d27c60184174208e07
                           .group:00000000 wm4.core_cm4.h.155.cf7c793e178943e1bbf613f1b21cd51a
                           .group:00000000 wm4.stm32f30x.h.294.d8a54360eca16e4157694b52a095202d
                           .group:00000000 wm4.stm32f30x_adc.h.130.cbebad91f78fb87381fe0860eea6104e
                           .group:00000000 wm4.stm32f30x_can.h.50.8b8f5d301152c422a6e50622b33ef620
                           .group:00000000 wm4.stm32f30x_crc.h.54.66d4c5e565e18566aebd9abfd4bcd4b0
                           .group:00000000 wm4.stm32f30x_dac.h.49.b1b5b26e4ca241dbe67fa16dc86a615f
                           .group:00000000 wm4.stm32f30x_dbgmcu.h.53.b238a263ce6a2cc83f610cc35302a38b
                           .group:00000000 wm4.stm32f30x_dma.h.96.d7a2ddd10023e12781aa8ff5ac15d212
                           .group:00000000 wm4.stm32f30x_exti.h.60.8ca0809491a21dec6fc69cf7471e2bab
                           .group:00000000 wm4.stm32f30x_flash.h.70.32613455dfe7328932f786a224daac23
                           .group:00000000 wm4.stm32f30x_gpio.h.50.408e1f6250246e4cc28221970909d34c
                           .group:00000000 wm4.stm32f30x_syscfg.h.58.4cadeb4ec8e47d36b972bbb6b96b7161
                           .group:00000000 wm4.stm32f30x_i2c.h.86.3d51d4edc0e3b9ee9aae045ccbb7739a
                           .group:00000000 wm4.stm32f30x_iwdg.h.59.467d704fb073a015941f19b50fa6470a
                           .group:00000000 wm4.stm32f30x_opamp.h.75.704e2e5e2aab039de307aaa2dcc99fa5
                           .group:00000000 wm4.stm32f30x_pwr.h.59.5c85acff2a3e3c5085b2140c06025cfc
                           .group:00000000 wm4.stm32f30x_rcc.h.79.5ba7cac1e74879861a72556c25322aa4
                           .group:00000000 wm4.stm32f30x_rtc.h.133.d184e08ff40bda44db4bed94f9633384
                           .group:00000000 wm4.stm32f30x_spi.h.119.4d21ec94ec14f3553a127e61c0a9874f
                           .group:00000000 wm4.stm32f30x_tim.h.175.d4a93cff2e7924577147254e501271b6
                           .group:00000000 wm4.stm32f30x_usart.h.110.c89016273702821ff4f9fe43881f70b5
                           .group:00000000 wm4.stm32f30x_wwdg.h.58.4688eee61a2709866472b4b4c07d9275
                           .group:00000000 wm4.stm32f30x_misc.h.113.6a52e4fe7c3825a3ab05990f30dddf92
                           .group:00000000 wm4.stm32f30x_comp.h.91.06ae44150aaaa82c077b71df8db3541a

NO UNDEFINED SYMBOLS
