   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"pwm.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.align	2
  20              		.global	_Z13pwm_out1_initt
  21              		.thumb
  22              		.thumb_func
  24              	_Z13pwm_out1_initt:
  25              	.LFB111:
  26              		.file 1 "../src/pwm.cpp"
   1:../src/pwm.cpp **** /*
   2:../src/pwm.cpp ****  * pwm.cpp
   3:../src/pwm.cpp ****  *
   4:../src/pwm.cpp ****  *  Created on: Feb 19, 2013
   5:../src/pwm.cpp ****  *      Author: root
   6:../src/pwm.cpp ****  */
   7:../src/pwm.cpp **** 
   8:../src/pwm.cpp **** #include "pwm.h"
   9:../src/pwm.cpp **** 
  10:../src/pwm.cpp **** void pwm_out1_init(uint16_t frequency)
  11:../src/pwm.cpp **** {
  27              		.loc 1 11 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 56
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 8EB0     		sub	sp, sp, #56
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 64
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 0346     		mov	r3, r0
  43 0008 FB80     		strh	r3, [r7, #6]	@ movhi
  44              	.LBB2:
  12:../src/pwm.cpp **** 	int period = 0;
  45              		.loc 1 12 0
  46 000a 4FF00003 		mov	r3, #0
  47 000e 7B63     		str	r3, [r7, #52]
  13:../src/pwm.cpp **** 	int psc = 0;
  48              		.loc 1 13 0
  49 0010 4FF00003 		mov	r3, #0
  50 0014 3B63     		str	r3, [r7, #48]
  14:../src/pwm.cpp **** 	config_pwm_freq((int)frequency, &period, &psc);
  51              		.loc 1 14 0
  52 0016 F988     		ldrh	r1, [r7, #6]
  53 0018 07F13402 		add	r2, r7, #52
  54 001c 07F13003 		add	r3, r7, #48
  55 0020 0846     		mov	r0, r1
  56 0022 1146     		mov	r1, r2
  57 0024 1A46     		mov	r2, r3
  58 0026 FFF7FEFF 		bl	_Z15config_pwm_freqiPiS_
  15:../src/pwm.cpp **** 
  16:../src/pwm.cpp **** 
  17:../src/pwm.cpp **** 	TIM_TimeBaseInitTypeDef i;
  18:../src/pwm.cpp **** 	TIM_OCInitTypeDef j;
  19:../src/pwm.cpp **** 	GPIO_InitTypeDef g;
  20:../src/pwm.cpp **** 
  21:../src/pwm.cpp **** 	i.TIM_CounterMode = TIM_CounterMode_Up;
  59              		.loc 1 21 0
  60 002a 4FF00003 		mov	r3, #0
  61 002e FB84     		strh	r3, [r7, #38]	@ movhi
  22:../src/pwm.cpp **** 	i.TIM_ClockDivision = 0;//clk_div;
  62              		.loc 1 22 0
  63 0030 4FF00003 		mov	r3, #0
  64 0034 BB85     		strh	r3, [r7, #44]	@ movhi
  23:../src/pwm.cpp **** 	i.TIM_RepetitionCounter = 0;
  65              		.loc 1 23 0
  66 0036 4FF00003 		mov	r3, #0
  67 003a 87F82E30 		strb	r3, [r7, #46]
  24:../src/pwm.cpp **** 	i.TIM_Prescaler = ((uint16_t)psc)-1;
  68              		.loc 1 24 0
  69 003e 3B6B     		ldr	r3, [r7, #48]
  70 0040 9BB2     		uxth	r3, r3
  71 0042 03F1FF33 		add	r3, r3, #-1
  72 0046 9BB2     		uxth	r3, r3
  73 0048 BB84     		strh	r3, [r7, #36]	@ movhi
  25:../src/pwm.cpp **** 	i.TIM_Period = ((uint16_t)period)-1;
  74              		.loc 1 25 0
  75 004a 7B6B     		ldr	r3, [r7, #52]
  76 004c 9BB2     		uxth	r3, r3
  77 004e 03F1FF33 		add	r3, r3, #-1
  78 0052 BB62     		str	r3, [r7, #40]
  26:../src/pwm.cpp **** 
  27:../src/pwm.cpp **** 	j.TIM_OCMode = TIM_OCMode_PWM1;
  79              		.loc 1 27 0
  80 0054 4FF06003 		mov	r3, #96
  81 0058 3B61     		str	r3, [r7, #16]
  28:../src/pwm.cpp **** 	j.TIM_OutputState = TIM_OutputState_Enable;
  82              		.loc 1 28 0
  83 005a 4FF00103 		mov	r3, #1
  84 005e BB82     		strh	r3, [r7, #20]	@ movhi
  29:../src/pwm.cpp **** 	j.TIM_Pulse = 8191;//25000;
  85              		.loc 1 29 0
  86 0060 41F6FF73 		movw	r3, #8191
  87 0064 BB61     		str	r3, [r7, #24]
  30:../src/pwm.cpp **** 	j.TIM_OCPolarity = TIM_OCPolarity_High;
  88              		.loc 1 30 0
  89 0066 4FF00003 		mov	r3, #0
  90 006a BB83     		strh	r3, [r7, #28]	@ movhi
  31:../src/pwm.cpp **** 
  32:../src/pwm.cpp **** 	g.GPIO_Mode = GPIO_Mode_AF;
  91              		.loc 1 32 0
  92 006c 4FF00203 		mov	r3, #2
  93 0070 3B73     		strb	r3, [r7, #12]
  33:../src/pwm.cpp **** 	g.GPIO_OType = GPIO_OType_PP;
  94              		.loc 1 33 0
  95 0072 4FF00003 		mov	r3, #0
  96 0076 BB73     		strb	r3, [r7, #14]
  34:../src/pwm.cpp **** 	g.GPIO_Pin = GPIO_Pin_4;
  97              		.loc 1 34 0
  98 0078 4FF01003 		mov	r3, #16
  99 007c BB60     		str	r3, [r7, #8]
  35:../src/pwm.cpp **** 	g.GPIO_PuPd = GPIO_PuPd_UP;
 100              		.loc 1 35 0
 101 007e 4FF00103 		mov	r3, #1
 102 0082 FB73     		strb	r3, [r7, #15]
  36:../src/pwm.cpp **** 	g.GPIO_Speed = GPIO_Speed_50MHz;
 103              		.loc 1 36 0
 104 0084 4FF00303 		mov	r3, #3
 105 0088 7B73     		strb	r3, [r7, #13]
  37:../src/pwm.cpp **** 
  38:../src/pwm.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB, ENABLE);
 106              		.loc 1 38 0
 107 008a 4FF48020 		mov	r0, #262144
 108 008e 4FF00101 		mov	r1, #1
 109 0092 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
  39:../src/pwm.cpp **** 	GPIO_PinAFConfig(GPIOB, GPIO_PinSource4, GPIO_AF_2); // AF2, 10:
 110              		.loc 1 39 0
 111 0096 4FF48060 		mov	r0, #1024
 112 009a C4F60000 		movt	r0, 18432
 113 009e 4FF00401 		mov	r1, #4
 114 00a2 4FF00202 		mov	r2, #2
 115 00a6 FFF7FEFF 		bl	GPIO_PinAFConfig
  40:../src/pwm.cpp **** 	GPIO_Init(GPIOB, &g);
 116              		.loc 1 40 0
 117 00aa 07F10803 		add	r3, r7, #8
 118 00ae 4FF48060 		mov	r0, #1024
 119 00b2 C4F60000 		movt	r0, 18432
 120 00b6 1946     		mov	r1, r3
 121 00b8 FFF7FEFF 		bl	GPIO_Init
  41:../src/pwm.cpp **** 
  42:../src/pwm.cpp **** 	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);
 122              		.loc 1 42 0
 123 00bc 4FF00200 		mov	r0, #2
 124 00c0 4FF00101 		mov	r1, #1
 125 00c4 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
  43:../src/pwm.cpp **** 	TIM_InternalClockConfig(TIM3);
 126              		.loc 1 43 0
 127 00c8 4FF48060 		mov	r0, #1024
 128 00cc C4F20000 		movt	r0, 16384
 129 00d0 FFF7FEFF 		bl	TIM_InternalClockConfig
  44:../src/pwm.cpp **** 	TIM_TimeBaseInit(TIM3, &i);
 130              		.loc 1 44 0
 131 00d4 07F12403 		add	r3, r7, #36
 132 00d8 4FF48060 		mov	r0, #1024
 133 00dc C4F20000 		movt	r0, 16384
 134 00e0 1946     		mov	r1, r3
 135 00e2 FFF7FEFF 		bl	TIM_TimeBaseInit
  45:../src/pwm.cpp **** 	TIM_OC1Init(TIM3, &j);
 136              		.loc 1 45 0
 137 00e6 07F11003 		add	r3, r7, #16
 138 00ea 4FF48060 		mov	r0, #1024
 139 00ee C4F20000 		movt	r0, 16384
 140 00f2 1946     		mov	r1, r3
 141 00f4 FFF7FEFF 		bl	TIM_OC1Init
  46:../src/pwm.cpp **** 	TIM_OC1PreloadConfig(TIM3, TIM_OCPreload_Enable);
 142              		.loc 1 46 0
 143 00f8 4FF48060 		mov	r0, #1024
 144 00fc C4F20000 		movt	r0, 16384
 145 0100 4FF00801 		mov	r1, #8
 146 0104 FFF7FEFF 		bl	TIM_OC1PreloadConfig
  47:../src/pwm.cpp **** 	TIM_ARRPreloadConfig(TIM3, ENABLE);
 147              		.loc 1 47 0
 148 0108 4FF48060 		mov	r0, #1024
 149 010c C4F20000 		movt	r0, 16384
 150 0110 4FF00101 		mov	r1, #1
 151 0114 FFF7FEFF 		bl	TIM_ARRPreloadConfig
  48:../src/pwm.cpp **** 
  49:../src/pwm.cpp **** 	TIM_CCxCmd(TIM3, TIM_Channel_1, TIM_CCx_Enable);
 152              		.loc 1 49 0
 153 0118 4FF48060 		mov	r0, #1024
 154 011c C4F20000 		movt	r0, 16384
 155 0120 4FF00001 		mov	r1, #0
 156 0124 4FF00102 		mov	r2, #1
 157 0128 FFF7FEFF 		bl	TIM_CCxCmd
  50:../src/pwm.cpp **** 	TIM_Cmd(TIM3, ENABLE);
 158              		.loc 1 50 0
 159 012c 4FF48060 		mov	r0, #1024
 160 0130 C4F20000 		movt	r0, 16384
 161 0134 4FF00101 		mov	r1, #1
 162 0138 FFF7FEFF 		bl	TIM_Cmd
  51:../src/pwm.cpp **** 	TIM_GenerateEvent(TIM3, TIM_EventSource_Update);
 163              		.loc 1 51 0
 164 013c 4FF48060 		mov	r0, #1024
 165 0140 C4F20000 		movt	r0, 16384
 166 0144 4FF00101 		mov	r1, #1
 167 0148 FFF7FEFF 		bl	TIM_GenerateEvent
 168              	.LBE2:
  52:../src/pwm.cpp **** }
 169              		.loc 1 52 0
 170 014c 07F13807 		add	r7, r7, #56
 171 0150 BD46     		mov	sp, r7
 172 0152 80BD     		pop	{r7, pc}
 173              		.cfi_endproc
 174              	.LFE111:
 176              		.align	2
 177              		.global	_Z11pwm1_outputf
 178              		.thumb
 179              		.thumb_func
 181              	_Z11pwm1_outputf:
 182              	.LFB112:
  53:../src/pwm.cpp **** 
  54:../src/pwm.cpp **** void pwm1_output(float duty)
  55:../src/pwm.cpp **** {
 183              		.loc 1 55 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 16
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0154 80B5     		push	{r7, lr}
 188              	.LCFI3:
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 7, -8
 191              		.cfi_offset 14, -4
 192 0156 84B0     		sub	sp, sp, #16
 193              	.LCFI4:
 194              		.cfi_def_cfa_offset 24
 195 0158 00AF     		add	r7, sp, #0
 196              	.LCFI5:
 197              		.cfi_def_cfa_register 7
 198 015a 7860     		str	r0, [r7, #4]	@ float
 199              	.LBB3:
  56:../src/pwm.cpp **** 	uint16_t setval = (uint16_t)((float)TIM3->ARR * duty);
 200              		.loc 1 56 0
 201 015c 4FF48063 		mov	r3, #1024
 202 0160 C4F20003 		movt	r3, 16384
 203 0164 D3ED0B7A 		flds	s15, [r3, #44]	@ int
 204 0168 B8EE677A 		fuitos	s14, s15
 205 016c D7ED017A 		flds	s15, [r7, #4]
 206 0170 67EE277A 		fmuls	s15, s14, s15
 207 0174 FCEEE77A 		ftouizs	s15, s15
 208 0178 17EE903A 		fmrs	r3, s15	@ int
 209 017c FB81     		strh	r3, [r7, #14]	@ movhi
  57:../src/pwm.cpp **** 	TIM_SetCompare1(TIM3, setval);
 210              		.loc 1 57 0
 211 017e FB89     		ldrh	r3, [r7, #14]
 212 0180 4FF48060 		mov	r0, #1024
 213 0184 C4F20000 		movt	r0, 16384
 214 0188 1946     		mov	r1, r3
 215 018a FFF7FEFF 		bl	TIM_SetCompare1
 216              	.LBE3:
  58:../src/pwm.cpp **** }
 217              		.loc 1 58 0
 218 018e 07F11007 		add	r7, r7, #16
 219 0192 BD46     		mov	sp, r7
 220 0194 80BD     		pop	{r7, pc}
 221              		.cfi_endproc
 222              	.LFE112:
 224 0196 00BF     		.align	2
 225              		.global	_Z13pwm_out2_initt
 226              		.thumb
 227              		.thumb_func
 229              	_Z13pwm_out2_initt:
 230              	.LFB113:
  59:../src/pwm.cpp **** 
  60:../src/pwm.cpp **** void pwm_out2_init(uint16_t frequency)
  61:../src/pwm.cpp **** {
 231              		.loc 1 61 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 56
 234              		@ frame_needed = 1, uses_anonymous_args = 0
 235 0198 80B5     		push	{r7, lr}
 236              	.LCFI6:
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 7, -8
 239              		.cfi_offset 14, -4
 240 019a 8EB0     		sub	sp, sp, #56
 241              	.LCFI7:
 242              		.cfi_def_cfa_offset 64
 243 019c 00AF     		add	r7, sp, #0
 244              	.LCFI8:
 245              		.cfi_def_cfa_register 7
 246 019e 0346     		mov	r3, r0
 247 01a0 FB80     		strh	r3, [r7, #6]	@ movhi
 248              	.LBB4:
  62:../src/pwm.cpp **** 	int period = 0;
 249              		.loc 1 62 0
 250 01a2 4FF00003 		mov	r3, #0
 251 01a6 7B63     		str	r3, [r7, #52]
  63:../src/pwm.cpp **** 	int psc = 0;
 252              		.loc 1 63 0
 253 01a8 4FF00003 		mov	r3, #0
 254 01ac 3B63     		str	r3, [r7, #48]
  64:../src/pwm.cpp **** 	config_pwm_freq((int)frequency, &period, &psc);
 255              		.loc 1 64 0
 256 01ae F988     		ldrh	r1, [r7, #6]
 257 01b0 07F13402 		add	r2, r7, #52
 258 01b4 07F13003 		add	r3, r7, #48
 259 01b8 0846     		mov	r0, r1
 260 01ba 1146     		mov	r1, r2
 261 01bc 1A46     		mov	r2, r3
 262 01be FFF7FEFF 		bl	_Z15config_pwm_freqiPiS_
  65:../src/pwm.cpp **** 
  66:../src/pwm.cpp **** 
  67:../src/pwm.cpp **** 	TIM_TimeBaseInitTypeDef i;
  68:../src/pwm.cpp **** 	TIM_OCInitTypeDef j;
  69:../src/pwm.cpp **** 	GPIO_InitTypeDef g;
  70:../src/pwm.cpp **** 
  71:../src/pwm.cpp **** 	i.TIM_CounterMode = TIM_CounterMode_Up;
 263              		.loc 1 71 0
 264 01c2 4FF00003 		mov	r3, #0
 265 01c6 FB84     		strh	r3, [r7, #38]	@ movhi
  72:../src/pwm.cpp **** 	i.TIM_ClockDivision = 0;//clk_div;
 266              		.loc 1 72 0
 267 01c8 4FF00003 		mov	r3, #0
 268 01cc BB85     		strh	r3, [r7, #44]	@ movhi
  73:../src/pwm.cpp **** 	i.TIM_RepetitionCounter = 0;
 269              		.loc 1 73 0
 270 01ce 4FF00003 		mov	r3, #0
 271 01d2 87F82E30 		strb	r3, [r7, #46]
  74:../src/pwm.cpp **** 	i.TIM_Prescaler = ((uint16_t)psc)-1;
 272              		.loc 1 74 0
 273 01d6 3B6B     		ldr	r3, [r7, #48]
 274 01d8 9BB2     		uxth	r3, r3
 275 01da 03F1FF33 		add	r3, r3, #-1
 276 01de 9BB2     		uxth	r3, r3
 277 01e0 BB84     		strh	r3, [r7, #36]	@ movhi
  75:../src/pwm.cpp **** 	i.TIM_Period = ((uint16_t)period)-1;
 278              		.loc 1 75 0
 279 01e2 7B6B     		ldr	r3, [r7, #52]
 280 01e4 9BB2     		uxth	r3, r3
 281 01e6 03F1FF33 		add	r3, r3, #-1
 282 01ea BB62     		str	r3, [r7, #40]
  76:../src/pwm.cpp **** 
  77:../src/pwm.cpp **** 	j.TIM_OCMode = TIM_OCMode_PWM1;
 283              		.loc 1 77 0
 284 01ec 4FF06003 		mov	r3, #96
 285 01f0 3B61     		str	r3, [r7, #16]
  78:../src/pwm.cpp **** 	j.TIM_OutputState = TIM_OutputState_Enable;
 286              		.loc 1 78 0
 287 01f2 4FF00103 		mov	r3, #1
 288 01f6 BB82     		strh	r3, [r7, #20]	@ movhi
  79:../src/pwm.cpp **** 	j.TIM_Pulse = 8191;
 289              		.loc 1 79 0
 290 01f8 41F6FF73 		movw	r3, #8191
 291 01fc BB61     		str	r3, [r7, #24]
  80:../src/pwm.cpp **** 	j.TIM_OCPolarity = TIM_OCPolarity_High;
 292              		.loc 1 80 0
 293 01fe 4FF00003 		mov	r3, #0
 294 0202 BB83     		strh	r3, [r7, #28]	@ movhi
  81:../src/pwm.cpp **** 
  82:../src/pwm.cpp **** 	g.GPIO_Mode = GPIO_Mode_AF;
 295              		.loc 1 82 0
 296 0204 4FF00203 		mov	r3, #2
 297 0208 3B73     		strb	r3, [r7, #12]
  83:../src/pwm.cpp **** 	g.GPIO_OType = GPIO_OType_PP;
 298              		.loc 1 83 0
 299 020a 4FF00003 		mov	r3, #0
 300 020e BB73     		strb	r3, [r7, #14]
  84:../src/pwm.cpp **** 	g.GPIO_Pin = GPIO_Pin_5;
 301              		.loc 1 84 0
 302 0210 4FF02003 		mov	r3, #32
 303 0214 BB60     		str	r3, [r7, #8]
  85:../src/pwm.cpp **** 	g.GPIO_PuPd = GPIO_PuPd_UP;
 304              		.loc 1 85 0
 305 0216 4FF00103 		mov	r3, #1
 306 021a FB73     		strb	r3, [r7, #15]
  86:../src/pwm.cpp **** 	g.GPIO_Speed = GPIO_Speed_50MHz;
 307              		.loc 1 86 0
 308 021c 4FF00303 		mov	r3, #3
 309 0220 7B73     		strb	r3, [r7, #13]
  87:../src/pwm.cpp **** 
  88:../src/pwm.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB, ENABLE);
 310              		.loc 1 88 0
 311 0222 4FF48020 		mov	r0, #262144
 312 0226 4FF00101 		mov	r1, #1
 313 022a FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
  89:../src/pwm.cpp **** 	GPIO_PinAFConfig(GPIOB, GPIO_PinSource5, GPIO_AF_2); // AF 2, 10:
 314              		.loc 1 89 0
 315 022e 4FF48060 		mov	r0, #1024
 316 0232 C4F60000 		movt	r0, 18432
 317 0236 4FF00501 		mov	r1, #5
 318 023a 4FF00202 		mov	r2, #2
 319 023e FFF7FEFF 		bl	GPIO_PinAFConfig
  90:../src/pwm.cpp **** 	GPIO_Init(GPIOB, &g);
 320              		.loc 1 90 0
 321 0242 07F10803 		add	r3, r7, #8
 322 0246 4FF48060 		mov	r0, #1024
 323 024a C4F60000 		movt	r0, 18432
 324 024e 1946     		mov	r1, r3
 325 0250 FFF7FEFF 		bl	GPIO_Init
  91:../src/pwm.cpp **** 
  92:../src/pwm.cpp **** 
  93:../src/pwm.cpp **** 	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);
 326              		.loc 1 93 0
 327 0254 4FF00200 		mov	r0, #2
 328 0258 4FF00101 		mov	r1, #1
 329 025c FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
  94:../src/pwm.cpp **** 	TIM_InternalClockConfig(TIM3);
 330              		.loc 1 94 0
 331 0260 4FF48060 		mov	r0, #1024
 332 0264 C4F20000 		movt	r0, 16384
 333 0268 FFF7FEFF 		bl	TIM_InternalClockConfig
  95:../src/pwm.cpp **** 	TIM_TimeBaseInit(TIM3, &i);
 334              		.loc 1 95 0
 335 026c 07F12403 		add	r3, r7, #36
 336 0270 4FF48060 		mov	r0, #1024
 337 0274 C4F20000 		movt	r0, 16384
 338 0278 1946     		mov	r1, r3
 339 027a FFF7FEFF 		bl	TIM_TimeBaseInit
  96:../src/pwm.cpp **** 	TIM_OC2Init(TIM3, &j);
 340              		.loc 1 96 0
 341 027e 07F11003 		add	r3, r7, #16
 342 0282 4FF48060 		mov	r0, #1024
 343 0286 C4F20000 		movt	r0, 16384
 344 028a 1946     		mov	r1, r3
 345 028c FFF7FEFF 		bl	TIM_OC2Init
  97:../src/pwm.cpp **** 	TIM_OC2PreloadConfig(TIM3, TIM_OCPreload_Enable);
 346              		.loc 1 97 0
 347 0290 4FF48060 		mov	r0, #1024
 348 0294 C4F20000 		movt	r0, 16384
 349 0298 4FF00801 		mov	r1, #8
 350 029c FFF7FEFF 		bl	TIM_OC2PreloadConfig
  98:../src/pwm.cpp **** 	TIM_ARRPreloadConfig(TIM3, ENABLE);
 351              		.loc 1 98 0
 352 02a0 4FF48060 		mov	r0, #1024
 353 02a4 C4F20000 		movt	r0, 16384
 354 02a8 4FF00101 		mov	r1, #1
 355 02ac FFF7FEFF 		bl	TIM_ARRPreloadConfig
  99:../src/pwm.cpp **** 
 100:../src/pwm.cpp **** 	TIM_CCxCmd(TIM3, TIM_Channel_2, TIM_CCx_Enable);
 356              		.loc 1 100 0
 357 02b0 4FF48060 		mov	r0, #1024
 358 02b4 C4F20000 		movt	r0, 16384
 359 02b8 4FF00401 		mov	r1, #4
 360 02bc 4FF00102 		mov	r2, #1
 361 02c0 FFF7FEFF 		bl	TIM_CCxCmd
 101:../src/pwm.cpp **** 	TIM_Cmd(TIM3, ENABLE);
 362              		.loc 1 101 0
 363 02c4 4FF48060 		mov	r0, #1024
 364 02c8 C4F20000 		movt	r0, 16384
 365 02cc 4FF00101 		mov	r1, #1
 366 02d0 FFF7FEFF 		bl	TIM_Cmd
 102:../src/pwm.cpp **** 	TIM_GenerateEvent(TIM3, TIM_EventSource_Update);
 367              		.loc 1 102 0
 368 02d4 4FF48060 		mov	r0, #1024
 369 02d8 C4F20000 		movt	r0, 16384
 370 02dc 4FF00101 		mov	r1, #1
 371 02e0 FFF7FEFF 		bl	TIM_GenerateEvent
 372              	.LBE4:
 103:../src/pwm.cpp **** }
 373              		.loc 1 103 0
 374 02e4 07F13807 		add	r7, r7, #56
 375 02e8 BD46     		mov	sp, r7
 376 02ea 80BD     		pop	{r7, pc}
 377              		.cfi_endproc
 378              	.LFE113:
 380              		.align	2
 381              		.global	_Z11pwm2_outputf
 382              		.thumb
 383              		.thumb_func
 385              	_Z11pwm2_outputf:
 386              	.LFB114:
 104:../src/pwm.cpp **** 
 105:../src/pwm.cpp **** void pwm2_output(float duty)
 106:../src/pwm.cpp **** {
 387              		.loc 1 106 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 16
 390              		@ frame_needed = 1, uses_anonymous_args = 0
 391 02ec 80B5     		push	{r7, lr}
 392              	.LCFI9:
 393              		.cfi_def_cfa_offset 8
 394              		.cfi_offset 7, -8
 395              		.cfi_offset 14, -4
 396 02ee 84B0     		sub	sp, sp, #16
 397              	.LCFI10:
 398              		.cfi_def_cfa_offset 24
 399 02f0 00AF     		add	r7, sp, #0
 400              	.LCFI11:
 401              		.cfi_def_cfa_register 7
 402 02f2 7860     		str	r0, [r7, #4]	@ float
 403              	.LBB5:
 107:../src/pwm.cpp **** 	uint16_t setval = (uint16_t)((float)TIM3->ARR * duty);
 404              		.loc 1 107 0
 405 02f4 4FF48063 		mov	r3, #1024
 406 02f8 C4F20003 		movt	r3, 16384
 407 02fc D3ED0B7A 		flds	s15, [r3, #44]	@ int
 408 0300 B8EE677A 		fuitos	s14, s15
 409 0304 D7ED017A 		flds	s15, [r7, #4]
 410 0308 67EE277A 		fmuls	s15, s14, s15
 411 030c FCEEE77A 		ftouizs	s15, s15
 412 0310 17EE903A 		fmrs	r3, s15	@ int
 413 0314 FB81     		strh	r3, [r7, #14]	@ movhi
 108:../src/pwm.cpp **** 	TIM_SetCompare2(TIM3, setval);
 414              		.loc 1 108 0
 415 0316 FB89     		ldrh	r3, [r7, #14]
 416 0318 4FF48060 		mov	r0, #1024
 417 031c C4F20000 		movt	r0, 16384
 418 0320 1946     		mov	r1, r3
 419 0322 FFF7FEFF 		bl	TIM_SetCompare2
 420              	.LBE5:
 109:../src/pwm.cpp **** }
 421              		.loc 1 109 0
 422 0326 07F11007 		add	r7, r7, #16
 423 032a BD46     		mov	sp, r7
 424 032c 80BD     		pop	{r7, pc}
 425              		.cfi_endproc
 426              	.LFE114:
 428              		.global	__aeabi_i2d
 429              		.global	__aeabi_d2iz
 430 032e 00BF     		.align	2
 431              		.global	_Z15config_pwm_freqiPiS_
 432              		.thumb
 433              		.thumb_func
 435              	_Z15config_pwm_freqiPiS_:
 436              	.LFB115:
 110:../src/pwm.cpp **** 
 111:../src/pwm.cpp **** void config_pwm_freq(int frequency, int* period, int* prescaler)
 112:../src/pwm.cpp **** {
 437              		.loc 1 112 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 64
 440              		@ frame_needed = 1, uses_anonymous_args = 0
 441 0330 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 442              	.LCFI12:
 443              		.cfi_def_cfa_offset 36
 444              		.cfi_offset 4, -36
 445              		.cfi_offset 5, -32
 446              		.cfi_offset 6, -28
 447              		.cfi_offset 7, -24
 448              		.cfi_offset 8, -20
 449              		.cfi_offset 9, -16
 450              		.cfi_offset 10, -12
 451              		.cfi_offset 11, -8
 452              		.cfi_offset 14, -4
 453 0334 91B0     		sub	sp, sp, #68
 454              	.LCFI13:
 455              		.cfi_def_cfa_offset 104
 456 0336 00AF     		add	r7, sp, #0
 457              	.LCFI14:
 458              		.cfi_def_cfa_register 7
 459 0338 F860     		str	r0, [r7, #12]
 460 033a B960     		str	r1, [r7, #8]
 461 033c 7A60     		str	r2, [r7, #4]
 462 033e 6B46     		mov	r3, sp
 463 0340 1E46     		mov	r6, r3
 464              	.LBB6:
 113:../src/pwm.cpp **** 	int max = (int)((float)72000000/(float)frequency);
 465              		.loc 1 113 0
 466 0342 D7ED037A 		flds	s15, [r7, #12]	@ int
 467 0346 F8EEE77A 		fsitos	s15, s15
 468 034a 9FEDA97A 		flds	s14, .L30
 469 034e C7EE277A 		fdivs	s15, s14, s15
 470 0352 FDEEE77A 		ftosizs	s15, s15
 471 0356 C7ED097A 		fsts	s15, [r7, #36]	@ int
 114:../src/pwm.cpp **** 
 115:../src/pwm.cpp **** 	int max_num = (int)sqrt(max);
 472              		.loc 1 115 0
 473 035a 786A     		ldr	r0, [r7, #36]
 474 035c FFF7FEFF 		bl	__aeabi_i2d
 475 0360 0246     		mov	r2, r0
 476 0362 0B46     		mov	r3, r1
 477 0364 1046     		mov	r0, r2
 478 0366 1946     		mov	r1, r3
 479 0368 FFF7FEFF 		bl	sqrt
 480 036c 0246     		mov	r2, r0
 481 036e 0B46     		mov	r3, r1
 482 0370 1046     		mov	r0, r2
 483 0372 1946     		mov	r1, r3
 484 0374 FFF7FEFF 		bl	__aeabi_d2iz
 485 0378 0346     		mov	r3, r0
 486 037a 3B62     		str	r3, [r7, #32]
 116:../src/pwm.cpp **** 
 117:../src/pwm.cpp **** 	int seive[max_num];
 487              		.loc 1 117 0
 488 037c 3B6A     		ldr	r3, [r7, #32]
 489 037e 03F1FF31 		add	r1, r3, #-1
 490 0382 F961     		str	r1, [r7, #28]
 491 0384 0846     		mov	r0, r1
 492 0386 0246     		mov	r2, r0
 493 0388 4FF00003 		mov	r3, #0
 494 038c 4FF0010A 		mov	sl, #1
 495 0390 4FF0000B 		mov	fp, #0
 496 0394 12EB0A02 		adds	r2, r2, sl
 497 0398 43EB0B03 		adc	r3, r3, fp
 498 039c 4FEAD260 		lsr	r0, r2, #27
 499 03a0 4FEA4319 		lsl	r9, r3, #5
 500 03a4 40EA0909 		orr	r9, r0, r9
 501 03a8 4FEA4218 		lsl	r8, r2, #5
 502 03ac 0846     		mov	r0, r1
 503 03ae 0246     		mov	r2, r0
 504 03b0 4FF00003 		mov	r3, #0
 505 03b4 4FF00108 		mov	r8, #1
 506 03b8 4FF00009 		mov	r9, #0
 507 03bc 12EB0802 		adds	r2, r2, r8
 508 03c0 43EB0903 		adc	r3, r3, r9
 509 03c4 4FEAD260 		lsr	r0, r2, #27
 510 03c8 4FEA4315 		lsl	r5, r3, #5
 511 03cc 0543     		orrs	r5, r5, r0
 512 03ce 4FEA4214 		lsl	r4, r2, #5
 513 03d2 0B46     		mov	r3, r1
 514 03d4 03F10103 		add	r3, r3, #1
 515 03d8 4FEA8303 		lsl	r3, r3, #2
 516 03dc 03F10303 		add	r3, r3, #3
 517 03e0 03F10703 		add	r3, r3, #7
 518 03e4 4FEAD303 		lsr	r3, r3, #3
 519 03e8 4FEAC303 		lsl	r3, r3, #3
 520 03ec ADEB030D 		sub	sp, sp, r3
 521 03f0 6B46     		mov	r3, sp
 522 03f2 03F10303 		add	r3, r3, #3
 523 03f6 4FEA9303 		lsr	r3, r3, #2
 524 03fa 4FEA8303 		lsl	r3, r3, #2
 525 03fe BB61     		str	r3, [r7, #24]
 118:../src/pwm.cpp **** 
 119:../src/pwm.cpp **** 	int startpos = 1;
 526              		.loc 1 119 0
 527 0400 4FF00103 		mov	r3, #1
 528 0404 FB63     		str	r3, [r7, #60]
 120:../src/pwm.cpp **** 	int testval = 1;
 529              		.loc 1 120 0
 530 0406 4FF00103 		mov	r3, #1
 531 040a 7B61     		str	r3, [r7, #20]
 121:../src/pwm.cpp **** 
 122:../src/pwm.cpp **** 	int iter = 0;
 532              		.loc 1 122 0
 533 040c 4FF00003 		mov	r3, #0
 534 0410 BB63     		str	r3, [r7, #56]
 123:../src/pwm.cpp **** 	int iter2;
 124:../src/pwm.cpp **** 	for(iter = 0; iter < max_num; ++iter)
 535              		.loc 1 124 0
 536 0412 4FF00003 		mov	r3, #0
 537 0416 BB63     		str	r3, [r7, #56]
 538 0418 0AE0     		b	.L6
 539              	.L7:
 125:../src/pwm.cpp **** 	{
 126:../src/pwm.cpp **** 		seive[iter] = iter+1;
 540              		.loc 1 126 0 discriminator 2
 541 041a BB6B     		ldr	r3, [r7, #56]
 542 041c 03F10101 		add	r1, r3, #1
 543 0420 BB69     		ldr	r3, [r7, #24]
 544 0422 BA6B     		ldr	r2, [r7, #56]
 545 0424 43F82210 		str	r1, [r3, r2, lsl #2]
 124:../src/pwm.cpp **** 	for(iter = 0; iter < max_num; ++iter)
 546              		.loc 1 124 0 discriminator 2
 547 0428 BB6B     		ldr	r3, [r7, #56]
 548 042a 03F10103 		add	r3, r3, #1
 549 042e BB63     		str	r3, [r7, #56]
 550              	.L6:
 124:../src/pwm.cpp **** 	for(iter = 0; iter < max_num; ++iter)
 551              		.loc 1 124 0 is_stmt 0 discriminator 1
 552 0430 BA6B     		ldr	r2, [r7, #56]
 553 0432 3B6A     		ldr	r3, [r7, #32]
 554 0434 9A42     		cmp	r2, r3
 555 0436 ACBF     		ite	ge
 556 0438 0023     		movge	r3, #0
 557 043a 0123     		movlt	r3, #1
 558 043c DBB2     		uxtb	r3, r3
 559 043e 002B     		cmp	r3, #0
 560 0440 EBD1     		bne	.L7
 127:../src/pwm.cpp **** 	}
 128:../src/pwm.cpp **** 
 129:../src/pwm.cpp **** 	while(startpos < max_num)
 561              		.loc 1 129 0 is_stmt 1
 562 0442 38E0     		b	.L8
 563              	.L13:
 130:../src/pwm.cpp **** 	{
 131:../src/pwm.cpp **** 		testval = seive[startpos];
 564              		.loc 1 131 0
 565 0444 BB69     		ldr	r3, [r7, #24]
 566 0446 FA6B     		ldr	r2, [r7, #60]
 567 0448 53F82230 		ldr	r3, [r3, r2, lsl #2]
 568 044c 7B61     		str	r3, [r7, #20]
 132:../src/pwm.cpp **** 		if(testval != -1)
 569              		.loc 1 132 0
 570 044e 7B69     		ldr	r3, [r7, #20]
 571 0450 B3F1FF3F 		cmp	r3, #-1
 572 0454 2BD0     		beq	.L9
 133:../src/pwm.cpp **** 		{
 134:../src/pwm.cpp **** 		for(iter = startpos+1; iter < max_num; ++iter)
 573              		.loc 1 134 0
 574 0456 FB6B     		ldr	r3, [r7, #60]
 575 0458 03F10103 		add	r3, r3, #1
 576 045c BB63     		str	r3, [r7, #56]
 577 045e 1DE0     		b	.L10
 578              	.L12:
 135:../src/pwm.cpp **** 		{
 136:../src/pwm.cpp **** 			if((seive[iter] != -1) && ((seive[iter])%testval == 0))
 579              		.loc 1 136 0
 580 0460 BB69     		ldr	r3, [r7, #24]
 581 0462 BA6B     		ldr	r2, [r7, #56]
 582 0464 53F82230 		ldr	r3, [r3, r2, lsl #2]
 583 0468 B3F1FF3F 		cmp	r3, #-1
 584 046c 12D0     		beq	.L11
 585              		.loc 1 136 0 is_stmt 0 discriminator 1
 586 046e BB69     		ldr	r3, [r7, #24]
 587 0470 BA6B     		ldr	r2, [r7, #56]
 588 0472 53F82230 		ldr	r3, [r3, r2, lsl #2]
 589 0476 7A69     		ldr	r2, [r7, #20]
 590 0478 93FBF2F2 		sdiv	r2, r3, r2
 591 047c 7969     		ldr	r1, [r7, #20]
 592 047e 01FB02F2 		mul	r2, r1, r2
 593 0482 9B1A     		subs	r3, r3, r2
 594 0484 002B     		cmp	r3, #0
 595 0486 05D1     		bne	.L11
 137:../src/pwm.cpp **** 			{
 138:../src/pwm.cpp **** 				seive[iter] = -1;
 596              		.loc 1 138 0 is_stmt 1
 597 0488 BB69     		ldr	r3, [r7, #24]
 598 048a BA6B     		ldr	r2, [r7, #56]
 599 048c 4FF0FF31 		mov	r1, #-1
 600 0490 43F82210 		str	r1, [r3, r2, lsl #2]
 601              	.L11:
 134:../src/pwm.cpp **** 		for(iter = startpos+1; iter < max_num; ++iter)
 602              		.loc 1 134 0
 603 0494 BB6B     		ldr	r3, [r7, #56]
 604 0496 03F10103 		add	r3, r3, #1
 605 049a BB63     		str	r3, [r7, #56]
 606              	.L10:
 134:../src/pwm.cpp **** 		for(iter = startpos+1; iter < max_num; ++iter)
 607              		.loc 1 134 0 is_stmt 0 discriminator 1
 608 049c BA6B     		ldr	r2, [r7, #56]
 609 049e 3B6A     		ldr	r3, [r7, #32]
 610 04a0 9A42     		cmp	r2, r3
 611 04a2 ACBF     		ite	ge
 612 04a4 0023     		movge	r3, #0
 613 04a6 0123     		movlt	r3, #1
 614 04a8 DBB2     		uxtb	r3, r3
 615 04aa 002B     		cmp	r3, #0
 616 04ac D8D1     		bne	.L12
 617              	.L9:
 139:../src/pwm.cpp **** 			}
 140:../src/pwm.cpp **** 		}
 141:../src/pwm.cpp **** 		}
 142:../src/pwm.cpp **** 		++startpos;
 618              		.loc 1 142 0 is_stmt 1
 619 04ae FB6B     		ldr	r3, [r7, #60]
 620 04b0 03F10103 		add	r3, r3, #1
 621 04b4 FB63     		str	r3, [r7, #60]
 622              	.L8:
 129:../src/pwm.cpp **** 	while(startpos < max_num)
 623              		.loc 1 129 0 discriminator 1
 624 04b6 FA6B     		ldr	r2, [r7, #60]
 625 04b8 3B6A     		ldr	r3, [r7, #32]
 626 04ba 9A42     		cmp	r2, r3
 627 04bc ACBF     		ite	ge
 628 04be 0023     		movge	r3, #0
 629 04c0 0123     		movlt	r3, #1
 630 04c2 DBB2     		uxtb	r3, r3
 631 04c4 002B     		cmp	r3, #0
 632 04c6 BDD1     		bne	.L13
 143:../src/pwm.cpp **** 	}
 144:../src/pwm.cpp **** 
 145:../src/pwm.cpp **** 	int last_valid_iter;
 146:../src/pwm.cpp **** 
 147:../src/pwm.cpp **** 	iter = 0;
 633              		.loc 1 147 0
 634 04c8 4FF00003 		mov	r3, #0
 635 04cc BB63     		str	r3, [r7, #56]
 148:../src/pwm.cpp **** 	for(iter = 0; iter < max_num; ++iter)
 636              		.loc 1 148 0
 637 04ce 4FF00003 		mov	r3, #0
 638 04d2 BB63     		str	r3, [r7, #56]
 639 04d4 3EE0     		b	.L14
 640              	.L20:
 149:../src/pwm.cpp **** 	{
 150:../src/pwm.cpp **** 		if(seive[iter] != -1)
 641              		.loc 1 150 0
 642 04d6 BB69     		ldr	r3, [r7, #24]
 643 04d8 BA6B     		ldr	r2, [r7, #56]
 644 04da 53F82230 		ldr	r3, [r3, r2, lsl #2]
 645 04de B3F1FF3F 		cmp	r3, #-1
 646 04e2 02D0     		beq	.L15
 151:../src/pwm.cpp **** 		{
 152:../src/pwm.cpp **** 		last_valid_iter = iter;
 647              		.loc 1 152 0
 648 04e4 BB6B     		ldr	r3, [r7, #56]
 649 04e6 3B63     		str	r3, [r7, #48]
 650 04e8 30E0     		b	.L16
 651              	.L15:
 153:../src/pwm.cpp **** 		}
 154:../src/pwm.cpp **** 		else
 155:../src/pwm.cpp **** 		{
 156:../src/pwm.cpp **** 			for(iter2 = iter; iter2<max_num; ++iter2)
 652              		.loc 1 156 0
 653 04ea BB6B     		ldr	r3, [r7, #56]
 654 04ec 7B63     		str	r3, [r7, #52]
 655 04ee 24E0     		b	.L17
 656              	.L19:
 157:../src/pwm.cpp **** 			{
 158:../src/pwm.cpp **** 				if(seive[iter2] != -1)
 657              		.loc 1 158 0
 658 04f0 BB69     		ldr	r3, [r7, #24]
 659 04f2 7A6B     		ldr	r2, [r7, #52]
 660 04f4 53F82230 		ldr	r3, [r3, r2, lsl #2]
 661 04f8 B3F1FF3F 		cmp	r3, #-1
 662 04fc 19D0     		beq	.L18
 159:../src/pwm.cpp **** 				{
 160:../src/pwm.cpp **** 				seive[last_valid_iter+1] = seive[iter2];
 663              		.loc 1 160 0
 664 04fe 3B6B     		ldr	r3, [r7, #48]
 665 0500 03F10102 		add	r2, r3, #1
 666 0504 BB69     		ldr	r3, [r7, #24]
 667 0506 796B     		ldr	r1, [r7, #52]
 668 0508 53F82110 		ldr	r1, [r3, r1, lsl #2]
 669 050c BB69     		ldr	r3, [r7, #24]
 670 050e 43F82210 		str	r1, [r3, r2, lsl #2]
 161:../src/pwm.cpp **** 				seive[iter2] = -1;
 671              		.loc 1 161 0
 672 0512 BB69     		ldr	r3, [r7, #24]
 673 0514 7A6B     		ldr	r2, [r7, #52]
 674 0516 4FF0FF31 		mov	r1, #-1
 675 051a 43F82210 		str	r1, [r3, r2, lsl #2]
 162:../src/pwm.cpp **** 				iter = iter2;
 676              		.loc 1 162 0
 677 051e 7B6B     		ldr	r3, [r7, #52]
 678 0520 BB63     		str	r3, [r7, #56]
 163:../src/pwm.cpp **** 				last_valid_iter += 1;
 679              		.loc 1 163 0
 680 0522 3B6B     		ldr	r3, [r7, #48]
 681 0524 03F10103 		add	r3, r3, #1
 682 0528 3B63     		str	r3, [r7, #48]
 164:../src/pwm.cpp **** 				iter2 = max_num+1;
 683              		.loc 1 164 0
 684 052a 3B6A     		ldr	r3, [r7, #32]
 685 052c 03F10103 		add	r3, r3, #1
 686 0530 7B63     		str	r3, [r7, #52]
 687              	.L18:
 156:../src/pwm.cpp **** 			for(iter2 = iter; iter2<max_num; ++iter2)
 688              		.loc 1 156 0
 689 0532 7B6B     		ldr	r3, [r7, #52]
 690 0534 03F10103 		add	r3, r3, #1
 691 0538 7B63     		str	r3, [r7, #52]
 692              	.L17:
 156:../src/pwm.cpp **** 			for(iter2 = iter; iter2<max_num; ++iter2)
 693              		.loc 1 156 0 is_stmt 0 discriminator 1
 694 053a 7A6B     		ldr	r2, [r7, #52]
 695 053c 3B6A     		ldr	r3, [r7, #32]
 696 053e 9A42     		cmp	r2, r3
 697 0540 ACBF     		ite	ge
 698 0542 0023     		movge	r3, #0
 699 0544 0123     		movlt	r3, #1
 700 0546 DBB2     		uxtb	r3, r3
 701 0548 002B     		cmp	r3, #0
 702 054a D1D1     		bne	.L19
 703              	.L16:
 148:../src/pwm.cpp **** 	for(iter = 0; iter < max_num; ++iter)
 704              		.loc 1 148 0 is_stmt 1
 705 054c BB6B     		ldr	r3, [r7, #56]
 706 054e 03F10103 		add	r3, r3, #1
 707 0552 BB63     		str	r3, [r7, #56]
 708              	.L14:
 148:../src/pwm.cpp **** 	for(iter = 0; iter < max_num; ++iter)
 709              		.loc 1 148 0 is_stmt 0 discriminator 1
 710 0554 BA6B     		ldr	r2, [r7, #56]
 711 0556 3B6A     		ldr	r3, [r7, #32]
 712 0558 9A42     		cmp	r2, r3
 713 055a ACBF     		ite	ge
 714 055c 0023     		movge	r3, #0
 715 055e 0123     		movlt	r3, #1
 716 0560 DBB2     		uxtb	r3, r3
 717 0562 002B     		cmp	r3, #0
 718 0564 B7D1     		bne	.L20
 165:../src/pwm.cpp **** 				}
 166:../src/pwm.cpp **** 			}
 167:../src/pwm.cpp **** 		}
 168:../src/pwm.cpp **** 	}
 169:../src/pwm.cpp **** 
 170:../src/pwm.cpp **** 	int i = max;
 719              		.loc 1 170 0 is_stmt 1
 720 0566 7B6A     		ldr	r3, [r7, #36]
 721 0568 FB62     		str	r3, [r7, #44]
 171:../src/pwm.cpp **** 	int clkdiv = 1;
 722              		.loc 1 171 0
 723 056a 4FF00103 		mov	r3, #1
 724 056e BB62     		str	r3, [r7, #40]
 172:../src/pwm.cpp **** 	int divisor = 1;
 725              		.loc 1 172 0
 726 0570 4FF00103 		mov	r3, #1
 727 0574 3B61     		str	r3, [r7, #16]
 173:../src/pwm.cpp **** 
 174:../src/pwm.cpp **** 	while(i > 1)
 728              		.loc 1 174 0
 729 0576 3EE0     		b	.L21
 730              	.L27:
 175:../src/pwm.cpp **** 	{
 176:../src/pwm.cpp **** 	for(iter = 1; iter < max_num; ++iter)
 731              		.loc 1 176 0
 732 0578 4FF00103 		mov	r3, #1
 733 057c BB63     		str	r3, [r7, #56]
 734 057e 2CE0     		b	.L22
 735              	.L26:
 177:../src/pwm.cpp **** 	{
 178:../src/pwm.cpp **** 		divisor = seive[iter];
 736              		.loc 1 178 0
 737 0580 BB69     		ldr	r3, [r7, #24]
 738 0582 BA6B     		ldr	r2, [r7, #56]
 739 0584 53F82230 		ldr	r3, [r3, r2, lsl #2]
 740 0588 3B61     		str	r3, [r7, #16]
 179:../src/pwm.cpp **** 		if(divisor == -1){break;}
 741              		.loc 1 179 0
 742 058a 3B69     		ldr	r3, [r7, #16]
 743 058c B3F1FF3F 		cmp	r3, #-1
 744 0590 30D0     		beq	.L29
 745              	.L23:
 180:../src/pwm.cpp **** 		else
 181:../src/pwm.cpp **** 		{
 182:../src/pwm.cpp **** 		if(i%divisor == 0)
 746              		.loc 1 182 0
 747 0592 FB6A     		ldr	r3, [r7, #44]
 748 0594 3A69     		ldr	r2, [r7, #16]
 749 0596 93FBF2F2 		sdiv	r2, r3, r2
 750 059a 3969     		ldr	r1, [r7, #16]
 751 059c 01FB02F2 		mul	r2, r1, r2
 752 05a0 9B1A     		subs	r3, r3, r2
 753 05a2 002B     		cmp	r3, #0
 754 05a4 15D1     		bne	.L24
 183:../src/pwm.cpp **** 			{
 184:../src/pwm.cpp **** 			i /= divisor;
 755              		.loc 1 184 0
 756 05a6 FA6A     		ldr	r2, [r7, #44]
 757 05a8 3B69     		ldr	r3, [r7, #16]
 758 05aa 92FBF3F3 		sdiv	r3, r2, r3
 759 05ae FB62     		str	r3, [r7, #44]
 185:../src/pwm.cpp **** 			clkdiv *= divisor;
 760              		.loc 1 185 0
 761 05b0 BB6A     		ldr	r3, [r7, #40]
 762 05b2 3A69     		ldr	r2, [r7, #16]
 763 05b4 02FB03F3 		mul	r3, r2, r3
 764 05b8 BB62     		str	r3, [r7, #40]
 186:../src/pwm.cpp **** 			if(i < 65536)
 765              		.loc 1 186 0
 766 05ba FA6A     		ldr	r2, [r7, #44]
 767 05bc 4FF6FF73 		movw	r3, #65535
 768 05c0 9A42     		cmp	r2, r3
 769 05c2 06DC     		bgt	.L24
 187:../src/pwm.cpp **** 				{
 188:../src/pwm.cpp **** 				*period = i;
 770              		.loc 1 188 0
 771 05c4 BB68     		ldr	r3, [r7, #8]
 772 05c6 FA6A     		ldr	r2, [r7, #44]
 773 05c8 1A60     		str	r2, [r3, #0]
 189:../src/pwm.cpp **** 				*prescaler = clkdiv;
 774              		.loc 1 189 0
 775 05ca 7B68     		ldr	r3, [r7, #4]
 776 05cc BA6A     		ldr	r2, [r7, #40]
 777 05ce 1A60     		str	r2, [r3, #0]
 778 05d0 19E0     		b	.L25
 779              	.L24:
 176:../src/pwm.cpp **** 	for(iter = 1; iter < max_num; ++iter)
 780              		.loc 1 176 0
 781 05d2 BB6B     		ldr	r3, [r7, #56]
 782 05d4 03F10103 		add	r3, r3, #1
 783 05d8 BB63     		str	r3, [r7, #56]
 784              	.L22:
 176:../src/pwm.cpp **** 	for(iter = 1; iter < max_num; ++iter)
 785              		.loc 1 176 0 is_stmt 0 discriminator 1
 786 05da BA6B     		ldr	r2, [r7, #56]
 787 05dc 3B6A     		ldr	r3, [r7, #32]
 788 05de 9A42     		cmp	r2, r3
 789 05e0 ACBF     		ite	ge
 790 05e2 0023     		movge	r3, #0
 791 05e4 0123     		movlt	r3, #1
 792 05e6 DBB2     		uxtb	r3, r3
 793 05e8 002B     		cmp	r3, #0
 794 05ea C9D1     		bne	.L26
 795 05ec 03E0     		b	.L21
 796              	.L31:
 797 05ee 00BF     		.align	2
 798              	.L30:
 799 05f0 4054894C 		.word	1284068416
 800              	.L29:
 179:../src/pwm.cpp **** 		if(divisor == -1){break;}
 801              		.loc 1 179 0 is_stmt 1
 802 05f4 00BF     		nop
 803              	.L21:
 174:../src/pwm.cpp **** 	while(i > 1)
 804              		.loc 1 174 0 discriminator 1
 805 05f6 FB6A     		ldr	r3, [r7, #44]
 806 05f8 012B     		cmp	r3, #1
 807 05fa D4BF     		ite	le
 808 05fc 0023     		movle	r3, #0
 809 05fe 0123     		movgt	r3, #1
 810 0600 DBB2     		uxtb	r3, r3
 811 0602 002B     		cmp	r3, #0
 812 0604 B8D1     		bne	.L27
 813              	.L25:
 814 0606 B546     		mov	sp, r6
 815              	.LBE6:
 190:../src/pwm.cpp **** 				return;
 191:../src/pwm.cpp **** 				}
 192:../src/pwm.cpp **** 			}
 193:../src/pwm.cpp **** 		}
 194:../src/pwm.cpp **** 	}
 195:../src/pwm.cpp **** 	}
 196:../src/pwm.cpp **** }
 816              		.loc 1 196 0
 817 0608 07F14407 		add	r7, r7, #68
 818 060c BD46     		mov	sp, r7
 819 060e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 820              		.cfi_endproc
 821              	.LFE115:
 823              	.Letext0:
 824              		.file 2 "/home/aghosh01/gcc-arm-none-eabi-4_7-2012q4/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../.
 825              		.file 3 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x.h"
 826              		.file 4 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x_gpio.h"
 827              		.file 5 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x_tim.h"
 828              		.file 6 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pwm.cpp
     /tmp/ccvT3FbN.s:19     .text:00000000 $t
     /tmp/ccvT3FbN.s:24     .text:00000000 _Z13pwm_out1_initt
     /tmp/ccvT3FbN.s:435    .text:00000330 _Z15config_pwm_freqiPiS_
     /tmp/ccvT3FbN.s:181    .text:00000154 _Z11pwm1_outputf
     /tmp/ccvT3FbN.s:229    .text:00000198 _Z13pwm_out2_initt
     /tmp/ccvT3FbN.s:385    .text:000002ec _Z11pwm2_outputf
     /tmp/ccvT3FbN.s:799    .text:000005f0 $d
     /tmp/ccvT3FbN.s:802    .text:000005f4 $t
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.934603b1d669cb2b32fd4cb6dd11b673
                           .group:00000000 wm4.common_headers.h.9.8e587b4e25369b5c8e89ee518c5d2e90
                           .group:00000000 wm4.stm32f30x.h.56.6f19c65e98e3319a61449cb2b2455af5
                           .group:00000000 wm4.core_cm4.h.32.1434cd257ff5806b1b03cd32ab0641e9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.29.013e5bcf58dba2d27c60184174208e07
                           .group:00000000 wm4.core_cm4.h.155.170ad2f92df387b9fa0dc3deabd34ef9
                           .group:00000000 wm4.stm32f30x.h.294.d8a54360eca16e4157694b52a095202d
                           .group:00000000 wm4.stm32f30x_adc.h.130.cbebad91f78fb87381fe0860eea6104e
                           .group:00000000 wm4.stm32f30x_can.h.50.8b8f5d301152c422a6e50622b33ef620
                           .group:00000000 wm4.stm32f30x_crc.h.54.66d4c5e565e18566aebd9abfd4bcd4b0
                           .group:00000000 wm4.stm32f30x_comp.h.91.06ae44150aaaa82c077b71df8db3541a
                           .group:00000000 wm4.stm32f30x_dac.h.49.b1b5b26e4ca241dbe67fa16dc86a615f
                           .group:00000000 wm4.stm32f30x_dbgmcu.h.53.b238a263ce6a2cc83f610cc35302a38b
                           .group:00000000 wm4.stm32f30x_dma.h.96.d7a2ddd10023e12781aa8ff5ac15d212
                           .group:00000000 wm4.stm32f30x_exti.h.60.8ca0809491a21dec6fc69cf7471e2bab
                           .group:00000000 wm4.stm32f30x_flash.h.70.32613455dfe7328932f786a224daac23
                           .group:00000000 wm4.stm32f30x_gpio.h.50.408e1f6250246e4cc28221970909d34c
                           .group:00000000 wm4.stm32f30x_syscfg.h.58.4cadeb4ec8e47d36b972bbb6b96b7161
                           .group:00000000 wm4.stm32f30x_i2c.h.86.3d51d4edc0e3b9ee9aae045ccbb7739a
                           .group:00000000 wm4.stm32f30x_iwdg.h.59.467d704fb073a015941f19b50fa6470a
                           .group:00000000 wm4.stm32f30x_opamp.h.75.704e2e5e2aab039de307aaa2dcc99fa5
                           .group:00000000 wm4.stm32f30x_pwr.h.59.5c85acff2a3e3c5085b2140c06025cfc
                           .group:00000000 wm4.stm32f30x_rcc.h.79.5ba7cac1e74879861a72556c25322aa4
                           .group:00000000 wm4.stm32f30x_rtc.h.133.d184e08ff40bda44db4bed94f9633384
                           .group:00000000 wm4.stm32f30x_spi.h.119.4d21ec94ec14f3553a127e61c0a9874f
                           .group:00000000 wm4.stm32f30x_tim.h.175.d4a93cff2e7924577147254e501271b6
                           .group:00000000 wm4.stm32f30x_usart.h.110.c89016273702821ff4f9fe43881f70b5
                           .group:00000000 wm4.stm32f30x_wwdg.h.58.4688eee61a2709866472b4b4c07d9275
                           .group:00000000 wm4.stm32f30x_misc.h.113.6a52e4fe7c3825a3ab05990f30dddf92
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.fa6206289f154965d075fc01e2867808
                           .group:00000000 wm4._default_types.h.6.1dbd2e581fd590860c7c17f21d147e91
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.math.h.35.4ec5c5df469deeb27bddb969fc54c06a

UNDEFINED SYMBOLS
RCC_AHBPeriphClockCmd
GPIO_PinAFConfig
GPIO_Init
RCC_APB1PeriphClockCmd
TIM_InternalClockConfig
TIM_TimeBaseInit
TIM_OC1Init
TIM_OC1PreloadConfig
TIM_ARRPreloadConfig
TIM_CCxCmd
TIM_Cmd
TIM_GenerateEvent
TIM_SetCompare1
TIM_OC2Init
TIM_OC2PreloadConfig
TIM_SetCompare2
__aeabi_i2d
__aeabi_d2iz
sqrt
