   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f30x_tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.align	2
  20              		.global	TIM_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	TIM_DeInit:
  25              	.LFB111:
  26              		.file 1 "../src/stm32f30x_tim.c"
   1:../src/stm32f30x_tim.c **** /**
   2:../src/stm32f30x_tim.c ****   ******************************************************************************
   3:../src/stm32f30x_tim.c ****   * @file    stm32f30x_tim.c
   4:../src/stm32f30x_tim.c ****   * @author  MCD Application Team
   5:../src/stm32f30x_tim.c ****   * @version V1.0.1
   6:../src/stm32f30x_tim.c ****   * @date    23-October-2012
   7:../src/stm32f30x_tim.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../src/stm32f30x_tim.c ****   *          functionalities of the TIM peripheral:
   9:../src/stm32f30x_tim.c ****   *            + TimeBase management
  10:../src/stm32f30x_tim.c ****   *            + Output Compare management
  11:../src/stm32f30x_tim.c ****   *            + Input Capture management
  12:../src/stm32f30x_tim.c ****   *            + Advanced-control timers (TIM1 and TIM8) specific features  
  13:../src/stm32f30x_tim.c ****   *            + Interrupts, DMA and flags management
  14:../src/stm32f30x_tim.c ****   *            + Clocks management
  15:../src/stm32f30x_tim.c ****   *            + Synchronization management
  16:../src/stm32f30x_tim.c ****   *            + Specific interface management
  17:../src/stm32f30x_tim.c ****   *            + Specific remapping management      
  18:../src/stm32f30x_tim.c ****   *              
  19:../src/stm32f30x_tim.c ****   @verbatim
  20:../src/stm32f30x_tim.c ****     
  21:../src/stm32f30x_tim.c ****   ==============================================================================
  22:../src/stm32f30x_tim.c ****                        ##### How to use this driver #####
  23:../src/stm32f30x_tim.c ****   ==============================================================================
  24:../src/stm32f30x_tim.c ****    [..] This driver provides functions to configure and program the TIM 
  25:../src/stm32f30x_tim.c ****         of all stm32f30x devices.
  26:../src/stm32f30x_tim.c ****         These functions are split in 9 groups: 
  27:../src/stm32f30x_tim.c ****      
  28:../src/stm32f30x_tim.c ****         (#) TIM TimeBase management: this group includes all needed functions 
  29:../src/stm32f30x_tim.c ****             to configure the TM Timebase unit:
  30:../src/stm32f30x_tim.c ****                  (++) Set/Get Prescaler
  31:../src/stm32f30x_tim.c ****                  (++) Set/Get Autoreload  
  32:../src/stm32f30x_tim.c ****                  (++) Counter modes configuration
  33:../src/stm32f30x_tim.c ****                  (++) Set Clock division  
  34:../src/stm32f30x_tim.c ****                  (++) Select the One Pulse mode
  35:../src/stm32f30x_tim.c ****                  (++) Update Request Configuration
  36:../src/stm32f30x_tim.c ****                  (++) Update Disable Configuration
  37:../src/stm32f30x_tim.c ****                  (++) Auto-Preload Configuration 
  38:../src/stm32f30x_tim.c ****                  (++) Enable/Disable the counter     
  39:../src/stm32f30x_tim.c ****                    
  40:../src/stm32f30x_tim.c ****        (#) TIM Output Compare management: this group includes all needed 
  41:../src/stm32f30x_tim.c ****            functions to configure the Capture/Compare unit used in Output 
  42:../src/stm32f30x_tim.c ****            compare mode: 
  43:../src/stm32f30x_tim.c ****                  (++) Configure each channel, independently, in Output Compare mode
  44:../src/stm32f30x_tim.c ****                  (++) Select the output compare modes
  45:../src/stm32f30x_tim.c ****                  (++) Select the Polarities of each channel
  46:../src/stm32f30x_tim.c ****                  (++) Set/Get the Capture/Compare register values
  47:../src/stm32f30x_tim.c ****                  (++) Select the Output Compare Fast mode 
  48:../src/stm32f30x_tim.c ****                  (++) Select the Output Compare Forced mode  
  49:../src/stm32f30x_tim.c ****                  (++) Output Compare-Preload Configuration 
  50:../src/stm32f30x_tim.c ****                  (++) Clear Output Compare Reference
  51:../src/stm32f30x_tim.c ****                  (++) Select the OCREF Clear signal
  52:../src/stm32f30x_tim.c ****                  (++) Enable/Disable the Capture/Compare Channels    
  53:../src/stm32f30x_tim.c ****                     
  54:../src/stm32f30x_tim.c ****         (#) TIM Input Capture management: this group includes all needed 
  55:../src/stm32f30x_tim.c ****             functions to configure the Capture/Compare unit used in 
  56:../src/stm32f30x_tim.c ****             Input Capture mode:
  57:../src/stm32f30x_tim.c ****                  (++) Configure each channel in input capture mode
  58:../src/stm32f30x_tim.c ****                  (++) Configure Channel1/2 in PWM Input mode
  59:../src/stm32f30x_tim.c ****                  (++) Set the Input Capture Prescaler
  60:../src/stm32f30x_tim.c ****                  (++) Get the Capture/Compare values      
  61:../src/stm32f30x_tim.c ****                      
  62:../src/stm32f30x_tim.c ****         (#) Advanced-control timers (TIM1 and TIM8) specific features
  63:../src/stm32f30x_tim.c ****                  (++) Configures the Break input, dead time, Lock level, the OSSI,
  64:../src/stm32f30x_tim.c ****                       the OSSR State and the AOE(automatic output enable)
  65:../src/stm32f30x_tim.c ****                  (++) Enable/Disable the TIM peripheral Main Outputs
  66:../src/stm32f30x_tim.c ****                  (++) Select the Commutation event
  67:../src/stm32f30x_tim.c ****                  (++) Set/Reset the Capture Compare Preload Control bit
  68:../src/stm32f30x_tim.c ****                                
  69:../src/stm32f30x_tim.c ****         (#) TIM interrupts, DMA and flags management
  70:../src/stm32f30x_tim.c ****                  (++) Enable/Disable interrupt sources
  71:../src/stm32f30x_tim.c ****                  (++) Get flags status
  72:../src/stm32f30x_tim.c ****                  (++) Clear flags/ Pending bits
  73:../src/stm32f30x_tim.c ****                  (++) Enable/Disable DMA requests 
  74:../src/stm32f30x_tim.c ****                  (++) Configure DMA burst mode
  75:../src/stm32f30x_tim.c ****                  (++) Select CaptureCompare DMA request  
  76:../src/stm32f30x_tim.c ****                 
  77:../src/stm32f30x_tim.c ****         (#) TIM clocks management: this group includes all needed functions 
  78:../src/stm32f30x_tim.c ****             to configure the clock controller unit:
  79:../src/stm32f30x_tim.c ****                  (++) Select internal/External clock
  80:../src/stm32f30x_tim.c ****                  (++) Select the external clock mode: ETR(Mode1/Mode2), TIx or ITRx
  81:../src/stm32f30x_tim.c ****          
  82:../src/stm32f30x_tim.c ****         (#) TIM synchronization management: this group includes all needed 
  83:../src/stm32f30x_tim.c ****             functions to configure the Synchronization unit:
  84:../src/stm32f30x_tim.c ****                  (++) Select Input Trigger  
  85:../src/stm32f30x_tim.c ****                  (++) Select Output Trigger  
  86:../src/stm32f30x_tim.c ****                  (++) Select Master Slave Mode 
  87:../src/stm32f30x_tim.c ****                  (++) ETR Configuration when used as external trigger   
  88:../src/stm32f30x_tim.c ****        
  89:../src/stm32f30x_tim.c ****         (#) TIM specific interface management, this group includes all 
  90:../src/stm32f30x_tim.c ****             needed functions to use the specific TIM interface:
  91:../src/stm32f30x_tim.c ****                  (++) Encoder Interface Configuration
  92:../src/stm32f30x_tim.c ****                  (++) Select Hall Sensor   
  93:../src/stm32f30x_tim.c ****            
  94:../src/stm32f30x_tim.c ****         (#) TIM specific remapping management includes the Remapping 
  95:../src/stm32f30x_tim.c ****             configuration of specific timers               
  96:../src/stm32f30x_tim.c ****      
  97:../src/stm32f30x_tim.c ****   @endverbatim
  98:../src/stm32f30x_tim.c ****       
  99:../src/stm32f30x_tim.c ****   ******************************************************************************
 100:../src/stm32f30x_tim.c ****   * @attention
 101:../src/stm32f30x_tim.c ****   *
 102:../src/stm32f30x_tim.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
 103:../src/stm32f30x_tim.c ****   *
 104:../src/stm32f30x_tim.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
 105:../src/stm32f30x_tim.c ****   * You may not use this file except in compliance with the License.
 106:../src/stm32f30x_tim.c ****   * You may obtain a copy of the License at:
 107:../src/stm32f30x_tim.c ****   *
 108:../src/stm32f30x_tim.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 109:../src/stm32f30x_tim.c ****   *
 110:../src/stm32f30x_tim.c ****   * Unless required by applicable law or agreed to in writing, software 
 111:../src/stm32f30x_tim.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 112:../src/stm32f30x_tim.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 113:../src/stm32f30x_tim.c ****   * See the License for the specific language governing permissions and
 114:../src/stm32f30x_tim.c ****   * limitations under the License.
 115:../src/stm32f30x_tim.c ****   *
 116:../src/stm32f30x_tim.c ****   ******************************************************************************
 117:../src/stm32f30x_tim.c ****   */
 118:../src/stm32f30x_tim.c **** 
 119:../src/stm32f30x_tim.c **** /* Includes ------------------------------------------------------------------*/
 120:../src/stm32f30x_tim.c **** #include "stm32f30x_tim.h"
 121:../src/stm32f30x_tim.c **** #include "stm32f30x_rcc.h"
 122:../src/stm32f30x_tim.c **** 
 123:../src/stm32f30x_tim.c **** /** @addtogroup STM32F30x_StdPeriph_Driver
 124:../src/stm32f30x_tim.c ****   * @{
 125:../src/stm32f30x_tim.c ****   */
 126:../src/stm32f30x_tim.c **** 
 127:../src/stm32f30x_tim.c **** /** @defgroup TIM 
 128:../src/stm32f30x_tim.c ****   * @brief TIM driver modules
 129:../src/stm32f30x_tim.c ****   * @{
 130:../src/stm32f30x_tim.c ****   */
 131:../src/stm32f30x_tim.c **** 
 132:../src/stm32f30x_tim.c **** /* Private typedef -----------------------------------------------------------*/
 133:../src/stm32f30x_tim.c **** /* Private define ------------------------------------------------------------*/
 134:../src/stm32f30x_tim.c **** 
 135:../src/stm32f30x_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
 136:../src/stm32f30x_tim.c **** #define SMCR_ETR_MASK      ((uint16_t)0x00FF) 
 137:../src/stm32f30x_tim.c **** #define CCMR_OFFSET        ((uint16_t)0x0018)
 138:../src/stm32f30x_tim.c **** #define CCER_CCE_SET       ((uint16_t)0x0001)  
 139:../src/stm32f30x_tim.c **** #define	CCER_CCNE_SET      ((uint16_t)0x0004) 
 140:../src/stm32f30x_tim.c **** #define CCMR_OC13M_MASK    ((uint32_t)0xFFFEFF8F)
 141:../src/stm32f30x_tim.c **** #define CCMR_OC24M_MASK    ((uint32_t)0xFEFF8FFF) 
 142:../src/stm32f30x_tim.c **** 
 143:../src/stm32f30x_tim.c **** /* Private macro -------------------------------------------------------------*/
 144:../src/stm32f30x_tim.c **** /* Private variables ---------------------------------------------------------*/
 145:../src/stm32f30x_tim.c **** /* Private function prototypes -----------------------------------------------*/
 146:../src/stm32f30x_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 147:../src/stm32f30x_tim.c ****                        uint16_t TIM_ICFilter);
 148:../src/stm32f30x_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 149:../src/stm32f30x_tim.c ****                        uint16_t TIM_ICFilter);
 150:../src/stm32f30x_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 151:../src/stm32f30x_tim.c ****                        uint16_t TIM_ICFilter);
 152:../src/stm32f30x_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 153:../src/stm32f30x_tim.c ****                        uint16_t TIM_ICFilter);
 154:../src/stm32f30x_tim.c **** 
 155:../src/stm32f30x_tim.c **** /* Private functions ---------------------------------------------------------*/
 156:../src/stm32f30x_tim.c **** 
 157:../src/stm32f30x_tim.c **** /** @defgroup TIM_Private_Functions
 158:../src/stm32f30x_tim.c ****   * @{
 159:../src/stm32f30x_tim.c ****   */
 160:../src/stm32f30x_tim.c **** 
 161:../src/stm32f30x_tim.c **** /** @defgroup TIM_Group1 TimeBase management functions
 162:../src/stm32f30x_tim.c ****  *  @brief   TimeBase management functions 
 163:../src/stm32f30x_tim.c ****  *
 164:../src/stm32f30x_tim.c **** @verbatim   
 165:../src/stm32f30x_tim.c ****  ===============================================================================
 166:../src/stm32f30x_tim.c ****                    ##### TimeBase management functions #####
 167:../src/stm32f30x_tim.c ****  ===============================================================================  
 168:../src/stm32f30x_tim.c ****   
 169:../src/stm32f30x_tim.c ****              
 170:../src/stm32f30x_tim.c ****     *** TIM Driver: how to use it in Timing(Time base) Mode ***
 171:../src/stm32f30x_tim.c ****     ============================================================ 
 172:../src/stm32f30x_tim.c ****     [..]
 173:../src/stm32f30x_tim.c ****     To use the Timer in Timing(Time base) mode, the following steps are mandatory:
 174:../src/stm32f30x_tim.c ****        
 175:../src/stm32f30x_tim.c ****     (#) Enable TIM clock using 
 176:../src/stm32f30x_tim.c ****         RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function               
 177:../src/stm32f30x_tim.c ****     (#) Fill the TIM_TimeBaseInitStruct with the desired parameters.   
 178:../src/stm32f30x_tim.c ****     (#) Call TIM_TimeBaseInit(TIMx, &TIM_TimeBaseInitStruct) to configure 
 179:../src/stm32f30x_tim.c ****         the Time Base unit
 180:../src/stm32f30x_tim.c ****         with the corresponding configuration        
 181:../src/stm32f30x_tim.c ****     (#) Enable the NVIC if you need to generate the update interrupt.        
 182:../src/stm32f30x_tim.c ****     (#) Enable the corresponding interrupt using the function 
 183:../src/stm32f30x_tim.c ****         TIM_ITConfig(TIMx, TIM_IT_Update)      
 184:../src/stm32f30x_tim.c ****     (#) Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 185:../src/stm32f30x_tim.c ****     [..]                  
 186:../src/stm32f30x_tim.c ****     (@) All other functions can be used separately to modify, if needed,
 187:../src/stm32f30x_tim.c ****         a specific feature of the Timer. 
 188:../src/stm32f30x_tim.c **** 
 189:../src/stm32f30x_tim.c **** @endverbatim
 190:../src/stm32f30x_tim.c ****   * @{
 191:../src/stm32f30x_tim.c ****   */
 192:../src/stm32f30x_tim.c ****   
 193:../src/stm32f30x_tim.c **** /**
 194:../src/stm32f30x_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 195:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 6 ,7 ,8, 15, 16 or 17 to select the TIM peripheral.
 196:../src/stm32f30x_tim.c ****   * @retval None
 197:../src/stm32f30x_tim.c **** 
 198:../src/stm32f30x_tim.c ****   */
 199:../src/stm32f30x_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 200:../src/stm32f30x_tim.c **** {
  27              		.loc 1 200 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 201:../src/stm32f30x_tim.c ****   /* Check the parameters */
 202:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 203:../src/stm32f30x_tim.c ****  
 204:../src/stm32f30x_tim.c ****   if (TIMx == TIM1)
  43              		.loc 1 204 0
  44 0008 7A68     		ldr	r2, [r7, #4]
  45 000a 4FF43053 		mov	r3, #11264
  46 000e C4F20103 		movt	r3, 16385
  47 0012 9A42     		cmp	r2, r3
  48 0014 0CD1     		bne	.L2
 205:../src/stm32f30x_tim.c ****   {
 206:../src/stm32f30x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
  49              		.loc 1 206 0
  50 0016 4FF40060 		mov	r0, #2048
  51 001a 4FF00101 		mov	r1, #1
  52 001e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 207:../src/stm32f30x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
  53              		.loc 1 207 0
  54 0022 4FF40060 		mov	r0, #2048
  55 0026 4FF00001 		mov	r1, #0
  56 002a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  57 002e AFE0     		b	.L1
  58              	.L2:
 208:../src/stm32f30x_tim.c ****   } 
 209:../src/stm32f30x_tim.c ****   else if (TIMx == TIM2) 
  59              		.loc 1 209 0
  60 0030 7B68     		ldr	r3, [r7, #4]
  61 0032 B3F1804F 		cmp	r3, #1073741824
  62 0036 0CD1     		bne	.L4
 210:../src/stm32f30x_tim.c ****   {     
 211:../src/stm32f30x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
  63              		.loc 1 211 0
  64 0038 4FF00100 		mov	r0, #1
  65 003c 4FF00101 		mov	r1, #1
  66 0040 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 212:../src/stm32f30x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
  67              		.loc 1 212 0
  68 0044 4FF00100 		mov	r0, #1
  69 0048 4FF00001 		mov	r1, #0
  70 004c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  71 0050 9EE0     		b	.L1
  72              	.L4:
 213:../src/stm32f30x_tim.c ****   }  
 214:../src/stm32f30x_tim.c ****   else if (TIMx == TIM3)
  73              		.loc 1 214 0
  74 0052 7A68     		ldr	r2, [r7, #4]
  75 0054 4FF48063 		mov	r3, #1024
  76 0058 C4F20003 		movt	r3, 16384
  77 005c 9A42     		cmp	r2, r3
  78 005e 0CD1     		bne	.L5
 215:../src/stm32f30x_tim.c ****   { 
 216:../src/stm32f30x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
  79              		.loc 1 216 0
  80 0060 4FF00200 		mov	r0, #2
  81 0064 4FF00101 		mov	r1, #1
  82 0068 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 217:../src/stm32f30x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
  83              		.loc 1 217 0
  84 006c 4FF00200 		mov	r0, #2
  85 0070 4FF00001 		mov	r1, #0
  86 0074 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  87 0078 8AE0     		b	.L1
  88              	.L5:
 218:../src/stm32f30x_tim.c ****   }  
 219:../src/stm32f30x_tim.c ****   else if (TIMx == TIM4)
  89              		.loc 1 219 0
  90 007a 7A68     		ldr	r2, [r7, #4]
  91 007c 4FF40063 		mov	r3, #2048
  92 0080 C4F20003 		movt	r3, 16384
  93 0084 9A42     		cmp	r2, r3
  94 0086 0CD1     		bne	.L6
 220:../src/stm32f30x_tim.c ****   { 
 221:../src/stm32f30x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
  95              		.loc 1 221 0
  96 0088 4FF00400 		mov	r0, #4
  97 008c 4FF00101 		mov	r1, #1
  98 0090 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 222:../src/stm32f30x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
  99              		.loc 1 222 0
 100 0094 4FF00400 		mov	r0, #4
 101 0098 4FF00001 		mov	r1, #0
 102 009c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 103 00a0 76E0     		b	.L1
 104              	.L6:
 223:../src/stm32f30x_tim.c ****   }   
 224:../src/stm32f30x_tim.c ****   else if (TIMx == TIM6)  
 105              		.loc 1 224 0
 106 00a2 7A68     		ldr	r2, [r7, #4]
 107 00a4 4FF48053 		mov	r3, #4096
 108 00a8 C4F20003 		movt	r3, 16384
 109 00ac 9A42     		cmp	r2, r3
 110 00ae 0CD1     		bne	.L7
 225:../src/stm32f30x_tim.c ****   {    
 226:../src/stm32f30x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 111              		.loc 1 226 0
 112 00b0 4FF01000 		mov	r0, #16
 113 00b4 4FF00101 		mov	r1, #1
 114 00b8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 227:../src/stm32f30x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 115              		.loc 1 227 0
 116 00bc 4FF01000 		mov	r0, #16
 117 00c0 4FF00001 		mov	r1, #0
 118 00c4 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 119 00c8 62E0     		b	.L1
 120              	.L7:
 228:../src/stm32f30x_tim.c ****   }  
 229:../src/stm32f30x_tim.c ****   else if (TIMx == TIM7)
 121              		.loc 1 229 0
 122 00ca 7A68     		ldr	r2, [r7, #4]
 123 00cc 4FF4A053 		mov	r3, #5120
 124 00d0 C4F20003 		movt	r3, 16384
 125 00d4 9A42     		cmp	r2, r3
 126 00d6 0CD1     		bne	.L8
 230:../src/stm32f30x_tim.c ****   {      
 231:../src/stm32f30x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 127              		.loc 1 231 0
 128 00d8 4FF02000 		mov	r0, #32
 129 00dc 4FF00101 		mov	r1, #1
 130 00e0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 232:../src/stm32f30x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 131              		.loc 1 232 0
 132 00e4 4FF02000 		mov	r0, #32
 133 00e8 4FF00001 		mov	r1, #0
 134 00ec FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 135 00f0 4EE0     		b	.L1
 136              	.L8:
 233:../src/stm32f30x_tim.c ****   }  
 234:../src/stm32f30x_tim.c ****   else if (TIMx == TIM8)
 137              		.loc 1 234 0
 138 00f2 7A68     		ldr	r2, [r7, #4]
 139 00f4 4FF45053 		mov	r3, #13312
 140 00f8 C4F20103 		movt	r3, 16385
 141 00fc 9A42     		cmp	r2, r3
 142 00fe 0CD1     		bne	.L9
 235:../src/stm32f30x_tim.c ****   {      
 236:../src/stm32f30x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 143              		.loc 1 236 0
 144 0100 4FF40050 		mov	r0, #8192
 145 0104 4FF00101 		mov	r1, #1
 146 0108 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 237:../src/stm32f30x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 147              		.loc 1 237 0
 148 010c 4FF40050 		mov	r0, #8192
 149 0110 4FF00001 		mov	r1, #0
 150 0114 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 151 0118 3AE0     		b	.L1
 152              	.L9:
 238:../src/stm32f30x_tim.c ****   }    
 239:../src/stm32f30x_tim.c ****   else if (TIMx == TIM15)
 153              		.loc 1 239 0
 154 011a 7A68     		ldr	r2, [r7, #4]
 155 011c 4FF48043 		mov	r3, #16384
 156 0120 C4F20103 		movt	r3, 16385
 157 0124 9A42     		cmp	r2, r3
 158 0126 0CD1     		bne	.L10
 240:../src/stm32f30x_tim.c ****   {      
 241:../src/stm32f30x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, ENABLE);
 159              		.loc 1 241 0
 160 0128 4FF48030 		mov	r0, #65536
 161 012c 4FF00101 		mov	r1, #1
 162 0130 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 242:../src/stm32f30x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, DISABLE);  
 163              		.loc 1 242 0
 164 0134 4FF48030 		mov	r0, #65536
 165 0138 4FF00001 		mov	r1, #0
 166 013c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 167 0140 26E0     		b	.L1
 168              	.L10:
 243:../src/stm32f30x_tim.c ****   }  
 244:../src/stm32f30x_tim.c ****   else if (TIMx == TIM16) 
 169              		.loc 1 244 0
 170 0142 7A68     		ldr	r2, [r7, #4]
 171 0144 4FF48843 		mov	r3, #17408
 172 0148 C4F20103 		movt	r3, 16385
 173 014c 9A42     		cmp	r2, r3
 174 014e 0CD1     		bne	.L11
 245:../src/stm32f30x_tim.c ****   {       
 246:../src/stm32f30x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, ENABLE);
 175              		.loc 1 246 0
 176 0150 4FF40030 		mov	r0, #131072
 177 0154 4FF00101 		mov	r1, #1
 178 0158 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 247:../src/stm32f30x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, DISABLE);  
 179              		.loc 1 247 0
 180 015c 4FF40030 		mov	r0, #131072
 181 0160 4FF00001 		mov	r1, #0
 182 0164 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 183 0168 12E0     		b	.L1
 184              	.L11:
 248:../src/stm32f30x_tim.c ****   }  
 249:../src/stm32f30x_tim.c ****   else
 250:../src/stm32f30x_tim.c ****   { 
 251:../src/stm32f30x_tim.c ****     if (TIMx == TIM17) 
 185              		.loc 1 251 0
 186 016a 7A68     		ldr	r2, [r7, #4]
 187 016c 4FF49043 		mov	r3, #18432
 188 0170 C4F20103 		movt	r3, 16385
 189 0174 9A42     		cmp	r2, r3
 190 0176 0BD1     		bne	.L1
 252:../src/stm32f30x_tim.c ****     {     
 253:../src/stm32f30x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, ENABLE);
 191              		.loc 1 253 0
 192 0178 4FF48020 		mov	r0, #262144
 193 017c 4FF00101 		mov	r1, #1
 194 0180 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 254:../src/stm32f30x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, DISABLE); 
 195              		.loc 1 254 0
 196 0184 4FF48020 		mov	r0, #262144
 197 0188 4FF00001 		mov	r1, #0
 198 018c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 199              	.L1:
 255:../src/stm32f30x_tim.c ****     }   
 256:../src/stm32f30x_tim.c ****   }
 257:../src/stm32f30x_tim.c **** }
 200              		.loc 1 257 0
 201 0190 07F10807 		add	r7, r7, #8
 202 0194 BD46     		mov	sp, r7
 203 0196 80BD     		pop	{r7, pc}
 204              		.cfi_endproc
 205              	.LFE111:
 207              		.align	2
 208              		.global	TIM_TimeBaseInit
 209              		.thumb
 210              		.thumb_func
 212              	TIM_TimeBaseInit:
 213              	.LFB112:
 258:../src/stm32f30x_tim.c **** 
 259:../src/stm32f30x_tim.c **** /**
 260:../src/stm32f30x_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 261:../src/stm32f30x_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 262:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 6 ,7 ,8, 15, 16 or 17 to select the TIM peripheral.
 263:../src/stm32f30x_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef structure
 264:../src/stm32f30x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 265:../src/stm32f30x_tim.c ****   * @retval None
 266:../src/stm32f30x_tim.c ****   */
 267:../src/stm32f30x_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 268:../src/stm32f30x_tim.c **** {
 214              		.loc 1 268 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 16
 217              		@ frame_needed = 1, uses_anonymous_args = 0
 218              		@ link register save eliminated.
 219 0198 80B4     		push	{r7}
 220              	.LCFI3:
 221              		.cfi_def_cfa_offset 4
 222              		.cfi_offset 7, -4
 223 019a 85B0     		sub	sp, sp, #20
 224              	.LCFI4:
 225              		.cfi_def_cfa_offset 24
 226 019c 00AF     		add	r7, sp, #0
 227              	.LCFI5:
 228              		.cfi_def_cfa_register 7
 229 019e 7860     		str	r0, [r7, #4]
 230 01a0 3960     		str	r1, [r7, #0]
 269:../src/stm32f30x_tim.c ****   uint16_t tmpcr1 = 0;
 231              		.loc 1 269 0
 232 01a2 4FF00003 		mov	r3, #0
 233 01a6 FB81     		strh	r3, [r7, #14]	@ movhi
 270:../src/stm32f30x_tim.c **** 
 271:../src/stm32f30x_tim.c ****   /* Check the parameters */
 272:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 273:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 274:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 275:../src/stm32f30x_tim.c **** 
 276:../src/stm32f30x_tim.c ****   tmpcr1 = TIMx->CR1;  
 234              		.loc 1 276 0
 235 01a8 7B68     		ldr	r3, [r7, #4]
 236 01aa 1B88     		ldrh	r3, [r3, #0]	@ movhi
 237 01ac FB81     		strh	r3, [r7, #14]	@ movhi
 277:../src/stm32f30x_tim.c **** 
 278:../src/stm32f30x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM2) || 
 238              		.loc 1 278 0
 239 01ae 7A68     		ldr	r2, [r7, #4]
 240 01b0 4FF43053 		mov	r3, #11264
 241 01b4 C4F20103 		movt	r3, 16385
 242 01b8 9A42     		cmp	r2, r3
 243 01ba 18D0     		beq	.L13
 244              		.loc 1 278 0 is_stmt 0 discriminator 1
 245 01bc 7A68     		ldr	r2, [r7, #4]
 246 01be 4FF45053 		mov	r3, #13312
 247 01c2 C4F20103 		movt	r3, 16385
 248 01c6 9A42     		cmp	r2, r3
 249 01c8 11D0     		beq	.L13
 250 01ca 7B68     		ldr	r3, [r7, #4]
 251 01cc B3F1804F 		cmp	r3, #1073741824
 252 01d0 0DD0     		beq	.L13
 253 01d2 7A68     		ldr	r2, [r7, #4]
 254 01d4 4FF48063 		mov	r3, #1024
 255 01d8 C4F20003 		movt	r3, 16384
 256 01dc 9A42     		cmp	r2, r3
 257 01de 06D0     		beq	.L13
 279:../src/stm32f30x_tim.c ****      (TIMx == TIM3)|| (TIMx == TIM4)) 
 258              		.loc 1 279 0 is_stmt 1
 259 01e0 7A68     		ldr	r2, [r7, #4]
 260 01e2 4FF40063 		mov	r3, #2048
 261 01e6 C4F20003 		movt	r3, 16384
 262 01ea 9A42     		cmp	r2, r3
 263 01ec 08D1     		bne	.L14
 264              	.L13:
 280:../src/stm32f30x_tim.c ****   {
 281:../src/stm32f30x_tim.c ****     /* Select the Counter Mode */
 282:../src/stm32f30x_tim.c ****     tmpcr1 &= (uint16_t)(~(TIM_CR1_DIR | TIM_CR1_CMS));
 265              		.loc 1 282 0
 266 01ee FB89     		ldrh	r3, [r7, #14]	@ movhi
 267 01f0 23F07003 		bic	r3, r3, #112
 268 01f4 FB81     		strh	r3, [r7, #14]	@ movhi
 283:../src/stm32f30x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 269              		.loc 1 283 0
 270 01f6 3B68     		ldr	r3, [r7, #0]
 271 01f8 5A88     		ldrh	r2, [r3, #2]
 272 01fa FB89     		ldrh	r3, [r7, #14]	@ movhi
 273 01fc 1343     		orrs	r3, r3, r2
 274 01fe FB81     		strh	r3, [r7, #14]	@ movhi
 275              	.L14:
 284:../src/stm32f30x_tim.c ****   }
 285:../src/stm32f30x_tim.c ****  
 286:../src/stm32f30x_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 276              		.loc 1 286 0
 277 0200 7A68     		ldr	r2, [r7, #4]
 278 0202 4FF48053 		mov	r3, #4096
 279 0206 C4F20003 		movt	r3, 16384
 280 020a 9A42     		cmp	r2, r3
 281 020c 0FD0     		beq	.L15
 282              		.loc 1 286 0 is_stmt 0 discriminator 1
 283 020e 7A68     		ldr	r2, [r7, #4]
 284 0210 4FF4A053 		mov	r3, #5120
 285 0214 C4F20003 		movt	r3, 16384
 286 0218 9A42     		cmp	r2, r3
 287 021a 08D0     		beq	.L15
 287:../src/stm32f30x_tim.c ****   {
 288:../src/stm32f30x_tim.c ****     /* Set the clock division */
 289:../src/stm32f30x_tim.c ****     tmpcr1 &=  (uint16_t)(~TIM_CR1_CKD);
 288              		.loc 1 289 0 is_stmt 1
 289 021c FB89     		ldrh	r3, [r7, #14]	@ movhi
 290 021e 23F44073 		bic	r3, r3, #768
 291 0222 FB81     		strh	r3, [r7, #14]	@ movhi
 290:../src/stm32f30x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 292              		.loc 1 290 0
 293 0224 3B68     		ldr	r3, [r7, #0]
 294 0226 1A89     		ldrh	r2, [r3, #8]
 295 0228 FB89     		ldrh	r3, [r7, #14]	@ movhi
 296 022a 1343     		orrs	r3, r3, r2
 297 022c FB81     		strh	r3, [r7, #14]	@ movhi
 298              	.L15:
 291:../src/stm32f30x_tim.c ****   }
 292:../src/stm32f30x_tim.c **** 
 293:../src/stm32f30x_tim.c ****   TIMx->CR1 = tmpcr1;
 299              		.loc 1 293 0
 300 022e 7B68     		ldr	r3, [r7, #4]
 301 0230 FA89     		ldrh	r2, [r7, #14]	@ movhi
 302 0232 1A80     		strh	r2, [r3, #0]	@ movhi
 294:../src/stm32f30x_tim.c **** 
 295:../src/stm32f30x_tim.c ****   /* Set the Autoreload value */
 296:../src/stm32f30x_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 303              		.loc 1 296 0
 304 0234 3B68     		ldr	r3, [r7, #0]
 305 0236 5A68     		ldr	r2, [r3, #4]
 306 0238 7B68     		ldr	r3, [r7, #4]
 307 023a DA62     		str	r2, [r3, #44]
 297:../src/stm32f30x_tim.c ****  
 298:../src/stm32f30x_tim.c ****   /* Set the Prescaler value */
 299:../src/stm32f30x_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 308              		.loc 1 299 0
 309 023c 3B68     		ldr	r3, [r7, #0]
 310 023e 1A88     		ldrh	r2, [r3, #0]
 311 0240 7B68     		ldr	r3, [r7, #4]
 312 0242 1A85     		strh	r2, [r3, #40]	@ movhi
 300:../src/stm32f30x_tim.c ****     
 301:../src/stm32f30x_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM15) || 
 313              		.loc 1 301 0
 314 0244 7A68     		ldr	r2, [r7, #4]
 315 0246 4FF43053 		mov	r3, #11264
 316 024a C4F20103 		movt	r3, 16385
 317 024e 9A42     		cmp	r2, r3
 318 0250 1BD0     		beq	.L16
 319              		.loc 1 301 0 is_stmt 0 discriminator 1
 320 0252 7A68     		ldr	r2, [r7, #4]
 321 0254 4FF45053 		mov	r3, #13312
 322 0258 C4F20103 		movt	r3, 16385
 323 025c 9A42     		cmp	r2, r3
 324 025e 14D0     		beq	.L16
 325 0260 7A68     		ldr	r2, [r7, #4]
 326 0262 4FF48043 		mov	r3, #16384
 327 0266 C4F20103 		movt	r3, 16385
 328 026a 9A42     		cmp	r2, r3
 329 026c 0DD0     		beq	.L16
 330 026e 7A68     		ldr	r2, [r7, #4]
 331 0270 4FF48843 		mov	r3, #17408
 332 0274 C4F20103 		movt	r3, 16385
 333 0278 9A42     		cmp	r2, r3
 334 027a 06D0     		beq	.L16
 302:../src/stm32f30x_tim.c ****       (TIMx == TIM16) || (TIMx == TIM17))  
 335              		.loc 1 302 0 is_stmt 1
 336 027c 7A68     		ldr	r2, [r7, #4]
 337 027e 4FF49043 		mov	r3, #18432
 338 0282 C4F20103 		movt	r3, 16385
 339 0286 9A42     		cmp	r2, r3
 340 0288 04D1     		bne	.L17
 341              	.L16:
 303:../src/stm32f30x_tim.c ****   {
 304:../src/stm32f30x_tim.c ****     /* Set the Repetition Counter value */
 305:../src/stm32f30x_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 342              		.loc 1 305 0
 343 028a 3B68     		ldr	r3, [r7, #0]
 344 028c 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 345 028e 1A46     		mov	r2, r3
 346 0290 7B68     		ldr	r3, [r7, #4]
 347 0292 1A86     		strh	r2, [r3, #48]	@ movhi
 348              	.L17:
 306:../src/stm32f30x_tim.c ****   }
 307:../src/stm32f30x_tim.c **** 
 308:../src/stm32f30x_tim.c ****   /* Generate an update event to reload the Prescaler 
 309:../src/stm32f30x_tim.c ****      and the repetition counter(only for TIM1 and TIM8) value immediatly */
 310:../src/stm32f30x_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;          
 349              		.loc 1 310 0
 350 0294 7B68     		ldr	r3, [r7, #4]
 351 0296 4FF00102 		mov	r2, #1
 352 029a 5A61     		str	r2, [r3, #20]
 311:../src/stm32f30x_tim.c **** }
 353              		.loc 1 311 0
 354 029c 07F11407 		add	r7, r7, #20
 355 02a0 BD46     		mov	sp, r7
 356 02a2 80BC     		pop	{r7}
 357 02a4 7047     		bx	lr
 358              		.cfi_endproc
 359              	.LFE112:
 361 02a6 00BF     		.align	2
 362              		.global	TIM_TimeBaseStructInit
 363              		.thumb
 364              		.thumb_func
 366              	TIM_TimeBaseStructInit:
 367              	.LFB113:
 312:../src/stm32f30x_tim.c **** 
 313:../src/stm32f30x_tim.c **** /**
 314:../src/stm32f30x_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 315:../src/stm32f30x_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 316:../src/stm32f30x_tim.c ****   *         structure which will be initialized.
 317:../src/stm32f30x_tim.c ****   * @retval None
 318:../src/stm32f30x_tim.c ****   */
 319:../src/stm32f30x_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 320:../src/stm32f30x_tim.c **** {
 368              		.loc 1 320 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 8
 371              		@ frame_needed = 1, uses_anonymous_args = 0
 372              		@ link register save eliminated.
 373 02a8 80B4     		push	{r7}
 374              	.LCFI6:
 375              		.cfi_def_cfa_offset 4
 376              		.cfi_offset 7, -4
 377 02aa 83B0     		sub	sp, sp, #12
 378              	.LCFI7:
 379              		.cfi_def_cfa_offset 16
 380 02ac 00AF     		add	r7, sp, #0
 381              	.LCFI8:
 382              		.cfi_def_cfa_register 7
 383 02ae 7860     		str	r0, [r7, #4]
 321:../src/stm32f30x_tim.c ****   /* Set the default configuration */
 322:../src/stm32f30x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFFFFFF;
 384              		.loc 1 322 0
 385 02b0 7B68     		ldr	r3, [r7, #4]
 386 02b2 4FF0FF32 		mov	r2, #-1
 387 02b6 5A60     		str	r2, [r3, #4]
 323:../src/stm32f30x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 388              		.loc 1 323 0
 389 02b8 7B68     		ldr	r3, [r7, #4]
 390 02ba 4FF00002 		mov	r2, #0
 391 02be 1A80     		strh	r2, [r3, #0]	@ movhi
 324:../src/stm32f30x_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 392              		.loc 1 324 0
 393 02c0 7B68     		ldr	r3, [r7, #4]
 394 02c2 4FF00002 		mov	r2, #0
 395 02c6 1A81     		strh	r2, [r3, #8]	@ movhi
 325:../src/stm32f30x_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 396              		.loc 1 325 0
 397 02c8 7B68     		ldr	r3, [r7, #4]
 398 02ca 4FF00002 		mov	r2, #0
 399 02ce 5A80     		strh	r2, [r3, #2]	@ movhi
 326:../src/stm32f30x_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 400              		.loc 1 326 0
 401 02d0 7B68     		ldr	r3, [r7, #4]
 402 02d2 4FF00002 		mov	r2, #0
 403 02d6 9A72     		strb	r2, [r3, #10]
 327:../src/stm32f30x_tim.c **** }
 404              		.loc 1 327 0
 405 02d8 07F10C07 		add	r7, r7, #12
 406 02dc BD46     		mov	sp, r7
 407 02de 80BC     		pop	{r7}
 408 02e0 7047     		bx	lr
 409              		.cfi_endproc
 410              	.LFE113:
 412 02e2 00BF     		.align	2
 413              		.global	TIM_PrescalerConfig
 414              		.thumb
 415              		.thumb_func
 417              	TIM_PrescalerConfig:
 418              	.LFB114:
 328:../src/stm32f30x_tim.c **** 
 329:../src/stm32f30x_tim.c **** /**
 330:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx Prescaler.
 331:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 8, 15, 16 or 17 to select the TIM peripheral.
 332:../src/stm32f30x_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
 333:../src/stm32f30x_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
 334:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
 335:../src/stm32f30x_tim.c ****   *            @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
 336:../src/stm32f30x_tim.c ****   *            @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediatly.
 337:../src/stm32f30x_tim.c ****   * @retval None
 338:../src/stm32f30x_tim.c ****   */
 339:../src/stm32f30x_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
 340:../src/stm32f30x_tim.c **** {
 419              		.loc 1 340 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 424 02e4 80B4     		push	{r7}
 425              	.LCFI9:
 426              		.cfi_def_cfa_offset 4
 427              		.cfi_offset 7, -4
 428 02e6 83B0     		sub	sp, sp, #12
 429              	.LCFI10:
 430              		.cfi_def_cfa_offset 16
 431 02e8 00AF     		add	r7, sp, #0
 432              	.LCFI11:
 433              		.cfi_def_cfa_register 7
 434 02ea 7860     		str	r0, [r7, #4]
 435 02ec 1346     		mov	r3, r2
 436 02ee 0A46     		mov	r2, r1	@ movhi
 437 02f0 7A80     		strh	r2, [r7, #2]	@ movhi
 438 02f2 3B80     		strh	r3, [r7, #0]	@ movhi
 341:../src/stm32f30x_tim.c ****   /* Check the parameters */
 342:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 343:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
 344:../src/stm32f30x_tim.c ****   /* Set the Prescaler value */
 345:../src/stm32f30x_tim.c ****   TIMx->PSC = Prescaler;
 439              		.loc 1 345 0
 440 02f4 7B68     		ldr	r3, [r7, #4]
 441 02f6 7A88     		ldrh	r2, [r7, #2]	@ movhi
 442 02f8 1A85     		strh	r2, [r3, #40]	@ movhi
 346:../src/stm32f30x_tim.c ****   /* Set or reset the UG Bit */
 347:../src/stm32f30x_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
 443              		.loc 1 347 0
 444 02fa 3A88     		ldrh	r2, [r7, #0]
 445 02fc 7B68     		ldr	r3, [r7, #4]
 446 02fe 5A61     		str	r2, [r3, #20]
 348:../src/stm32f30x_tim.c **** }
 447              		.loc 1 348 0
 448 0300 07F10C07 		add	r7, r7, #12
 449 0304 BD46     		mov	sp, r7
 450 0306 80BC     		pop	{r7}
 451 0308 7047     		bx	lr
 452              		.cfi_endproc
 453              	.LFE114:
 455 030a 00BF     		.align	2
 456              		.global	TIM_CounterModeConfig
 457              		.thumb
 458              		.thumb_func
 460              	TIM_CounterModeConfig:
 461              	.LFB115:
 349:../src/stm32f30x_tim.c **** 
 350:../src/stm32f30x_tim.c **** /**
 351:../src/stm32f30x_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
 352:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4 or 8 to select the TIM peripheral.
 353:../src/stm32f30x_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
 354:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
 355:../src/stm32f30x_tim.c ****   *            @arg TIM_CounterMode_Up: TIM Up Counting Mode
 356:../src/stm32f30x_tim.c ****   *            @arg TIM_CounterMode_Down: TIM Down Counting Mode
 357:../src/stm32f30x_tim.c ****   *            @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
 358:../src/stm32f30x_tim.c ****   *            @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
 359:../src/stm32f30x_tim.c ****   *            @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
 360:../src/stm32f30x_tim.c ****   * @retval None
 361:../src/stm32f30x_tim.c ****   */
 362:../src/stm32f30x_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
 363:../src/stm32f30x_tim.c **** {
 462              		.loc 1 363 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 16
 465              		@ frame_needed = 1, uses_anonymous_args = 0
 466              		@ link register save eliminated.
 467 030c 80B4     		push	{r7}
 468              	.LCFI12:
 469              		.cfi_def_cfa_offset 4
 470              		.cfi_offset 7, -4
 471 030e 85B0     		sub	sp, sp, #20
 472              	.LCFI13:
 473              		.cfi_def_cfa_offset 24
 474 0310 00AF     		add	r7, sp, #0
 475              	.LCFI14:
 476              		.cfi_def_cfa_register 7
 477 0312 7860     		str	r0, [r7, #4]
 478 0314 0B46     		mov	r3, r1
 479 0316 7B80     		strh	r3, [r7, #2]	@ movhi
 364:../src/stm32f30x_tim.c ****   uint16_t tmpcr1 = 0;
 480              		.loc 1 364 0
 481 0318 4FF00003 		mov	r3, #0
 482 031c FB81     		strh	r3, [r7, #14]	@ movhi
 365:../src/stm32f30x_tim.c **** 
 366:../src/stm32f30x_tim.c ****   /* Check the parameters */
 367:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 368:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
 369:../src/stm32f30x_tim.c **** 
 370:../src/stm32f30x_tim.c ****   tmpcr1 = TIMx->CR1;
 483              		.loc 1 370 0
 484 031e 7B68     		ldr	r3, [r7, #4]
 485 0320 1B88     		ldrh	r3, [r3, #0]	@ movhi
 486 0322 FB81     		strh	r3, [r7, #14]	@ movhi
 371:../src/stm32f30x_tim.c **** 
 372:../src/stm32f30x_tim.c ****   /* Reset the CMS and DIR Bits */
 373:../src/stm32f30x_tim.c ****   tmpcr1 &= (uint16_t)~(TIM_CR1_DIR | TIM_CR1_CMS);
 487              		.loc 1 373 0
 488 0324 FB89     		ldrh	r3, [r7, #14]	@ movhi
 489 0326 23F07003 		bic	r3, r3, #112
 490 032a FB81     		strh	r3, [r7, #14]	@ movhi
 374:../src/stm32f30x_tim.c **** 
 375:../src/stm32f30x_tim.c ****   /* Set the Counter Mode */
 376:../src/stm32f30x_tim.c ****   tmpcr1 |= TIM_CounterMode;
 491              		.loc 1 376 0
 492 032c FA89     		ldrh	r2, [r7, #14]	@ movhi
 493 032e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 494 0330 1343     		orrs	r3, r3, r2
 495 0332 FB81     		strh	r3, [r7, #14]	@ movhi
 377:../src/stm32f30x_tim.c **** 
 378:../src/stm32f30x_tim.c ****   /* Write to TIMx CR1 register */
 379:../src/stm32f30x_tim.c ****   TIMx->CR1 = tmpcr1;
 496              		.loc 1 379 0
 497 0334 7B68     		ldr	r3, [r7, #4]
 498 0336 FA89     		ldrh	r2, [r7, #14]	@ movhi
 499 0338 1A80     		strh	r2, [r3, #0]	@ movhi
 380:../src/stm32f30x_tim.c **** }
 500              		.loc 1 380 0
 501 033a 07F11407 		add	r7, r7, #20
 502 033e BD46     		mov	sp, r7
 503 0340 80BC     		pop	{r7}
 504 0342 7047     		bx	lr
 505              		.cfi_endproc
 506              	.LFE115:
 508              		.align	2
 509              		.global	TIM_SetCounter
 510              		.thumb
 511              		.thumb_func
 513              	TIM_SetCounter:
 514              	.LFB116:
 381:../src/stm32f30x_tim.c **** 
 382:../src/stm32f30x_tim.c **** /**
 383:../src/stm32f30x_tim.c ****   * @brief  Sets the TIMx Counter Register value
 384:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 6 ,7 ,8, 15, 16 or 17 to select the TIM peripheral.
 385:../src/stm32f30x_tim.c ****   * @param  Counter: specifies the Counter register new value.
 386:../src/stm32f30x_tim.c ****   * @retval None
 387:../src/stm32f30x_tim.c ****   */
 388:../src/stm32f30x_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint32_t Counter)
 389:../src/stm32f30x_tim.c **** {
 515              		.loc 1 389 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 8
 518              		@ frame_needed = 1, uses_anonymous_args = 0
 519              		@ link register save eliminated.
 520 0344 80B4     		push	{r7}
 521              	.LCFI15:
 522              		.cfi_def_cfa_offset 4
 523              		.cfi_offset 7, -4
 524 0346 83B0     		sub	sp, sp, #12
 525              	.LCFI16:
 526              		.cfi_def_cfa_offset 16
 527 0348 00AF     		add	r7, sp, #0
 528              	.LCFI17:
 529              		.cfi_def_cfa_register 7
 530 034a 7860     		str	r0, [r7, #4]
 531 034c 3960     		str	r1, [r7, #0]
 390:../src/stm32f30x_tim.c ****   /* Check the parameters */
 391:../src/stm32f30x_tim.c ****    assert_param(IS_TIM_ALL_PERIPH(TIMx));
 392:../src/stm32f30x_tim.c **** 
 393:../src/stm32f30x_tim.c ****   /* Set the Counter Register value */
 394:../src/stm32f30x_tim.c ****   TIMx->CNT = Counter;
 532              		.loc 1 394 0
 533 034e 7B68     		ldr	r3, [r7, #4]
 534 0350 3A68     		ldr	r2, [r7, #0]
 535 0352 5A62     		str	r2, [r3, #36]
 395:../src/stm32f30x_tim.c **** }
 536              		.loc 1 395 0
 537 0354 07F10C07 		add	r7, r7, #12
 538 0358 BD46     		mov	sp, r7
 539 035a 80BC     		pop	{r7}
 540 035c 7047     		bx	lr
 541              		.cfi_endproc
 542              	.LFE116:
 544 035e 00BF     		.align	2
 545              		.global	TIM_SetAutoreload
 546              		.thumb
 547              		.thumb_func
 549              	TIM_SetAutoreload:
 550              	.LFB117:
 396:../src/stm32f30x_tim.c **** 
 397:../src/stm32f30x_tim.c **** /**
 398:../src/stm32f30x_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
 399:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 6 ,7 ,8, 15, 16 or 17 to select the TIM peripheral.
 400:../src/stm32f30x_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
 401:../src/stm32f30x_tim.c ****   * @retval None
 402:../src/stm32f30x_tim.c ****   */
 403:../src/stm32f30x_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint32_t Autoreload)
 404:../src/stm32f30x_tim.c **** {
 551              		.loc 1 404 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 8
 554              		@ frame_needed = 1, uses_anonymous_args = 0
 555              		@ link register save eliminated.
 556 0360 80B4     		push	{r7}
 557              	.LCFI18:
 558              		.cfi_def_cfa_offset 4
 559              		.cfi_offset 7, -4
 560 0362 83B0     		sub	sp, sp, #12
 561              	.LCFI19:
 562              		.cfi_def_cfa_offset 16
 563 0364 00AF     		add	r7, sp, #0
 564              	.LCFI20:
 565              		.cfi_def_cfa_register 7
 566 0366 7860     		str	r0, [r7, #4]
 567 0368 3960     		str	r1, [r7, #0]
 405:../src/stm32f30x_tim.c ****   /* Check the parameters */
 406:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 407:../src/stm32f30x_tim.c ****   
 408:../src/stm32f30x_tim.c ****   /* Set the Autoreload Register value */
 409:../src/stm32f30x_tim.c ****   TIMx->ARR = Autoreload;
 568              		.loc 1 409 0
 569 036a 7B68     		ldr	r3, [r7, #4]
 570 036c 3A68     		ldr	r2, [r7, #0]
 571 036e DA62     		str	r2, [r3, #44]
 410:../src/stm32f30x_tim.c **** }
 572              		.loc 1 410 0
 573 0370 07F10C07 		add	r7, r7, #12
 574 0374 BD46     		mov	sp, r7
 575 0376 80BC     		pop	{r7}
 576 0378 7047     		bx	lr
 577              		.cfi_endproc
 578              	.LFE117:
 580 037a 00BF     		.align	2
 581              		.global	TIM_GetCounter
 582              		.thumb
 583              		.thumb_func
 585              	TIM_GetCounter:
 586              	.LFB118:
 411:../src/stm32f30x_tim.c **** 
 412:../src/stm32f30x_tim.c **** /**
 413:../src/stm32f30x_tim.c ****   * @brief  Gets the TIMx Counter value.
 414:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 6 ,7 ,8, 15, 16 or 17 to select the TIM peripheral.
 415:../src/stm32f30x_tim.c ****   * @retval Counter Register value
 416:../src/stm32f30x_tim.c ****   */
 417:../src/stm32f30x_tim.c **** uint32_t TIM_GetCounter(TIM_TypeDef* TIMx)
 418:../src/stm32f30x_tim.c **** {
 587              		.loc 1 418 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 8
 590              		@ frame_needed = 1, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 592 037c 80B4     		push	{r7}
 593              	.LCFI21:
 594              		.cfi_def_cfa_offset 4
 595              		.cfi_offset 7, -4
 596 037e 83B0     		sub	sp, sp, #12
 597              	.LCFI22:
 598              		.cfi_def_cfa_offset 16
 599 0380 00AF     		add	r7, sp, #0
 600              	.LCFI23:
 601              		.cfi_def_cfa_register 7
 602 0382 7860     		str	r0, [r7, #4]
 419:../src/stm32f30x_tim.c ****   /* Check the parameters */
 420:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 421:../src/stm32f30x_tim.c **** 
 422:../src/stm32f30x_tim.c ****   /* Get the Counter Register value */
 423:../src/stm32f30x_tim.c ****   return TIMx->CNT;
 603              		.loc 1 423 0
 604 0384 7B68     		ldr	r3, [r7, #4]
 605 0386 5B6A     		ldr	r3, [r3, #36]
 424:../src/stm32f30x_tim.c **** }
 606              		.loc 1 424 0
 607 0388 1846     		mov	r0, r3
 608 038a 07F10C07 		add	r7, r7, #12
 609 038e BD46     		mov	sp, r7
 610 0390 80BC     		pop	{r7}
 611 0392 7047     		bx	lr
 612              		.cfi_endproc
 613              	.LFE118:
 615              		.align	2
 616              		.global	TIM_GetPrescaler
 617              		.thumb
 618              		.thumb_func
 620              	TIM_GetPrescaler:
 621              	.LFB119:
 425:../src/stm32f30x_tim.c **** 
 426:../src/stm32f30x_tim.c **** /**
 427:../src/stm32f30x_tim.c ****   * @brief  Gets the TIMx Prescaler value.
 428:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 6 ,7 ,8, 15, 16 or 17 to select the TIM peripheral.
 429:../src/stm32f30x_tim.c ****   * @retval Prescaler Register value.
 430:../src/stm32f30x_tim.c ****   */
 431:../src/stm32f30x_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
 432:../src/stm32f30x_tim.c **** {
 622              		.loc 1 432 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 8
 625              		@ frame_needed = 1, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 627 0394 80B4     		push	{r7}
 628              	.LCFI24:
 629              		.cfi_def_cfa_offset 4
 630              		.cfi_offset 7, -4
 631 0396 83B0     		sub	sp, sp, #12
 632              	.LCFI25:
 633              		.cfi_def_cfa_offset 16
 634 0398 00AF     		add	r7, sp, #0
 635              	.LCFI26:
 636              		.cfi_def_cfa_register 7
 637 039a 7860     		str	r0, [r7, #4]
 433:../src/stm32f30x_tim.c ****   /* Check the parameters */
 434:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 435:../src/stm32f30x_tim.c **** 
 436:../src/stm32f30x_tim.c ****   /* Get the Prescaler Register value */
 437:../src/stm32f30x_tim.c ****   return TIMx->PSC;
 638              		.loc 1 437 0
 639 039c 7B68     		ldr	r3, [r7, #4]
 640 039e 1B8D     		ldrh	r3, [r3, #40]	@ movhi
 641 03a0 9BB2     		uxth	r3, r3
 438:../src/stm32f30x_tim.c **** }
 642              		.loc 1 438 0
 643 03a2 1846     		mov	r0, r3
 644 03a4 07F10C07 		add	r7, r7, #12
 645 03a8 BD46     		mov	sp, r7
 646 03aa 80BC     		pop	{r7}
 647 03ac 7047     		bx	lr
 648              		.cfi_endproc
 649              	.LFE119:
 651 03ae 00BF     		.align	2
 652              		.global	TIM_UpdateDisableConfig
 653              		.thumb
 654              		.thumb_func
 656              	TIM_UpdateDisableConfig:
 657              	.LFB120:
 439:../src/stm32f30x_tim.c **** 
 440:../src/stm32f30x_tim.c **** /**
 441:../src/stm32f30x_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
 442:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 6 ,7 ,8, 15, 16 or 17 to select the TIM peripheral.
 443:../src/stm32f30x_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
 444:../src/stm32f30x_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 445:../src/stm32f30x_tim.c ****   * @retval None
 446:../src/stm32f30x_tim.c ****   */
 447:../src/stm32f30x_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 448:../src/stm32f30x_tim.c **** {
 658              		.loc 1 448 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 8
 661              		@ frame_needed = 1, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 663 03b0 80B4     		push	{r7}
 664              	.LCFI27:
 665              		.cfi_def_cfa_offset 4
 666              		.cfi_offset 7, -4
 667 03b2 83B0     		sub	sp, sp, #12
 668              	.LCFI28:
 669              		.cfi_def_cfa_offset 16
 670 03b4 00AF     		add	r7, sp, #0
 671              	.LCFI29:
 672              		.cfi_def_cfa_register 7
 673 03b6 7860     		str	r0, [r7, #4]
 674 03b8 0B46     		mov	r3, r1
 675 03ba FB70     		strb	r3, [r7, #3]
 449:../src/stm32f30x_tim.c ****   /* Check the parameters */
 450:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 451:../src/stm32f30x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 452:../src/stm32f30x_tim.c **** 
 453:../src/stm32f30x_tim.c ****   if (NewState != DISABLE)
 676              		.loc 1 453 0
 677 03bc FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 678 03be 002B     		cmp	r3, #0
 679 03c0 08D0     		beq	.L28
 454:../src/stm32f30x_tim.c ****   {
 455:../src/stm32f30x_tim.c ****     /* Set the Update Disable Bit */
 456:../src/stm32f30x_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 680              		.loc 1 456 0
 681 03c2 7B68     		ldr	r3, [r7, #4]
 682 03c4 1B88     		ldrh	r3, [r3, #0]	@ movhi
 683 03c6 9BB2     		uxth	r3, r3
 684 03c8 43F00203 		orr	r3, r3, #2
 685 03cc 9AB2     		uxth	r2, r3
 686 03ce 7B68     		ldr	r3, [r7, #4]
 687 03d0 1A80     		strh	r2, [r3, #0]	@ movhi
 688 03d2 07E0     		b	.L27
 689              	.L28:
 457:../src/stm32f30x_tim.c ****   }
 458:../src/stm32f30x_tim.c ****   else
 459:../src/stm32f30x_tim.c ****   {
 460:../src/stm32f30x_tim.c ****     /* Reset the Update Disable Bit */
 461:../src/stm32f30x_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_UDIS;
 690              		.loc 1 461 0
 691 03d4 7B68     		ldr	r3, [r7, #4]
 692 03d6 1B88     		ldrh	r3, [r3, #0]	@ movhi
 693 03d8 9BB2     		uxth	r3, r3
 694 03da 23F00203 		bic	r3, r3, #2
 695 03de 9AB2     		uxth	r2, r3
 696 03e0 7B68     		ldr	r3, [r7, #4]
 697 03e2 1A80     		strh	r2, [r3, #0]	@ movhi
 698              	.L27:
 462:../src/stm32f30x_tim.c ****   }
 463:../src/stm32f30x_tim.c **** }
 699              		.loc 1 463 0
 700 03e4 07F10C07 		add	r7, r7, #12
 701 03e8 BD46     		mov	sp, r7
 702 03ea 80BC     		pop	{r7}
 703 03ec 7047     		bx	lr
 704              		.cfi_endproc
 705              	.LFE120:
 707 03ee 00BF     		.align	2
 708              		.global	TIM_UpdateRequestConfig
 709              		.thumb
 710              		.thumb_func
 712              	TIM_UpdateRequestConfig:
 713              	.LFB121:
 464:../src/stm32f30x_tim.c **** 
 465:../src/stm32f30x_tim.c **** /**
 466:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
 467:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 6 ,7 ,8, 15, 16 or 17 to select the TIM peripheral.
 468:../src/stm32f30x_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
 469:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
 470:../src/stm32f30x_tim.c ****   *            @arg TIM_UpdateSource_Regular: Source of update is the counter
 471:../src/stm32f30x_tim.c ****   *                 overflow/underflow or the setting of UG bit, or an update
 472:../src/stm32f30x_tim.c ****   *                 generation through the slave mode controller.
 473:../src/stm32f30x_tim.c ****   *            @arg TIM_UpdateSource_Global: Source of update is counter overflow/underflow.
 474:../src/stm32f30x_tim.c ****   * @retval None
 475:../src/stm32f30x_tim.c ****   */
 476:../src/stm32f30x_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
 477:../src/stm32f30x_tim.c **** {
 714              		.loc 1 477 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 8
 717              		@ frame_needed = 1, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 719 03f0 80B4     		push	{r7}
 720              	.LCFI30:
 721              		.cfi_def_cfa_offset 4
 722              		.cfi_offset 7, -4
 723 03f2 83B0     		sub	sp, sp, #12
 724              	.LCFI31:
 725              		.cfi_def_cfa_offset 16
 726 03f4 00AF     		add	r7, sp, #0
 727              	.LCFI32:
 728              		.cfi_def_cfa_register 7
 729 03f6 7860     		str	r0, [r7, #4]
 730 03f8 0B46     		mov	r3, r1
 731 03fa 7B80     		strh	r3, [r7, #2]	@ movhi
 478:../src/stm32f30x_tim.c ****   /* Check the parameters */
 479:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 480:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
 481:../src/stm32f30x_tim.c **** 
 482:../src/stm32f30x_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 732              		.loc 1 482 0
 733 03fc 7B88     		ldrh	r3, [r7, #2]
 734 03fe 002B     		cmp	r3, #0
 735 0400 08D0     		beq	.L31
 483:../src/stm32f30x_tim.c ****   {
 484:../src/stm32f30x_tim.c ****     /* Set the URS Bit */
 485:../src/stm32f30x_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 736              		.loc 1 485 0
 737 0402 7B68     		ldr	r3, [r7, #4]
 738 0404 1B88     		ldrh	r3, [r3, #0]	@ movhi
 739 0406 9BB2     		uxth	r3, r3
 740 0408 43F00403 		orr	r3, r3, #4
 741 040c 9AB2     		uxth	r2, r3
 742 040e 7B68     		ldr	r3, [r7, #4]
 743 0410 1A80     		strh	r2, [r3, #0]	@ movhi
 744 0412 07E0     		b	.L30
 745              	.L31:
 486:../src/stm32f30x_tim.c ****   }
 487:../src/stm32f30x_tim.c ****   else
 488:../src/stm32f30x_tim.c ****   {
 489:../src/stm32f30x_tim.c ****     /* Reset the URS Bit */
 490:../src/stm32f30x_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_URS;
 746              		.loc 1 490 0
 747 0414 7B68     		ldr	r3, [r7, #4]
 748 0416 1B88     		ldrh	r3, [r3, #0]	@ movhi
 749 0418 9BB2     		uxth	r3, r3
 750 041a 23F00403 		bic	r3, r3, #4
 751 041e 9AB2     		uxth	r2, r3
 752 0420 7B68     		ldr	r3, [r7, #4]
 753 0422 1A80     		strh	r2, [r3, #0]	@ movhi
 754              	.L30:
 491:../src/stm32f30x_tim.c ****   }
 492:../src/stm32f30x_tim.c **** }
 755              		.loc 1 492 0
 756 0424 07F10C07 		add	r7, r7, #12
 757 0428 BD46     		mov	sp, r7
 758 042a 80BC     		pop	{r7}
 759 042c 7047     		bx	lr
 760              		.cfi_endproc
 761              	.LFE121:
 763 042e 00BF     		.align	2
 764              		.global	TIM_UIFRemap
 765              		.thumb
 766              		.thumb_func
 768              	TIM_UIFRemap:
 769              	.LFB122:
 493:../src/stm32f30x_tim.c **** 
 494:../src/stm32f30x_tim.c **** /**
 495:../src/stm32f30x_tim.c ****   * @brief  Sets or resets the update interrupt flag (UIF)status bit Remapping.
 496:../src/stm32f30x_tim.c ****   *         when sets, reading TIMx_CNT register returns UIF bit instead of CNT[31]  
 497:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 6 ,7 ,8, 15, 16 or 17 to select the TIM peripheral.
 498:../src/stm32f30x_tim.c ****   * @param  NewState: new state of the UIFREMAP bit.
 499:../src/stm32f30x_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 500:../src/stm32f30x_tim.c ****   * @retval None
 501:../src/stm32f30x_tim.c ****   */
 502:../src/stm32f30x_tim.c **** void TIM_UIFRemap(TIM_TypeDef* TIMx, FunctionalState NewState)
 503:../src/stm32f30x_tim.c **** {
 770              		.loc 1 503 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 8
 773              		@ frame_needed = 1, uses_anonymous_args = 0
 774              		@ link register save eliminated.
 775 0430 80B4     		push	{r7}
 776              	.LCFI33:
 777              		.cfi_def_cfa_offset 4
 778              		.cfi_offset 7, -4
 779 0432 83B0     		sub	sp, sp, #12
 780              	.LCFI34:
 781              		.cfi_def_cfa_offset 16
 782 0434 00AF     		add	r7, sp, #0
 783              	.LCFI35:
 784              		.cfi_def_cfa_register 7
 785 0436 7860     		str	r0, [r7, #4]
 786 0438 0B46     		mov	r3, r1
 787 043a FB70     		strb	r3, [r7, #3]
 504:../src/stm32f30x_tim.c ****   /* Check the parameters */
 505:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 506:../src/stm32f30x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 507:../src/stm32f30x_tim.c ****   
 508:../src/stm32f30x_tim.c ****   if (NewState != DISABLE)
 788              		.loc 1 508 0
 789 043c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 790 043e 002B     		cmp	r3, #0
 791 0440 08D0     		beq	.L34
 509:../src/stm32f30x_tim.c ****   {
 510:../src/stm32f30x_tim.c ****     /* Enable the TIM Counter */
 511:../src/stm32f30x_tim.c ****     TIMx->CR1 |= TIM_CR1_UIFREMAP;
 792              		.loc 1 511 0
 793 0442 7B68     		ldr	r3, [r7, #4]
 794 0444 1B88     		ldrh	r3, [r3, #0]	@ movhi
 795 0446 9BB2     		uxth	r3, r3
 796 0448 43F40063 		orr	r3, r3, #2048
 797 044c 9AB2     		uxth	r2, r3
 798 044e 7B68     		ldr	r3, [r7, #4]
 799 0450 1A80     		strh	r2, [r3, #0]	@ movhi
 800 0452 07E0     		b	.L33
 801              	.L34:
 512:../src/stm32f30x_tim.c ****   }
 513:../src/stm32f30x_tim.c ****   else
 514:../src/stm32f30x_tim.c ****   {
 515:../src/stm32f30x_tim.c ****     /* Disable the TIM Counter */
 516:../src/stm32f30x_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_UIFREMAP;
 802              		.loc 1 516 0
 803 0454 7B68     		ldr	r3, [r7, #4]
 804 0456 1B88     		ldrh	r3, [r3, #0]	@ movhi
 805 0458 9BB2     		uxth	r3, r3
 806 045a 23F40063 		bic	r3, r3, #2048
 807 045e 9AB2     		uxth	r2, r3
 808 0460 7B68     		ldr	r3, [r7, #4]
 809 0462 1A80     		strh	r2, [r3, #0]	@ movhi
 810              	.L33:
 517:../src/stm32f30x_tim.c ****   }  
 518:../src/stm32f30x_tim.c **** }
 811              		.loc 1 518 0
 812 0464 07F10C07 		add	r7, r7, #12
 813 0468 BD46     		mov	sp, r7
 814 046a 80BC     		pop	{r7}
 815 046c 7047     		bx	lr
 816              		.cfi_endproc
 817              	.LFE122:
 819 046e 00BF     		.align	2
 820              		.global	TIM_ARRPreloadConfig
 821              		.thumb
 822              		.thumb_func
 824              	TIM_ARRPreloadConfig:
 825              	.LFB123:
 519:../src/stm32f30x_tim.c **** 
 520:../src/stm32f30x_tim.c **** /**
 521:../src/stm32f30x_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
 522:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 6 ,7 ,8, 15, 16 or 17 to select the TIM peripheral.
 523:../src/stm32f30x_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
 524:../src/stm32f30x_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 525:../src/stm32f30x_tim.c ****   * @retval None
 526:../src/stm32f30x_tim.c ****   */
 527:../src/stm32f30x_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 528:../src/stm32f30x_tim.c **** {
 826              		.loc 1 528 0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 8
 829              		@ frame_needed = 1, uses_anonymous_args = 0
 830              		@ link register save eliminated.
 831 0470 80B4     		push	{r7}
 832              	.LCFI36:
 833              		.cfi_def_cfa_offset 4
 834              		.cfi_offset 7, -4
 835 0472 83B0     		sub	sp, sp, #12
 836              	.LCFI37:
 837              		.cfi_def_cfa_offset 16
 838 0474 00AF     		add	r7, sp, #0
 839              	.LCFI38:
 840              		.cfi_def_cfa_register 7
 841 0476 7860     		str	r0, [r7, #4]
 842 0478 0B46     		mov	r3, r1
 843 047a FB70     		strb	r3, [r7, #3]
 529:../src/stm32f30x_tim.c ****   /* Check the parameters */
 530:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 531:../src/stm32f30x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 532:../src/stm32f30x_tim.c **** 
 533:../src/stm32f30x_tim.c ****   if (NewState != DISABLE)
 844              		.loc 1 533 0
 845 047c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 846 047e 002B     		cmp	r3, #0
 847 0480 08D0     		beq	.L37
 534:../src/stm32f30x_tim.c ****   {
 535:../src/stm32f30x_tim.c ****     /* Set the ARR Preload Bit */
 536:../src/stm32f30x_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 848              		.loc 1 536 0
 849 0482 7B68     		ldr	r3, [r7, #4]
 850 0484 1B88     		ldrh	r3, [r3, #0]	@ movhi
 851 0486 9BB2     		uxth	r3, r3
 852 0488 43F08003 		orr	r3, r3, #128
 853 048c 9AB2     		uxth	r2, r3
 854 048e 7B68     		ldr	r3, [r7, #4]
 855 0490 1A80     		strh	r2, [r3, #0]	@ movhi
 856 0492 07E0     		b	.L36
 857              	.L37:
 537:../src/stm32f30x_tim.c ****   }
 538:../src/stm32f30x_tim.c ****   else
 539:../src/stm32f30x_tim.c ****   {
 540:../src/stm32f30x_tim.c ****     /* Reset the ARR Preload Bit */
 541:../src/stm32f30x_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_ARPE;
 858              		.loc 1 541 0
 859 0494 7B68     		ldr	r3, [r7, #4]
 860 0496 1B88     		ldrh	r3, [r3, #0]	@ movhi
 861 0498 9BB2     		uxth	r3, r3
 862 049a 23F08003 		bic	r3, r3, #128
 863 049e 9AB2     		uxth	r2, r3
 864 04a0 7B68     		ldr	r3, [r7, #4]
 865 04a2 1A80     		strh	r2, [r3, #0]	@ movhi
 866              	.L36:
 542:../src/stm32f30x_tim.c ****   }
 543:../src/stm32f30x_tim.c **** }
 867              		.loc 1 543 0
 868 04a4 07F10C07 		add	r7, r7, #12
 869 04a8 BD46     		mov	sp, r7
 870 04aa 80BC     		pop	{r7}
 871 04ac 7047     		bx	lr
 872              		.cfi_endproc
 873              	.LFE123:
 875 04ae 00BF     		.align	2
 876              		.global	TIM_SelectOnePulseMode
 877              		.thumb
 878              		.thumb_func
 880              	TIM_SelectOnePulseMode:
 881              	.LFB124:
 544:../src/stm32f30x_tim.c **** 
 545:../src/stm32f30x_tim.c **** /**
 546:../src/stm32f30x_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
 547:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 6 ,7 ,8, 15, 16 or 17 to select the TIM peripheral.
 548:../src/stm32f30x_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
 549:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
 550:../src/stm32f30x_tim.c ****   *            @arg TIM_OPMode_Single
 551:../src/stm32f30x_tim.c ****   *            @arg TIM_OPMode_Repetitive
 552:../src/stm32f30x_tim.c ****   * @retval None
 553:../src/stm32f30x_tim.c ****   */
 554:../src/stm32f30x_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
 555:../src/stm32f30x_tim.c **** {
 882              		.loc 1 555 0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 8
 885              		@ frame_needed = 1, uses_anonymous_args = 0
 886              		@ link register save eliminated.
 887 04b0 80B4     		push	{r7}
 888              	.LCFI39:
 889              		.cfi_def_cfa_offset 4
 890              		.cfi_offset 7, -4
 891 04b2 83B0     		sub	sp, sp, #12
 892              	.LCFI40:
 893              		.cfi_def_cfa_offset 16
 894 04b4 00AF     		add	r7, sp, #0
 895              	.LCFI41:
 896              		.cfi_def_cfa_register 7
 897 04b6 7860     		str	r0, [r7, #4]
 898 04b8 0B46     		mov	r3, r1
 899 04ba 7B80     		strh	r3, [r7, #2]	@ movhi
 556:../src/stm32f30x_tim.c ****   /* Check the parameters */
 557:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 558:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
 559:../src/stm32f30x_tim.c **** 
 560:../src/stm32f30x_tim.c ****   /* Reset the OPM Bit */
 561:../src/stm32f30x_tim.c ****   TIMx->CR1 &= (uint16_t)~TIM_CR1_OPM;
 900              		.loc 1 561 0
 901 04bc 7B68     		ldr	r3, [r7, #4]
 902 04be 1B88     		ldrh	r3, [r3, #0]	@ movhi
 903 04c0 9BB2     		uxth	r3, r3
 904 04c2 23F00803 		bic	r3, r3, #8
 905 04c6 9AB2     		uxth	r2, r3
 906 04c8 7B68     		ldr	r3, [r7, #4]
 907 04ca 1A80     		strh	r2, [r3, #0]	@ movhi
 562:../src/stm32f30x_tim.c **** 
 563:../src/stm32f30x_tim.c ****   /* Configure the OPM Mode */
 564:../src/stm32f30x_tim.c ****   TIMx->CR1 |= TIM_OPMode;
 908              		.loc 1 564 0
 909 04cc 7B68     		ldr	r3, [r7, #4]
 910 04ce 1B88     		ldrh	r3, [r3, #0]	@ movhi
 911 04d0 9AB2     		uxth	r2, r3
 912 04d2 7B88     		ldrh	r3, [r7, #2]	@ movhi
 913 04d4 1343     		orrs	r3, r3, r2
 914 04d6 9AB2     		uxth	r2, r3
 915 04d8 7B68     		ldr	r3, [r7, #4]
 916 04da 1A80     		strh	r2, [r3, #0]	@ movhi
 565:../src/stm32f30x_tim.c **** }
 917              		.loc 1 565 0
 918 04dc 07F10C07 		add	r7, r7, #12
 919 04e0 BD46     		mov	sp, r7
 920 04e2 80BC     		pop	{r7}
 921 04e4 7047     		bx	lr
 922              		.cfi_endproc
 923              	.LFE124:
 925 04e6 00BF     		.align	2
 926              		.global	TIM_SetClockDivision
 927              		.thumb
 928              		.thumb_func
 930              	TIM_SetClockDivision:
 931              	.LFB125:
 566:../src/stm32f30x_tim.c **** 
 567:../src/stm32f30x_tim.c **** /**
 568:../src/stm32f30x_tim.c ****   * @brief  Sets the TIMx Clock Division value.
 569:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8, 15, 16 or 17, to select the TIM peripheral.
 570:../src/stm32f30x_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
 571:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following value:
 572:../src/stm32f30x_tim.c ****   *            @arg TIM_CKD_DIV1: TDTS = Tck_tim
 573:../src/stm32f30x_tim.c ****   *            @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
 574:../src/stm32f30x_tim.c ****   *            @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
 575:../src/stm32f30x_tim.c ****   * @retval None
 576:../src/stm32f30x_tim.c ****   */
 577:../src/stm32f30x_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
 578:../src/stm32f30x_tim.c **** {
 932              		.loc 1 578 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 8
 935              		@ frame_needed = 1, uses_anonymous_args = 0
 936              		@ link register save eliminated.
 937 04e8 80B4     		push	{r7}
 938              	.LCFI42:
 939              		.cfi_def_cfa_offset 4
 940              		.cfi_offset 7, -4
 941 04ea 83B0     		sub	sp, sp, #12
 942              	.LCFI43:
 943              		.cfi_def_cfa_offset 16
 944 04ec 00AF     		add	r7, sp, #0
 945              	.LCFI44:
 946              		.cfi_def_cfa_register 7
 947 04ee 7860     		str	r0, [r7, #4]
 948 04f0 0B46     		mov	r3, r1
 949 04f2 7B80     		strh	r3, [r7, #2]	@ movhi
 579:../src/stm32f30x_tim.c ****   /* Check the parameters */
 580:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
 581:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
 582:../src/stm32f30x_tim.c **** 
 583:../src/stm32f30x_tim.c ****   /* Reset the CKD Bits */
 584:../src/stm32f30x_tim.c ****   TIMx->CR1 &= (uint16_t)(~TIM_CR1_CKD);
 950              		.loc 1 584 0
 951 04f4 7B68     		ldr	r3, [r7, #4]
 952 04f6 1B88     		ldrh	r3, [r3, #0]	@ movhi
 953 04f8 9BB2     		uxth	r3, r3
 954 04fa 23F44073 		bic	r3, r3, #768
 955 04fe 9AB2     		uxth	r2, r3
 956 0500 7B68     		ldr	r3, [r7, #4]
 957 0502 1A80     		strh	r2, [r3, #0]	@ movhi
 585:../src/stm32f30x_tim.c **** 
 586:../src/stm32f30x_tim.c ****   /* Set the CKD value */
 587:../src/stm32f30x_tim.c ****   TIMx->CR1 |= TIM_CKD;
 958              		.loc 1 587 0
 959 0504 7B68     		ldr	r3, [r7, #4]
 960 0506 1B88     		ldrh	r3, [r3, #0]	@ movhi
 961 0508 9AB2     		uxth	r2, r3
 962 050a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 963 050c 1343     		orrs	r3, r3, r2
 964 050e 9AB2     		uxth	r2, r3
 965 0510 7B68     		ldr	r3, [r7, #4]
 966 0512 1A80     		strh	r2, [r3, #0]	@ movhi
 588:../src/stm32f30x_tim.c **** }
 967              		.loc 1 588 0
 968 0514 07F10C07 		add	r7, r7, #12
 969 0518 BD46     		mov	sp, r7
 970 051a 80BC     		pop	{r7}
 971 051c 7047     		bx	lr
 972              		.cfi_endproc
 973              	.LFE125:
 975 051e 00BF     		.align	2
 976              		.global	TIM_Cmd
 977              		.thumb
 978              		.thumb_func
 980              	TIM_Cmd:
 981              	.LFB126:
 589:../src/stm32f30x_tim.c **** 
 590:../src/stm32f30x_tim.c **** /**
 591:../src/stm32f30x_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 592:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 6, 7, 8, 15, 16 or 17 to select 
 593:../src/stm32f30x_tim.c ****   *        the TIMx peripheral.
 594:../src/stm32f30x_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 595:../src/stm32f30x_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 596:../src/stm32f30x_tim.c ****   * @retval None
 597:../src/stm32f30x_tim.c ****   */
 598:../src/stm32f30x_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 599:../src/stm32f30x_tim.c **** {
 982              		.loc 1 599 0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 8
 985              		@ frame_needed = 1, uses_anonymous_args = 0
 986              		@ link register save eliminated.
 987 0520 80B4     		push	{r7}
 988              	.LCFI45:
 989              		.cfi_def_cfa_offset 4
 990              		.cfi_offset 7, -4
 991 0522 83B0     		sub	sp, sp, #12
 992              	.LCFI46:
 993              		.cfi_def_cfa_offset 16
 994 0524 00AF     		add	r7, sp, #0
 995              	.LCFI47:
 996              		.cfi_def_cfa_register 7
 997 0526 7860     		str	r0, [r7, #4]
 998 0528 0B46     		mov	r3, r1
 999 052a FB70     		strb	r3, [r7, #3]
 600:../src/stm32f30x_tim.c ****   /* Check the parameters */
 601:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 602:../src/stm32f30x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 603:../src/stm32f30x_tim.c ****   
 604:../src/stm32f30x_tim.c ****   if (NewState != DISABLE)
 1000              		.loc 1 604 0
 1001 052c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1002 052e 002B     		cmp	r3, #0
 1003 0530 08D0     		beq	.L42
 605:../src/stm32f30x_tim.c ****   {
 606:../src/stm32f30x_tim.c ****     /* Enable the TIM Counter */
 607:../src/stm32f30x_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 1004              		.loc 1 607 0
 1005 0532 7B68     		ldr	r3, [r7, #4]
 1006 0534 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1007 0536 9BB2     		uxth	r3, r3
 1008 0538 43F00103 		orr	r3, r3, #1
 1009 053c 9AB2     		uxth	r2, r3
 1010 053e 7B68     		ldr	r3, [r7, #4]
 1011 0540 1A80     		strh	r2, [r3, #0]	@ movhi
 1012 0542 07E0     		b	.L41
 1013              	.L42:
 608:../src/stm32f30x_tim.c ****   }
 609:../src/stm32f30x_tim.c ****   else
 610:../src/stm32f30x_tim.c ****   {
 611:../src/stm32f30x_tim.c ****     /* Disable the TIM Counter */
 612:../src/stm32f30x_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_CEN;
 1014              		.loc 1 612 0
 1015 0544 7B68     		ldr	r3, [r7, #4]
 1016 0546 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1017 0548 9BB2     		uxth	r3, r3
 1018 054a 23F00103 		bic	r3, r3, #1
 1019 054e 9AB2     		uxth	r2, r3
 1020 0550 7B68     		ldr	r3, [r7, #4]
 1021 0552 1A80     		strh	r2, [r3, #0]	@ movhi
 1022              	.L41:
 613:../src/stm32f30x_tim.c ****   }
 614:../src/stm32f30x_tim.c **** }
 1023              		.loc 1 614 0
 1024 0554 07F10C07 		add	r7, r7, #12
 1025 0558 BD46     		mov	sp, r7
 1026 055a 80BC     		pop	{r7}
 1027 055c 7047     		bx	lr
 1028              		.cfi_endproc
 1029              	.LFE126:
 1031 055e 00BF     		.align	2
 1032              		.global	TIM_OC1Init
 1033              		.thumb
 1034              		.thumb_func
 1036              	TIM_OC1Init:
 1037              	.LFB127:
 615:../src/stm32f30x_tim.c **** /**
 616:../src/stm32f30x_tim.c ****   * @}
 617:../src/stm32f30x_tim.c ****   */
 618:../src/stm32f30x_tim.c **** 
 619:../src/stm32f30x_tim.c **** /** @defgroup TIM_Group2 Output Compare management functions
 620:../src/stm32f30x_tim.c ****  *  @brief    Output Compare management functions 
 621:../src/stm32f30x_tim.c ****  *
 622:../src/stm32f30x_tim.c **** @verbatim   
 623:../src/stm32f30x_tim.c ****  ===============================================================================
 624:../src/stm32f30x_tim.c ****                 ##### Output Compare management functions #####
 625:../src/stm32f30x_tim.c ****  ===============================================================================  
 626:../src/stm32f30x_tim.c ****        
 627:../src/stm32f30x_tim.c ****   *** TIM Driver: how to use it in Output Compare Mode ***
 628:../src/stm32f30x_tim.c ****   ======================================================== 
 629:../src/stm32f30x_tim.c ****   [..] 
 630:../src/stm32f30x_tim.c ****   To use the Timer in Output Compare mode, the following steps are mandatory:
 631:../src/stm32f30x_tim.c ****        
 632:../src/stm32f30x_tim.c ****        (#) Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 633:../src/stm32f30x_tim.c ****        
 634:../src/stm32f30x_tim.c ****        (#) Configure the TIM pins by configuring the corresponding GPIO pins
 635:../src/stm32f30x_tim.c ****        
 636:../src/stm32f30x_tim.c ****        (#) Configure the Time base unit as described in the first part of this driver, 
 637:../src/stm32f30x_tim.c ****            if needed, else the Timer will run with the default configuration:
 638:../src/stm32f30x_tim.c ****            (++) Autoreload value = 0xFFFF
 639:../src/stm32f30x_tim.c ****            (++) Prescaler value = 0x0000
 640:../src/stm32f30x_tim.c ****            (++) Counter mode = Up counting
 641:../src/stm32f30x_tim.c ****            (++) Clock Division = TIM_CKD_DIV1   
 642:../src/stm32f30x_tim.c ****        (#) Fill the TIM_OCInitStruct with the desired parameters including:
 643:../src/stm32f30x_tim.c ****            (++) The TIM Output Compare mode: TIM_OCMode
 644:../src/stm32f30x_tim.c ****            (++) TIM Output State: TIM_OutputState
 645:../src/stm32f30x_tim.c ****            (++) TIM Pulse value: TIM_Pulse
 646:../src/stm32f30x_tim.c ****            (++) TIM Output Compare Polarity : TIM_OCPolarity
 647:../src/stm32f30x_tim.c ****        
 648:../src/stm32f30x_tim.c ****        (#) Call TIM_OCxInit(TIMx, &TIM_OCInitStruct) to configure the desired channel with the 
 649:../src/stm32f30x_tim.c ****            corresponding configuration
 650:../src/stm32f30x_tim.c ****        
 651:../src/stm32f30x_tim.c ****        (#) Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 652:../src/stm32f30x_tim.c ****  [..]      
 653:../src/stm32f30x_tim.c ****        (@) All other functions can be used separately to modify, if needed,
 654:../src/stm32f30x_tim.c ****            a specific feature of the Timer. 
 655:../src/stm32f30x_tim.c ****           
 656:../src/stm32f30x_tim.c ****        (@) In case of PWM mode, this function is mandatory:
 657:../src/stm32f30x_tim.c ****            TIM_OCxPreloadConfig(TIMx, TIM_OCPreload_ENABLE); 
 658:../src/stm32f30x_tim.c ****               
 659:../src/stm32f30x_tim.c ****        (@) If the corresponding interrupt or DMA request are needed, the user should:
 660:../src/stm32f30x_tim.c ****                 (#@) Enable the NVIC (or the DMA) to use the TIM interrupts (or DMA requests). 
 661:../src/stm32f30x_tim.c ****                 (#@) Enable the corresponding interrupt (or DMA request) using the function 
 662:../src/stm32f30x_tim.c ****                      TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx))   
 663:../src/stm32f30x_tim.c **** 
 664:../src/stm32f30x_tim.c **** @endverbatim
 665:../src/stm32f30x_tim.c ****   * @{
 666:../src/stm32f30x_tim.c ****   */
 667:../src/stm32f30x_tim.c **** 
 668:../src/stm32f30x_tim.c **** /**
 669:../src/stm32f30x_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified parameters in
 670:../src/stm32f30x_tim.c ****   *         the TIM_OCInitStruct.
 671:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8, 15, 16 or 17, to select the TIM peripheral.
 672:../src/stm32f30x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 673:../src/stm32f30x_tim.c ****   *         the configuration information for the specified TIM peripheral.
 674:../src/stm32f30x_tim.c ****   * @retval None
 675:../src/stm32f30x_tim.c ****   */
 676:../src/stm32f30x_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 677:../src/stm32f30x_tim.c **** {
 1038              		.loc 1 677 0
 1039              		.cfi_startproc
 1040              		@ args = 0, pretend = 0, frame = 24
 1041              		@ frame_needed = 1, uses_anonymous_args = 0
 1042              		@ link register save eliminated.
 1043 0560 80B4     		push	{r7}
 1044              	.LCFI48:
 1045              		.cfi_def_cfa_offset 4
 1046              		.cfi_offset 7, -4
 1047 0562 87B0     		sub	sp, sp, #28
 1048              	.LCFI49:
 1049              		.cfi_def_cfa_offset 32
 1050 0564 00AF     		add	r7, sp, #0
 1051              	.LCFI50:
 1052              		.cfi_def_cfa_register 7
 1053 0566 7860     		str	r0, [r7, #4]
 1054 0568 3960     		str	r1, [r7, #0]
 678:../src/stm32f30x_tim.c ****   uint32_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1055              		.loc 1 678 0
 1056 056a 4FF00003 		mov	r3, #0
 1057 056e FB60     		str	r3, [r7, #12]
 1058 0570 4FF00003 		mov	r3, #0
 1059 0574 7B61     		str	r3, [r7, #20]
 1060 0576 4FF00003 		mov	r3, #0
 1061 057a 3B61     		str	r3, [r7, #16]
 679:../src/stm32f30x_tim.c ****    
 680:../src/stm32f30x_tim.c ****   /* Check the parameters */
 681:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
 682:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 683:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 684:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 685:../src/stm32f30x_tim.c **** 
 686:../src/stm32f30x_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
 687:../src/stm32f30x_tim.c ****   TIMx->CCER &= (uint32_t)~TIM_CCER_CC1E;
 1062              		.loc 1 687 0
 1063 057c 7B68     		ldr	r3, [r7, #4]
 1064 057e 1B6A     		ldr	r3, [r3, #32]
 1065 0580 23F00102 		bic	r2, r3, #1
 1066 0584 7B68     		ldr	r3, [r7, #4]
 1067 0586 1A62     		str	r2, [r3, #32]
 688:../src/stm32f30x_tim.c ****   
 689:../src/stm32f30x_tim.c ****   /* Get the TIMx CCER register value */
 690:../src/stm32f30x_tim.c ****   tmpccer = TIMx->CCER;
 1068              		.loc 1 690 0
 1069 0588 7B68     		ldr	r3, [r7, #4]
 1070 058a 1B6A     		ldr	r3, [r3, #32]
 1071 058c 7B61     		str	r3, [r7, #20]
 691:../src/stm32f30x_tim.c ****   /* Get the TIMx CR2 register value */
 692:../src/stm32f30x_tim.c ****   tmpcr2 =  TIMx->CR2;
 1072              		.loc 1 692 0
 1073 058e 7B68     		ldr	r3, [r7, #4]
 1074 0590 5B68     		ldr	r3, [r3, #4]
 1075 0592 3B61     		str	r3, [r7, #16]
 693:../src/stm32f30x_tim.c ****   
 694:../src/stm32f30x_tim.c ****   /* Get the TIMx CCMR1 register value */
 695:../src/stm32f30x_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1076              		.loc 1 695 0
 1077 0594 7B68     		ldr	r3, [r7, #4]
 1078 0596 9B69     		ldr	r3, [r3, #24]
 1079 0598 FB60     		str	r3, [r7, #12]
 696:../src/stm32f30x_tim.c ****     
 697:../src/stm32f30x_tim.c ****   /* Reset the Output Compare Mode Bits */
 698:../src/stm32f30x_tim.c ****   tmpccmrx &= (uint32_t)~TIM_CCMR1_OC1M;
 1080              		.loc 1 698 0
 1081 059a FB68     		ldr	r3, [r7, #12]
 1082 059c 23F48033 		bic	r3, r3, #65536
 1083 05a0 23F07003 		bic	r3, r3, #112
 1084 05a4 FB60     		str	r3, [r7, #12]
 699:../src/stm32f30x_tim.c ****   tmpccmrx &= (uint32_t)~TIM_CCMR1_CC1S;
 1085              		.loc 1 699 0
 1086 05a6 FB68     		ldr	r3, [r7, #12]
 1087 05a8 23F00303 		bic	r3, r3, #3
 1088 05ac FB60     		str	r3, [r7, #12]
 700:../src/stm32f30x_tim.c ****   /* Select the Output Compare Mode */
 701:../src/stm32f30x_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1089              		.loc 1 701 0
 1090 05ae 3B68     		ldr	r3, [r7, #0]
 1091 05b0 1B68     		ldr	r3, [r3, #0]
 1092 05b2 FA68     		ldr	r2, [r7, #12]
 1093 05b4 1343     		orrs	r3, r3, r2
 1094 05b6 FB60     		str	r3, [r7, #12]
 702:../src/stm32f30x_tim.c ****   
 703:../src/stm32f30x_tim.c ****   /* Reset the Output Polarity level */
 704:../src/stm32f30x_tim.c ****   tmpccer &= (uint32_t)~TIM_CCER_CC1P;
 1095              		.loc 1 704 0
 1096 05b8 7B69     		ldr	r3, [r7, #20]
 1097 05ba 23F00203 		bic	r3, r3, #2
 1098 05be 7B61     		str	r3, [r7, #20]
 705:../src/stm32f30x_tim.c ****   /* Set the Output Compare Polarity */
 706:../src/stm32f30x_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 1099              		.loc 1 706 0
 1100 05c0 3B68     		ldr	r3, [r7, #0]
 1101 05c2 9B89     		ldrh	r3, [r3, #12]
 1102 05c4 7A69     		ldr	r2, [r7, #20]
 1103 05c6 1343     		orrs	r3, r3, r2
 1104 05c8 7B61     		str	r3, [r7, #20]
 707:../src/stm32f30x_tim.c ****   
 708:../src/stm32f30x_tim.c ****   /* Set the Output State */
 709:../src/stm32f30x_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 1105              		.loc 1 709 0
 1106 05ca 3B68     		ldr	r3, [r7, #0]
 1107 05cc 9B88     		ldrh	r3, [r3, #4]
 1108 05ce 7A69     		ldr	r2, [r7, #20]
 1109 05d0 1343     		orrs	r3, r3, r2
 1110 05d2 7B61     		str	r3, [r7, #20]
 710:../src/stm32f30x_tim.c ****     
 711:../src/stm32f30x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM15) || (TIMx == TIM16) || (TIMx == TIM17))
 1111              		.loc 1 711 0
 1112 05d4 7A68     		ldr	r2, [r7, #4]
 1113 05d6 4FF43053 		mov	r3, #11264
 1114 05da C4F20103 		movt	r3, 16385
 1115 05de 9A42     		cmp	r2, r3
 1116 05e0 1BD0     		beq	.L45
 1117              		.loc 1 711 0 is_stmt 0 discriminator 1
 1118 05e2 7A68     		ldr	r2, [r7, #4]
 1119 05e4 4FF45053 		mov	r3, #13312
 1120 05e8 C4F20103 		movt	r3, 16385
 1121 05ec 9A42     		cmp	r2, r3
 1122 05ee 14D0     		beq	.L45
 1123 05f0 7A68     		ldr	r2, [r7, #4]
 1124 05f2 4FF48043 		mov	r3, #16384
 1125 05f6 C4F20103 		movt	r3, 16385
 1126 05fa 9A42     		cmp	r2, r3
 1127 05fc 0DD0     		beq	.L45
 1128 05fe 7A68     		ldr	r2, [r7, #4]
 1129 0600 4FF48843 		mov	r3, #17408
 1130 0604 C4F20103 		movt	r3, 16385
 1131 0608 9A42     		cmp	r2, r3
 1132 060a 06D0     		beq	.L45
 1133 060c 7A68     		ldr	r2, [r7, #4]
 1134 060e 4FF49043 		mov	r3, #18432
 1135 0612 C4F20103 		movt	r3, 16385
 1136 0616 9A42     		cmp	r2, r3
 1137 0618 23D1     		bne	.L46
 1138              	.L45:
 712:../src/stm32f30x_tim.c ****   {
 713:../src/stm32f30x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 714:../src/stm32f30x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 715:../src/stm32f30x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 716:../src/stm32f30x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 717:../src/stm32f30x_tim.c ****     
 718:../src/stm32f30x_tim.c ****     /* Reset the Output N Polarity level */
 719:../src/stm32f30x_tim.c ****     tmpccer &= (uint32_t)~TIM_CCER_CC1NP;
 1139              		.loc 1 719 0 is_stmt 1
 1140 061a 7B69     		ldr	r3, [r7, #20]
 1141 061c 23F00803 		bic	r3, r3, #8
 1142 0620 7B61     		str	r3, [r7, #20]
 720:../src/stm32f30x_tim.c ****     /* Set the Output N Polarity */
 721:../src/stm32f30x_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 1143              		.loc 1 721 0
 1144 0622 3B68     		ldr	r3, [r7, #0]
 1145 0624 DB89     		ldrh	r3, [r3, #14]
 1146 0626 7A69     		ldr	r2, [r7, #20]
 1147 0628 1343     		orrs	r3, r3, r2
 1148 062a 7B61     		str	r3, [r7, #20]
 722:../src/stm32f30x_tim.c ****     /* Reset the Output N State */
 723:../src/stm32f30x_tim.c ****     tmpccer &= (uint32_t)~TIM_CCER_CC1NE;
 1149              		.loc 1 723 0
 1150 062c 7B69     		ldr	r3, [r7, #20]
 1151 062e 23F00403 		bic	r3, r3, #4
 1152 0632 7B61     		str	r3, [r7, #20]
 724:../src/stm32f30x_tim.c ****     
 725:../src/stm32f30x_tim.c ****     /* Set the Output N State */
 726:../src/stm32f30x_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 1153              		.loc 1 726 0
 1154 0634 3B68     		ldr	r3, [r7, #0]
 1155 0636 DB88     		ldrh	r3, [r3, #6]
 1156 0638 7A69     		ldr	r2, [r7, #20]
 1157 063a 1343     		orrs	r3, r3, r2
 1158 063c 7B61     		str	r3, [r7, #20]
 727:../src/stm32f30x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 728:../src/stm32f30x_tim.c ****     tmpcr2 &= (uint32_t)~TIM_CR2_OIS1;
 1159              		.loc 1 728 0
 1160 063e 3B69     		ldr	r3, [r7, #16]
 1161 0640 23F48073 		bic	r3, r3, #256
 1162 0644 3B61     		str	r3, [r7, #16]
 729:../src/stm32f30x_tim.c ****     tmpcr2 &= (uint32_t)~TIM_CR2_OIS1N;
 1163              		.loc 1 729 0
 1164 0646 3B69     		ldr	r3, [r7, #16]
 1165 0648 23F40073 		bic	r3, r3, #512
 1166 064c 3B61     		str	r3, [r7, #16]
 730:../src/stm32f30x_tim.c ****     /* Set the Output Idle state */
 731:../src/stm32f30x_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 1167              		.loc 1 731 0
 1168 064e 3B68     		ldr	r3, [r7, #0]
 1169 0650 1B8A     		ldrh	r3, [r3, #16]
 1170 0652 3A69     		ldr	r2, [r7, #16]
 1171 0654 1343     		orrs	r3, r3, r2
 1172 0656 3B61     		str	r3, [r7, #16]
 732:../src/stm32f30x_tim.c ****     /* Set the Output N Idle state */
 733:../src/stm32f30x_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 1173              		.loc 1 733 0
 1174 0658 3B68     		ldr	r3, [r7, #0]
 1175 065a 5B8A     		ldrh	r3, [r3, #18]
 1176 065c 3A69     		ldr	r2, [r7, #16]
 1177 065e 1343     		orrs	r3, r3, r2
 1178 0660 3B61     		str	r3, [r7, #16]
 1179              	.L46:
 734:../src/stm32f30x_tim.c ****   }
 735:../src/stm32f30x_tim.c ****   /* Write to TIMx CR2 */
 736:../src/stm32f30x_tim.c ****   TIMx->CR2 = tmpcr2;
 1180              		.loc 1 736 0
 1181 0662 7B68     		ldr	r3, [r7, #4]
 1182 0664 3A69     		ldr	r2, [r7, #16]
 1183 0666 5A60     		str	r2, [r3, #4]
 737:../src/stm32f30x_tim.c ****   
 738:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR1 */
 739:../src/stm32f30x_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1184              		.loc 1 739 0
 1185 0668 7B68     		ldr	r3, [r7, #4]
 1186 066a FA68     		ldr	r2, [r7, #12]
 1187 066c 9A61     		str	r2, [r3, #24]
 740:../src/stm32f30x_tim.c ****   
 741:../src/stm32f30x_tim.c ****   /* Set the Capture Compare Register value */
 742:../src/stm32f30x_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
 1188              		.loc 1 742 0
 1189 066e 3B68     		ldr	r3, [r7, #0]
 1190 0670 9A68     		ldr	r2, [r3, #8]
 1191 0672 7B68     		ldr	r3, [r7, #4]
 1192 0674 5A63     		str	r2, [r3, #52]
 743:../src/stm32f30x_tim.c ****   
 744:../src/stm32f30x_tim.c ****   /* Write to TIMx CCER */
 745:../src/stm32f30x_tim.c ****   TIMx->CCER = tmpccer;
 1193              		.loc 1 745 0
 1194 0676 7B68     		ldr	r3, [r7, #4]
 1195 0678 7A69     		ldr	r2, [r7, #20]
 1196 067a 1A62     		str	r2, [r3, #32]
 746:../src/stm32f30x_tim.c **** }
 1197              		.loc 1 746 0
 1198 067c 07F11C07 		add	r7, r7, #28
 1199 0680 BD46     		mov	sp, r7
 1200 0682 80BC     		pop	{r7}
 1201 0684 7047     		bx	lr
 1202              		.cfi_endproc
 1203              	.LFE127:
 1205 0686 00BF     		.align	2
 1206              		.global	TIM_OC2Init
 1207              		.thumb
 1208              		.thumb_func
 1210              	TIM_OC2Init:
 1211              	.LFB128:
 747:../src/stm32f30x_tim.c **** 
 748:../src/stm32f30x_tim.c **** /**
 749:../src/stm32f30x_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified parameters 
 750:../src/stm32f30x_tim.c ****   *         in the TIM_OCInitStruct.
 751:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8 or 15 to select the TIM peripheral.
 752:../src/stm32f30x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 753:../src/stm32f30x_tim.c ****   *         the configuration information for the specified TIM peripheral.
 754:../src/stm32f30x_tim.c ****   * @retval None
 755:../src/stm32f30x_tim.c ****   */
 756:../src/stm32f30x_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 757:../src/stm32f30x_tim.c **** {
 1212              		.loc 1 757 0
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 24
 1215              		@ frame_needed = 1, uses_anonymous_args = 0
 1216              		@ link register save eliminated.
 1217 0688 80B4     		push	{r7}
 1218              	.LCFI51:
 1219              		.cfi_def_cfa_offset 4
 1220              		.cfi_offset 7, -4
 1221 068a 87B0     		sub	sp, sp, #28
 1222              	.LCFI52:
 1223              		.cfi_def_cfa_offset 32
 1224 068c 00AF     		add	r7, sp, #0
 1225              	.LCFI53:
 1226              		.cfi_def_cfa_register 7
 1227 068e 7860     		str	r0, [r7, #4]
 1228 0690 3960     		str	r1, [r7, #0]
 758:../src/stm32f30x_tim.c ****   uint32_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1229              		.loc 1 758 0
 1230 0692 4FF00003 		mov	r3, #0
 1231 0696 FB60     		str	r3, [r7, #12]
 1232 0698 4FF00003 		mov	r3, #0
 1233 069c 7B61     		str	r3, [r7, #20]
 1234 069e 4FF00003 		mov	r3, #0
 1235 06a2 3B61     		str	r3, [r7, #16]
 759:../src/stm32f30x_tim.c ****    
 760:../src/stm32f30x_tim.c ****   /* Check the parameters */
 761:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx)); 
 762:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 763:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 764:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 765:../src/stm32f30x_tim.c **** 
 766:../src/stm32f30x_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 767:../src/stm32f30x_tim.c ****   TIMx->CCER &= (uint32_t)~TIM_CCER_CC2E;
 1236              		.loc 1 767 0
 1237 06a4 7B68     		ldr	r3, [r7, #4]
 1238 06a6 1B6A     		ldr	r3, [r3, #32]
 1239 06a8 23F01002 		bic	r2, r3, #16
 1240 06ac 7B68     		ldr	r3, [r7, #4]
 1241 06ae 1A62     		str	r2, [r3, #32]
 768:../src/stm32f30x_tim.c ****   
 769:../src/stm32f30x_tim.c ****   /* Get the TIMx CCER register value */  
 770:../src/stm32f30x_tim.c ****   tmpccer = TIMx->CCER;
 1242              		.loc 1 770 0
 1243 06b0 7B68     		ldr	r3, [r7, #4]
 1244 06b2 1B6A     		ldr	r3, [r3, #32]
 1245 06b4 7B61     		str	r3, [r7, #20]
 771:../src/stm32f30x_tim.c ****   /* Get the TIMx CR2 register value */
 772:../src/stm32f30x_tim.c ****   tmpcr2 =  TIMx->CR2;
 1246              		.loc 1 772 0
 1247 06b6 7B68     		ldr	r3, [r7, #4]
 1248 06b8 5B68     		ldr	r3, [r3, #4]
 1249 06ba 3B61     		str	r3, [r7, #16]
 773:../src/stm32f30x_tim.c ****   
 774:../src/stm32f30x_tim.c ****   /* Get the TIMx CCMR1 register value */
 775:../src/stm32f30x_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1250              		.loc 1 775 0
 1251 06bc 7B68     		ldr	r3, [r7, #4]
 1252 06be 9B69     		ldr	r3, [r3, #24]
 1253 06c0 FB60     		str	r3, [r7, #12]
 776:../src/stm32f30x_tim.c ****     
 777:../src/stm32f30x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 778:../src/stm32f30x_tim.c ****   tmpccmrx &= (uint32_t)~TIM_CCMR1_OC2M;
 1254              		.loc 1 778 0
 1255 06c2 FB68     		ldr	r3, [r7, #12]
 1256 06c4 23F08073 		bic	r3, r3, #16777216
 1257 06c8 23F4E043 		bic	r3, r3, #28672
 1258 06cc FB60     		str	r3, [r7, #12]
 779:../src/stm32f30x_tim.c ****   tmpccmrx &= (uint32_t)~TIM_CCMR1_CC2S;
 1259              		.loc 1 779 0
 1260 06ce FB68     		ldr	r3, [r7, #12]
 1261 06d0 23F44073 		bic	r3, r3, #768
 1262 06d4 FB60     		str	r3, [r7, #12]
 780:../src/stm32f30x_tim.c ****   
 781:../src/stm32f30x_tim.c ****   /* Select the Output Compare Mode */
 782:../src/stm32f30x_tim.c ****   tmpccmrx |= (uint32_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1263              		.loc 1 782 0
 1264 06d6 3B68     		ldr	r3, [r7, #0]
 1265 06d8 1B68     		ldr	r3, [r3, #0]
 1266 06da 4FEA0323 		lsl	r3, r3, #8
 1267 06de FA68     		ldr	r2, [r7, #12]
 1268 06e0 1343     		orrs	r3, r3, r2
 1269 06e2 FB60     		str	r3, [r7, #12]
 783:../src/stm32f30x_tim.c ****   
 784:../src/stm32f30x_tim.c ****   /* Reset the Output Polarity level */
 785:../src/stm32f30x_tim.c ****   tmpccer &= (uint32_t)~TIM_CCER_CC2P;
 1270              		.loc 1 785 0
 1271 06e4 7B69     		ldr	r3, [r7, #20]
 1272 06e6 23F02003 		bic	r3, r3, #32
 1273 06ea 7B61     		str	r3, [r7, #20]
 786:../src/stm32f30x_tim.c ****   /* Set the Output Compare Polarity */
 787:../src/stm32f30x_tim.c ****   tmpccer |= (uint32_t)((uint32_t)TIM_OCInitStruct->TIM_OCPolarity << 4);
 1274              		.loc 1 787 0
 1275 06ec 3B68     		ldr	r3, [r7, #0]
 1276 06ee 9B89     		ldrh	r3, [r3, #12]
 1277 06f0 4FEA0313 		lsl	r3, r3, #4
 1278 06f4 7A69     		ldr	r2, [r7, #20]
 1279 06f6 1343     		orrs	r3, r3, r2
 1280 06f8 7B61     		str	r3, [r7, #20]
 788:../src/stm32f30x_tim.c ****   
 789:../src/stm32f30x_tim.c ****   /* Set the Output State */
 790:../src/stm32f30x_tim.c ****   tmpccer |= (uint32_t)((uint32_t)TIM_OCInitStruct->TIM_OutputState << 4);
 1281              		.loc 1 790 0
 1282 06fa 3B68     		ldr	r3, [r7, #0]
 1283 06fc 9B88     		ldrh	r3, [r3, #4]
 1284 06fe 4FEA0313 		lsl	r3, r3, #4
 1285 0702 7A69     		ldr	r2, [r7, #20]
 1286 0704 1343     		orrs	r3, r3, r2
 1287 0706 7B61     		str	r3, [r7, #20]
 791:../src/stm32f30x_tim.c ****     
 792:../src/stm32f30x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1288              		.loc 1 792 0
 1289 0708 7A68     		ldr	r2, [r7, #4]
 1290 070a 4FF43053 		mov	r3, #11264
 1291 070e C4F20103 		movt	r3, 16385
 1292 0712 9A42     		cmp	r2, r3
 1293 0714 06D0     		beq	.L48
 1294              		.loc 1 792 0 is_stmt 0 discriminator 1
 1295 0716 7A68     		ldr	r2, [r7, #4]
 1296 0718 4FF45053 		mov	r3, #13312
 1297 071c C4F20103 		movt	r3, 16385
 1298 0720 9A42     		cmp	r2, r3
 1299 0722 2BD1     		bne	.L49
 1300              	.L48:
 793:../src/stm32f30x_tim.c ****   {
 794:../src/stm32f30x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 795:../src/stm32f30x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 796:../src/stm32f30x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 797:../src/stm32f30x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 798:../src/stm32f30x_tim.c ****     
 799:../src/stm32f30x_tim.c ****     /* Reset the Output N Polarity level */
 800:../src/stm32f30x_tim.c ****     tmpccer &= (uint32_t)~TIM_CCER_CC2NP;
 1301              		.loc 1 800 0 is_stmt 1
 1302 0724 7B69     		ldr	r3, [r7, #20]
 1303 0726 23F08003 		bic	r3, r3, #128
 1304 072a 7B61     		str	r3, [r7, #20]
 801:../src/stm32f30x_tim.c ****     /* Set the Output N Polarity */
 802:../src/stm32f30x_tim.c ****     tmpccer |= (uint32_t)((uint32_t)TIM_OCInitStruct->TIM_OCNPolarity << 4);
 1305              		.loc 1 802 0
 1306 072c 3B68     		ldr	r3, [r7, #0]
 1307 072e DB89     		ldrh	r3, [r3, #14]
 1308 0730 4FEA0313 		lsl	r3, r3, #4
 1309 0734 7A69     		ldr	r2, [r7, #20]
 1310 0736 1343     		orrs	r3, r3, r2
 1311 0738 7B61     		str	r3, [r7, #20]
 803:../src/stm32f30x_tim.c ****     /* Reset the Output N State */
 804:../src/stm32f30x_tim.c ****     tmpccer &= (uint32_t)~TIM_CCER_CC2NE;
 1312              		.loc 1 804 0
 1313 073a 7B69     		ldr	r3, [r7, #20]
 1314 073c 23F04003 		bic	r3, r3, #64
 1315 0740 7B61     		str	r3, [r7, #20]
 805:../src/stm32f30x_tim.c ****     
 806:../src/stm32f30x_tim.c ****     /* Set the Output N State */
 807:../src/stm32f30x_tim.c ****     tmpccer |= (uint32_t)((uint32_t)TIM_OCInitStruct->TIM_OutputNState << 4);
 1316              		.loc 1 807 0
 1317 0742 3B68     		ldr	r3, [r7, #0]
 1318 0744 DB88     		ldrh	r3, [r3, #6]
 1319 0746 4FEA0313 		lsl	r3, r3, #4
 1320 074a 7A69     		ldr	r2, [r7, #20]
 1321 074c 1343     		orrs	r3, r3, r2
 1322 074e 7B61     		str	r3, [r7, #20]
 808:../src/stm32f30x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 809:../src/stm32f30x_tim.c ****     tmpcr2 &= (uint32_t)~TIM_CR2_OIS2;
 1323              		.loc 1 809 0
 1324 0750 3B69     		ldr	r3, [r7, #16]
 1325 0752 23F48063 		bic	r3, r3, #1024
 1326 0756 3B61     		str	r3, [r7, #16]
 810:../src/stm32f30x_tim.c ****     tmpcr2 &= (uint32_t)~TIM_CR2_OIS2N;
 1327              		.loc 1 810 0
 1328 0758 3B69     		ldr	r3, [r7, #16]
 1329 075a 23F40063 		bic	r3, r3, #2048
 1330 075e 3B61     		str	r3, [r7, #16]
 811:../src/stm32f30x_tim.c ****     /* Set the Output Idle state */
 812:../src/stm32f30x_tim.c ****     tmpcr2 |= (uint32_t)((uint32_t)TIM_OCInitStruct->TIM_OCIdleState << 2);
 1331              		.loc 1 812 0
 1332 0760 3B68     		ldr	r3, [r7, #0]
 1333 0762 1B8A     		ldrh	r3, [r3, #16]
 1334 0764 4FEA8303 		lsl	r3, r3, #2
 1335 0768 3A69     		ldr	r2, [r7, #16]
 1336 076a 1343     		orrs	r3, r3, r2
 1337 076c 3B61     		str	r3, [r7, #16]
 813:../src/stm32f30x_tim.c ****     /* Set the Output N Idle state */
 814:../src/stm32f30x_tim.c ****     tmpcr2 |= (uint32_t)((uint32_t)TIM_OCInitStruct->TIM_OCNIdleState << 2);
 1338              		.loc 1 814 0
 1339 076e 3B68     		ldr	r3, [r7, #0]
 1340 0770 5B8A     		ldrh	r3, [r3, #18]
 1341 0772 4FEA8303 		lsl	r3, r3, #2
 1342 0776 3A69     		ldr	r2, [r7, #16]
 1343 0778 1343     		orrs	r3, r3, r2
 1344 077a 3B61     		str	r3, [r7, #16]
 1345              	.L49:
 815:../src/stm32f30x_tim.c ****   }
 816:../src/stm32f30x_tim.c ****   /* Write to TIMx CR2 */
 817:../src/stm32f30x_tim.c ****   TIMx->CR2 = tmpcr2;
 1346              		.loc 1 817 0
 1347 077c 7B68     		ldr	r3, [r7, #4]
 1348 077e 3A69     		ldr	r2, [r7, #16]
 1349 0780 5A60     		str	r2, [r3, #4]
 818:../src/stm32f30x_tim.c ****   
 819:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR1 */
 820:../src/stm32f30x_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1350              		.loc 1 820 0
 1351 0782 7B68     		ldr	r3, [r7, #4]
 1352 0784 FA68     		ldr	r2, [r7, #12]
 1353 0786 9A61     		str	r2, [r3, #24]
 821:../src/stm32f30x_tim.c ****   
 822:../src/stm32f30x_tim.c ****   /* Set the Capture Compare Register value */
 823:../src/stm32f30x_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 1354              		.loc 1 823 0
 1355 0788 3B68     		ldr	r3, [r7, #0]
 1356 078a 9A68     		ldr	r2, [r3, #8]
 1357 078c 7B68     		ldr	r3, [r7, #4]
 1358 078e 9A63     		str	r2, [r3, #56]
 824:../src/stm32f30x_tim.c ****   
 825:../src/stm32f30x_tim.c ****   /* Write to TIMx CCER */
 826:../src/stm32f30x_tim.c ****   TIMx->CCER = tmpccer;
 1359              		.loc 1 826 0
 1360 0790 7B68     		ldr	r3, [r7, #4]
 1361 0792 7A69     		ldr	r2, [r7, #20]
 1362 0794 1A62     		str	r2, [r3, #32]
 827:../src/stm32f30x_tim.c **** }
 1363              		.loc 1 827 0
 1364 0796 07F11C07 		add	r7, r7, #28
 1365 079a BD46     		mov	sp, r7
 1366 079c 80BC     		pop	{r7}
 1367 079e 7047     		bx	lr
 1368              		.cfi_endproc
 1369              	.LFE128:
 1371              		.align	2
 1372              		.global	TIM_OC3Init
 1373              		.thumb
 1374              		.thumb_func
 1376              	TIM_OC3Init:
 1377              	.LFB129:
 828:../src/stm32f30x_tim.c **** 
 829:../src/stm32f30x_tim.c **** /**
 830:../src/stm32f30x_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified parameters
 831:../src/stm32f30x_tim.c ****   *         in the TIM_OCInitStruct.
 832:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4 or 8 to select the TIM peripheral.
 833:../src/stm32f30x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 834:../src/stm32f30x_tim.c ****   *         the configuration information for the specified TIM peripheral.
 835:../src/stm32f30x_tim.c ****   * @retval None
 836:../src/stm32f30x_tim.c ****   */
 837:../src/stm32f30x_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 838:../src/stm32f30x_tim.c **** {
 1378              		.loc 1 838 0
 1379              		.cfi_startproc
 1380              		@ args = 0, pretend = 0, frame = 24
 1381              		@ frame_needed = 1, uses_anonymous_args = 0
 1382              		@ link register save eliminated.
 1383 07a0 80B4     		push	{r7}
 1384              	.LCFI54:
 1385              		.cfi_def_cfa_offset 4
 1386              		.cfi_offset 7, -4
 1387 07a2 87B0     		sub	sp, sp, #28
 1388              	.LCFI55:
 1389              		.cfi_def_cfa_offset 32
 1390 07a4 00AF     		add	r7, sp, #0
 1391              	.LCFI56:
 1392              		.cfi_def_cfa_register 7
 1393 07a6 7860     		str	r0, [r7, #4]
 1394 07a8 3960     		str	r1, [r7, #0]
 839:../src/stm32f30x_tim.c ****   uint32_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1395              		.loc 1 839 0
 1396 07aa 4FF00003 		mov	r3, #0
 1397 07ae FB60     		str	r3, [r7, #12]
 1398 07b0 4FF00003 		mov	r3, #0
 1399 07b4 7B61     		str	r3, [r7, #20]
 1400 07b6 4FF00003 		mov	r3, #0
 1401 07ba 3B61     		str	r3, [r7, #16]
 840:../src/stm32f30x_tim.c ****    
 841:../src/stm32f30x_tim.c ****   /* Check the parameters */
 842:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 843:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 844:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 845:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 846:../src/stm32f30x_tim.c **** 
 847:../src/stm32f30x_tim.c ****   /* Disable the Channel 3: Reset the CC2E Bit */
 848:../src/stm32f30x_tim.c ****   TIMx->CCER &= (uint32_t)~TIM_CCER_CC3E;
 1402              		.loc 1 848 0
 1403 07bc 7B68     		ldr	r3, [r7, #4]
 1404 07be 1B6A     		ldr	r3, [r3, #32]
 1405 07c0 23F48072 		bic	r2, r3, #256
 1406 07c4 7B68     		ldr	r3, [r7, #4]
 1407 07c6 1A62     		str	r2, [r3, #32]
 849:../src/stm32f30x_tim.c ****   
 850:../src/stm32f30x_tim.c ****   /* Get the TIMx CCER register value */
 851:../src/stm32f30x_tim.c ****   tmpccer = TIMx->CCER;
 1408              		.loc 1 851 0
 1409 07c8 7B68     		ldr	r3, [r7, #4]
 1410 07ca 1B6A     		ldr	r3, [r3, #32]
 1411 07cc 7B61     		str	r3, [r7, #20]
 852:../src/stm32f30x_tim.c ****   /* Get the TIMx CR2 register value */
 853:../src/stm32f30x_tim.c ****   tmpcr2 =  TIMx->CR2;
 1412              		.loc 1 853 0
 1413 07ce 7B68     		ldr	r3, [r7, #4]
 1414 07d0 5B68     		ldr	r3, [r3, #4]
 1415 07d2 3B61     		str	r3, [r7, #16]
 854:../src/stm32f30x_tim.c ****   
 855:../src/stm32f30x_tim.c ****   /* Get the TIMx CCMR2 register value */
 856:../src/stm32f30x_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1416              		.loc 1 856 0
 1417 07d4 7B68     		ldr	r3, [r7, #4]
 1418 07d6 DB69     		ldr	r3, [r3, #28]
 1419 07d8 FB60     		str	r3, [r7, #12]
 857:../src/stm32f30x_tim.c ****     
 858:../src/stm32f30x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 859:../src/stm32f30x_tim.c ****   tmpccmrx &= (uint32_t)~TIM_CCMR2_OC3M;
 1420              		.loc 1 859 0
 1421 07da FB68     		ldr	r3, [r7, #12]
 1422 07dc 23F07003 		bic	r3, r3, #112
 1423 07e0 FB60     		str	r3, [r7, #12]
 860:../src/stm32f30x_tim.c ****   tmpccmrx &= (uint32_t)~TIM_CCMR2_CC3S;  
 1424              		.loc 1 860 0
 1425 07e2 FB68     		ldr	r3, [r7, #12]
 1426 07e4 23F00303 		bic	r3, r3, #3
 1427 07e8 FB60     		str	r3, [r7, #12]
 861:../src/stm32f30x_tim.c ****   /* Select the Output Compare Mode */
 862:../src/stm32f30x_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1428              		.loc 1 862 0
 1429 07ea 3B68     		ldr	r3, [r7, #0]
 1430 07ec 1B68     		ldr	r3, [r3, #0]
 1431 07ee FA68     		ldr	r2, [r7, #12]
 1432 07f0 1343     		orrs	r3, r3, r2
 1433 07f2 FB60     		str	r3, [r7, #12]
 863:../src/stm32f30x_tim.c ****   
 864:../src/stm32f30x_tim.c ****   /* Reset the Output Polarity level */
 865:../src/stm32f30x_tim.c ****   tmpccer &= (uint32_t)~TIM_CCER_CC3P;
 1434              		.loc 1 865 0
 1435 07f4 7B69     		ldr	r3, [r7, #20]
 1436 07f6 23F40073 		bic	r3, r3, #512
 1437 07fa 7B61     		str	r3, [r7, #20]
 866:../src/stm32f30x_tim.c ****   /* Set the Output Compare Polarity */
 867:../src/stm32f30x_tim.c ****   tmpccer |= (uint32_t)((uint32_t)TIM_OCInitStruct->TIM_OCPolarity << 8);
 1438              		.loc 1 867 0
 1439 07fc 3B68     		ldr	r3, [r7, #0]
 1440 07fe 9B89     		ldrh	r3, [r3, #12]
 1441 0800 4FEA0323 		lsl	r3, r3, #8
 1442 0804 7A69     		ldr	r2, [r7, #20]
 1443 0806 1343     		orrs	r3, r3, r2
 1444 0808 7B61     		str	r3, [r7, #20]
 868:../src/stm32f30x_tim.c ****   
 869:../src/stm32f30x_tim.c ****   /* Set the Output State */
 870:../src/stm32f30x_tim.c ****   tmpccer |= (uint32_t)((uint32_t)TIM_OCInitStruct->TIM_OutputState << 8);
 1445              		.loc 1 870 0
 1446 080a 3B68     		ldr	r3, [r7, #0]
 1447 080c 9B88     		ldrh	r3, [r3, #4]
 1448 080e 4FEA0323 		lsl	r3, r3, #8
 1449 0812 7A69     		ldr	r2, [r7, #20]
 1450 0814 1343     		orrs	r3, r3, r2
 1451 0816 7B61     		str	r3, [r7, #20]
 871:../src/stm32f30x_tim.c ****     
 872:../src/stm32f30x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1452              		.loc 1 872 0
 1453 0818 7A68     		ldr	r2, [r7, #4]
 1454 081a 4FF43053 		mov	r3, #11264
 1455 081e C4F20103 		movt	r3, 16385
 1456 0822 9A42     		cmp	r2, r3
 1457 0824 06D0     		beq	.L51
 1458              		.loc 1 872 0 is_stmt 0 discriminator 1
 1459 0826 7A68     		ldr	r2, [r7, #4]
 1460 0828 4FF45053 		mov	r3, #13312
 1461 082c C4F20103 		movt	r3, 16385
 1462 0830 9A42     		cmp	r2, r3
 1463 0832 2BD1     		bne	.L52
 1464              	.L51:
 873:../src/stm32f30x_tim.c ****   {
 874:../src/stm32f30x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 875:../src/stm32f30x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 876:../src/stm32f30x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 877:../src/stm32f30x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 878:../src/stm32f30x_tim.c ****     
 879:../src/stm32f30x_tim.c ****     /* Reset the Output N Polarity level */
 880:../src/stm32f30x_tim.c ****     tmpccer &= (uint32_t)~TIM_CCER_CC3NP;
 1465              		.loc 1 880 0 is_stmt 1
 1466 0834 7B69     		ldr	r3, [r7, #20]
 1467 0836 23F40063 		bic	r3, r3, #2048
 1468 083a 7B61     		str	r3, [r7, #20]
 881:../src/stm32f30x_tim.c ****     /* Set the Output N Polarity */
 882:../src/stm32f30x_tim.c ****     tmpccer |= (uint32_t)((uint32_t)TIM_OCInitStruct->TIM_OCNPolarity << 8);
 1469              		.loc 1 882 0
 1470 083c 3B68     		ldr	r3, [r7, #0]
 1471 083e DB89     		ldrh	r3, [r3, #14]
 1472 0840 4FEA0323 		lsl	r3, r3, #8
 1473 0844 7A69     		ldr	r2, [r7, #20]
 1474 0846 1343     		orrs	r3, r3, r2
 1475 0848 7B61     		str	r3, [r7, #20]
 883:../src/stm32f30x_tim.c ****     /* Reset the Output N State */
 884:../src/stm32f30x_tim.c ****     tmpccer &= (uint32_t)~TIM_CCER_CC3NE;
 1476              		.loc 1 884 0
 1477 084a 7B69     		ldr	r3, [r7, #20]
 1478 084c 23F48063 		bic	r3, r3, #1024
 1479 0850 7B61     		str	r3, [r7, #20]
 885:../src/stm32f30x_tim.c ****     
 886:../src/stm32f30x_tim.c ****     /* Set the Output N State */
 887:../src/stm32f30x_tim.c ****     tmpccer |= (uint32_t)((uint32_t)TIM_OCInitStruct->TIM_OutputNState << 8);
 1480              		.loc 1 887 0
 1481 0852 3B68     		ldr	r3, [r7, #0]
 1482 0854 DB88     		ldrh	r3, [r3, #6]
 1483 0856 4FEA0323 		lsl	r3, r3, #8
 1484 085a 7A69     		ldr	r2, [r7, #20]
 1485 085c 1343     		orrs	r3, r3, r2
 1486 085e 7B61     		str	r3, [r7, #20]
 888:../src/stm32f30x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 889:../src/stm32f30x_tim.c ****     tmpcr2 &= (uint32_t)~TIM_CR2_OIS3;
 1487              		.loc 1 889 0
 1488 0860 3B69     		ldr	r3, [r7, #16]
 1489 0862 23F48053 		bic	r3, r3, #4096
 1490 0866 3B61     		str	r3, [r7, #16]
 890:../src/stm32f30x_tim.c ****     tmpcr2 &= (uint32_t)~TIM_CR2_OIS3N;
 1491              		.loc 1 890 0
 1492 0868 3B69     		ldr	r3, [r7, #16]
 1493 086a 23F40053 		bic	r3, r3, #8192
 1494 086e 3B61     		str	r3, [r7, #16]
 891:../src/stm32f30x_tim.c ****     /* Set the Output Idle state */
 892:../src/stm32f30x_tim.c ****     tmpcr2 |= (uint32_t)((uint32_t)TIM_OCInitStruct->TIM_OCIdleState << 4);
 1495              		.loc 1 892 0
 1496 0870 3B68     		ldr	r3, [r7, #0]
 1497 0872 1B8A     		ldrh	r3, [r3, #16]
 1498 0874 4FEA0313 		lsl	r3, r3, #4
 1499 0878 3A69     		ldr	r2, [r7, #16]
 1500 087a 1343     		orrs	r3, r3, r2
 1501 087c 3B61     		str	r3, [r7, #16]
 893:../src/stm32f30x_tim.c ****     /* Set the Output N Idle state */
 894:../src/stm32f30x_tim.c ****     tmpcr2 |= (uint32_t)((uint32_t)TIM_OCInitStruct->TIM_OCNIdleState << 4);
 1502              		.loc 1 894 0
 1503 087e 3B68     		ldr	r3, [r7, #0]
 1504 0880 5B8A     		ldrh	r3, [r3, #18]
 1505 0882 4FEA0313 		lsl	r3, r3, #4
 1506 0886 3A69     		ldr	r2, [r7, #16]
 1507 0888 1343     		orrs	r3, r3, r2
 1508 088a 3B61     		str	r3, [r7, #16]
 1509              	.L52:
 895:../src/stm32f30x_tim.c ****   }
 896:../src/stm32f30x_tim.c ****   /* Write to TIMx CR2 */
 897:../src/stm32f30x_tim.c ****   TIMx->CR2 = tmpcr2;
 1510              		.loc 1 897 0
 1511 088c 7B68     		ldr	r3, [r7, #4]
 1512 088e 3A69     		ldr	r2, [r7, #16]
 1513 0890 5A60     		str	r2, [r3, #4]
 898:../src/stm32f30x_tim.c ****   
 899:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR2 */
 900:../src/stm32f30x_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1514              		.loc 1 900 0
 1515 0892 7B68     		ldr	r3, [r7, #4]
 1516 0894 FA68     		ldr	r2, [r7, #12]
 1517 0896 DA61     		str	r2, [r3, #28]
 901:../src/stm32f30x_tim.c ****   
 902:../src/stm32f30x_tim.c ****   /* Set the Capture Compare Register value */
 903:../src/stm32f30x_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 1518              		.loc 1 903 0
 1519 0898 3B68     		ldr	r3, [r7, #0]
 1520 089a 9A68     		ldr	r2, [r3, #8]
 1521 089c 7B68     		ldr	r3, [r7, #4]
 1522 089e DA63     		str	r2, [r3, #60]
 904:../src/stm32f30x_tim.c ****   
 905:../src/stm32f30x_tim.c ****   /* Write to TIMx CCER */
 906:../src/stm32f30x_tim.c ****   TIMx->CCER = tmpccer;
 1523              		.loc 1 906 0
 1524 08a0 7B68     		ldr	r3, [r7, #4]
 1525 08a2 7A69     		ldr	r2, [r7, #20]
 1526 08a4 1A62     		str	r2, [r3, #32]
 907:../src/stm32f30x_tim.c **** }
 1527              		.loc 1 907 0
 1528 08a6 07F11C07 		add	r7, r7, #28
 1529 08aa BD46     		mov	sp, r7
 1530 08ac 80BC     		pop	{r7}
 1531 08ae 7047     		bx	lr
 1532              		.cfi_endproc
 1533              	.LFE129:
 1535              		.align	2
 1536              		.global	TIM_OC4Init
 1537              		.thumb
 1538              		.thumb_func
 1540              	TIM_OC4Init:
 1541              	.LFB130:
 908:../src/stm32f30x_tim.c **** 
 909:../src/stm32f30x_tim.c **** /**
 910:../src/stm32f30x_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified parameters
 911:../src/stm32f30x_tim.c ****   *         in the TIM_OCInitStruct.
 912:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4 or 8 to select the TIM peripheral.
 913:../src/stm32f30x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 914:../src/stm32f30x_tim.c ****   *         the configuration information for the specified TIM peripheral.
 915:../src/stm32f30x_tim.c ****   * @retval None
 916:../src/stm32f30x_tim.c ****   */
 917:../src/stm32f30x_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 918:../src/stm32f30x_tim.c **** {
 1542              		.loc 1 918 0
 1543              		.cfi_startproc
 1544              		@ args = 0, pretend = 0, frame = 24
 1545              		@ frame_needed = 1, uses_anonymous_args = 0
 1546              		@ link register save eliminated.
 1547 08b0 80B4     		push	{r7}
 1548              	.LCFI57:
 1549              		.cfi_def_cfa_offset 4
 1550              		.cfi_offset 7, -4
 1551 08b2 87B0     		sub	sp, sp, #28
 1552              	.LCFI58:
 1553              		.cfi_def_cfa_offset 32
 1554 08b4 00AF     		add	r7, sp, #0
 1555              	.LCFI59:
 1556              		.cfi_def_cfa_register 7
 1557 08b6 7860     		str	r0, [r7, #4]
 1558 08b8 3960     		str	r1, [r7, #0]
 919:../src/stm32f30x_tim.c ****   uint32_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1559              		.loc 1 919 0
 1560 08ba 4FF00003 		mov	r3, #0
 1561 08be 3B61     		str	r3, [r7, #16]
 1562 08c0 4FF00003 		mov	r3, #0
 1563 08c4 FB60     		str	r3, [r7, #12]
 1564 08c6 4FF00003 		mov	r3, #0
 1565 08ca 7B61     		str	r3, [r7, #20]
 920:../src/stm32f30x_tim.c ****    
 921:../src/stm32f30x_tim.c ****   /* Check the parameters */
 922:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 923:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 924:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 925:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 926:../src/stm32f30x_tim.c **** 
 927:../src/stm32f30x_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
 928:../src/stm32f30x_tim.c ****   TIMx->CCER &= (uint32_t)~TIM_CCER_CC4E;
 1566              		.loc 1 928 0
 1567 08cc 7B68     		ldr	r3, [r7, #4]
 1568 08ce 1B6A     		ldr	r3, [r3, #32]
 1569 08d0 23F48052 		bic	r2, r3, #4096
 1570 08d4 7B68     		ldr	r3, [r7, #4]
 1571 08d6 1A62     		str	r2, [r3, #32]
 929:../src/stm32f30x_tim.c ****   
 930:../src/stm32f30x_tim.c ****   /* Get the TIMx CCER register value */
 931:../src/stm32f30x_tim.c ****   tmpccer = TIMx->CCER;
 1572              		.loc 1 931 0
 1573 08d8 7B68     		ldr	r3, [r7, #4]
 1574 08da 1B6A     		ldr	r3, [r3, #32]
 1575 08dc FB60     		str	r3, [r7, #12]
 932:../src/stm32f30x_tim.c ****   /* Get the TIMx CR2 register value */
 933:../src/stm32f30x_tim.c ****   tmpcr2 =  TIMx->CR2;
 1576              		.loc 1 933 0
 1577 08de 7B68     		ldr	r3, [r7, #4]
 1578 08e0 5B68     		ldr	r3, [r3, #4]
 1579 08e2 7B61     		str	r3, [r7, #20]
 934:../src/stm32f30x_tim.c ****   
 935:../src/stm32f30x_tim.c ****   /* Get the TIMx CCMR2 register value */
 936:../src/stm32f30x_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1580              		.loc 1 936 0
 1581 08e4 7B68     		ldr	r3, [r7, #4]
 1582 08e6 DB69     		ldr	r3, [r3, #28]
 1583 08e8 3B61     		str	r3, [r7, #16]
 937:../src/stm32f30x_tim.c ****     
 938:../src/stm32f30x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 939:../src/stm32f30x_tim.c ****   tmpccmrx &= (uint32_t)~TIM_CCMR2_OC4M;
 1584              		.loc 1 939 0
 1585 08ea 3B69     		ldr	r3, [r7, #16]
 1586 08ec 23F4E043 		bic	r3, r3, #28672
 1587 08f0 3B61     		str	r3, [r7, #16]
 940:../src/stm32f30x_tim.c ****   tmpccmrx &= (uint32_t)~TIM_CCMR2_CC4S;
 1588              		.loc 1 940 0
 1589 08f2 3B69     		ldr	r3, [r7, #16]
 1590 08f4 23F44073 		bic	r3, r3, #768
 1591 08f8 3B61     		str	r3, [r7, #16]
 941:../src/stm32f30x_tim.c ****   
 942:../src/stm32f30x_tim.c ****   /* Select the Output Compare Mode */
 943:../src/stm32f30x_tim.c ****   tmpccmrx |= (uint32_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1592              		.loc 1 943 0
 1593 08fa 3B68     		ldr	r3, [r7, #0]
 1594 08fc 1B68     		ldr	r3, [r3, #0]
 1595 08fe 4FEA0323 		lsl	r3, r3, #8
 1596 0902 3A69     		ldr	r2, [r7, #16]
 1597 0904 1343     		orrs	r3, r3, r2
 1598 0906 3B61     		str	r3, [r7, #16]
 944:../src/stm32f30x_tim.c ****   
 945:../src/stm32f30x_tim.c ****   /* Reset the Output Polarity level */
 946:../src/stm32f30x_tim.c ****   tmpccer &= (uint32_t)~TIM_CCER_CC4P;
 1599              		.loc 1 946 0
 1600 0908 FB68     		ldr	r3, [r7, #12]
 1601 090a 23F40053 		bic	r3, r3, #8192
 1602 090e FB60     		str	r3, [r7, #12]
 947:../src/stm32f30x_tim.c ****   /* Set the Output Compare Polarity */
 948:../src/stm32f30x_tim.c ****   tmpccer |= (uint32_t)((uint32_t)TIM_OCInitStruct->TIM_OCPolarity << 12);
 1603              		.loc 1 948 0
 1604 0910 3B68     		ldr	r3, [r7, #0]
 1605 0912 9B89     		ldrh	r3, [r3, #12]
 1606 0914 4FEA0333 		lsl	r3, r3, #12
 1607 0918 FA68     		ldr	r2, [r7, #12]
 1608 091a 1343     		orrs	r3, r3, r2
 1609 091c FB60     		str	r3, [r7, #12]
 949:../src/stm32f30x_tim.c ****   
 950:../src/stm32f30x_tim.c ****   /* Set the Output State */
 951:../src/stm32f30x_tim.c ****   tmpccer |= (uint32_t)((uint32_t)TIM_OCInitStruct->TIM_OutputState << 12);
 1610              		.loc 1 951 0
 1611 091e 3B68     		ldr	r3, [r7, #0]
 1612 0920 9B88     		ldrh	r3, [r3, #4]
 1613 0922 4FEA0333 		lsl	r3, r3, #12
 1614 0926 FA68     		ldr	r2, [r7, #12]
 1615 0928 1343     		orrs	r3, r3, r2
 1616 092a FB60     		str	r3, [r7, #12]
 952:../src/stm32f30x_tim.c ****   
 953:../src/stm32f30x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1617              		.loc 1 953 0
 1618 092c 7A68     		ldr	r2, [r7, #4]
 1619 092e 4FF43053 		mov	r3, #11264
 1620 0932 C4F20103 		movt	r3, 16385
 1621 0936 9A42     		cmp	r2, r3
 1622 0938 06D0     		beq	.L54
 1623              		.loc 1 953 0 is_stmt 0 discriminator 1
 1624 093a 7A68     		ldr	r2, [r7, #4]
 1625 093c 4FF45053 		mov	r3, #13312
 1626 0940 C4F20103 		movt	r3, 16385
 1627 0944 9A42     		cmp	r2, r3
 1628 0946 0AD1     		bne	.L55
 1629              	.L54:
 954:../src/stm32f30x_tim.c ****   {
 955:../src/stm32f30x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 956:../src/stm32f30x_tim.c ****     /* Reset the Output Compare IDLE State */
 957:../src/stm32f30x_tim.c ****     tmpcr2 &=(uint32_t) ~TIM_CR2_OIS4;
 1630              		.loc 1 957 0 is_stmt 1
 1631 0948 7B69     		ldr	r3, [r7, #20]
 1632 094a 23F48043 		bic	r3, r3, #16384
 1633 094e 7B61     		str	r3, [r7, #20]
 958:../src/stm32f30x_tim.c ****     /* Set the Output Idle state */
 959:../src/stm32f30x_tim.c ****     tmpcr2 |= (uint32_t)((uint32_t)TIM_OCInitStruct->TIM_OCIdleState << 6);
 1634              		.loc 1 959 0
 1635 0950 3B68     		ldr	r3, [r7, #0]
 1636 0952 1B8A     		ldrh	r3, [r3, #16]
 1637 0954 4FEA8313 		lsl	r3, r3, #6
 1638 0958 7A69     		ldr	r2, [r7, #20]
 1639 095a 1343     		orrs	r3, r3, r2
 1640 095c 7B61     		str	r3, [r7, #20]
 1641              	.L55:
 960:../src/stm32f30x_tim.c ****   }
 961:../src/stm32f30x_tim.c ****   /* Write to TIMx CR2 */
 962:../src/stm32f30x_tim.c ****   TIMx->CR2 = tmpcr2;
 1642              		.loc 1 962 0
 1643 095e 7B68     		ldr	r3, [r7, #4]
 1644 0960 7A69     		ldr	r2, [r7, #20]
 1645 0962 5A60     		str	r2, [r3, #4]
 963:../src/stm32f30x_tim.c ****   
 964:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR2 */  
 965:../src/stm32f30x_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1646              		.loc 1 965 0
 1647 0964 7B68     		ldr	r3, [r7, #4]
 1648 0966 3A69     		ldr	r2, [r7, #16]
 1649 0968 DA61     		str	r2, [r3, #28]
 966:../src/stm32f30x_tim.c ****     
 967:../src/stm32f30x_tim.c ****   /* Set the Capture Compare Register value */
 968:../src/stm32f30x_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 1650              		.loc 1 968 0
 1651 096a 3B68     		ldr	r3, [r7, #0]
 1652 096c 9A68     		ldr	r2, [r3, #8]
 1653 096e 7B68     		ldr	r3, [r7, #4]
 1654 0970 1A64     		str	r2, [r3, #64]
 969:../src/stm32f30x_tim.c ****   
 970:../src/stm32f30x_tim.c ****   /* Write to TIMx CCER */
 971:../src/stm32f30x_tim.c ****   TIMx->CCER = tmpccer;
 1655              		.loc 1 971 0
 1656 0972 7B68     		ldr	r3, [r7, #4]
 1657 0974 FA68     		ldr	r2, [r7, #12]
 1658 0976 1A62     		str	r2, [r3, #32]
 972:../src/stm32f30x_tim.c **** }
 1659              		.loc 1 972 0
 1660 0978 07F11C07 		add	r7, r7, #28
 1661 097c BD46     		mov	sp, r7
 1662 097e 80BC     		pop	{r7}
 1663 0980 7047     		bx	lr
 1664              		.cfi_endproc
 1665              	.LFE130:
 1667 0982 00BF     		.align	2
 1668              		.global	TIM_OC5Init
 1669              		.thumb
 1670              		.thumb_func
 1672              	TIM_OC5Init:
 1673              	.LFB131:
 973:../src/stm32f30x_tim.c **** 
 974:../src/stm32f30x_tim.c **** /**
 975:../src/stm32f30x_tim.c ****   * @brief  Initializes the TIMx Channel5 according to the specified parameters
 976:../src/stm32f30x_tim.c ****   *         in the TIM_OCInitStruct.
 977:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
 978:../src/stm32f30x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 979:../src/stm32f30x_tim.c ****   *         the configuration information for the specified TIM peripheral.
 980:../src/stm32f30x_tim.c ****   * @retval None
 981:../src/stm32f30x_tim.c ****   */
 982:../src/stm32f30x_tim.c **** void TIM_OC5Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 983:../src/stm32f30x_tim.c **** {
 1674              		.loc 1 983 0
 1675              		.cfi_startproc
 1676              		@ args = 0, pretend = 0, frame = 24
 1677              		@ frame_needed = 1, uses_anonymous_args = 0
 1678              		@ link register save eliminated.
 1679 0984 80B4     		push	{r7}
 1680              	.LCFI60:
 1681              		.cfi_def_cfa_offset 4
 1682              		.cfi_offset 7, -4
 1683 0986 87B0     		sub	sp, sp, #28
 1684              	.LCFI61:
 1685              		.cfi_def_cfa_offset 32
 1686 0988 00AF     		add	r7, sp, #0
 1687              	.LCFI62:
 1688              		.cfi_def_cfa_register 7
 1689 098a 7860     		str	r0, [r7, #4]
 1690 098c 3960     		str	r1, [r7, #0]
 984:../src/stm32f30x_tim.c ****   uint32_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1691              		.loc 1 984 0
 1692 098e 4FF00003 		mov	r3, #0
 1693 0992 3B61     		str	r3, [r7, #16]
 1694 0994 4FF00003 		mov	r3, #0
 1695 0998 FB60     		str	r3, [r7, #12]
 1696 099a 4FF00003 		mov	r3, #0
 1697 099e 7B61     		str	r3, [r7, #20]
 985:../src/stm32f30x_tim.c ****    
 986:../src/stm32f30x_tim.c ****   /* Check the parameters */
 987:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx)); 
 988:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 989:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 990:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 991:../src/stm32f30x_tim.c **** 
 992:../src/stm32f30x_tim.c ****   /* Disable the Channel 5: Reset the CC5E Bit */
 993:../src/stm32f30x_tim.c ****   TIMx->CCER &= (uint32_t)~TIM_CCER_CC5E; /* to be verified*/
 1698              		.loc 1 993 0
 1699 09a0 7B68     		ldr	r3, [r7, #4]
 1700 09a2 1B6A     		ldr	r3, [r3, #32]
 1701 09a4 23F48032 		bic	r2, r3, #65536
 1702 09a8 7B68     		ldr	r3, [r7, #4]
 1703 09aa 1A62     		str	r2, [r3, #32]
 994:../src/stm32f30x_tim.c ****   
 995:../src/stm32f30x_tim.c ****   /* Get the TIMx CCER register value */
 996:../src/stm32f30x_tim.c ****   tmpccer = TIMx->CCER;
 1704              		.loc 1 996 0
 1705 09ac 7B68     		ldr	r3, [r7, #4]
 1706 09ae 1B6A     		ldr	r3, [r3, #32]
 1707 09b0 FB60     		str	r3, [r7, #12]
 997:../src/stm32f30x_tim.c ****   /* Get the TIMx CR2 register value */
 998:../src/stm32f30x_tim.c ****   tmpcr2 =  TIMx->CR2;
 1708              		.loc 1 998 0
 1709 09b2 7B68     		ldr	r3, [r7, #4]
 1710 09b4 5B68     		ldr	r3, [r3, #4]
 1711 09b6 7B61     		str	r3, [r7, #20]
 999:../src/stm32f30x_tim.c ****   
1000:../src/stm32f30x_tim.c ****   /* Get the TIMx CCMR3 register value */
1001:../src/stm32f30x_tim.c ****   tmpccmrx = TIMx->CCMR3;
 1712              		.loc 1 1001 0
 1713 09b8 7B68     		ldr	r3, [r7, #4]
 1714 09ba 5B6D     		ldr	r3, [r3, #84]
 1715 09bc 3B61     		str	r3, [r7, #16]
1002:../src/stm32f30x_tim.c ****   
1003:../src/stm32f30x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
1004:../src/stm32f30x_tim.c ****   tmpccmrx &= (uint32_t)~TIM_CCMR3_OC5M;
 1716              		.loc 1 1004 0
 1717 09be 3B69     		ldr	r3, [r7, #16]
 1718 09c0 23F07003 		bic	r3, r3, #112
 1719 09c4 3B61     		str	r3, [r7, #16]
1005:../src/stm32f30x_tim.c ****   
1006:../src/stm32f30x_tim.c ****   /* Select the Output Compare Mode */
1007:../src/stm32f30x_tim.c ****   tmpccmrx |= (uint32_t)(TIM_OCInitStruct->TIM_OCMode);
 1720              		.loc 1 1007 0
 1721 09c6 3B68     		ldr	r3, [r7, #0]
 1722 09c8 1B68     		ldr	r3, [r3, #0]
 1723 09ca 3A69     		ldr	r2, [r7, #16]
 1724 09cc 1343     		orrs	r3, r3, r2
 1725 09ce 3B61     		str	r3, [r7, #16]
1008:../src/stm32f30x_tim.c ****   
1009:../src/stm32f30x_tim.c ****   /* Reset the Output Polarity level */
1010:../src/stm32f30x_tim.c ****   tmpccer &= (uint32_t)~TIM_CCER_CC5P;
 1726              		.loc 1 1010 0
 1727 09d0 FB68     		ldr	r3, [r7, #12]
 1728 09d2 23F40033 		bic	r3, r3, #131072
 1729 09d6 FB60     		str	r3, [r7, #12]
1011:../src/stm32f30x_tim.c ****   /* Set the Output Compare Polarity */
1012:../src/stm32f30x_tim.c ****   tmpccer |= (uint32_t)((uint32_t)TIM_OCInitStruct->TIM_OCPolarity << 16);
 1730              		.loc 1 1012 0
 1731 09d8 3B68     		ldr	r3, [r7, #0]
 1732 09da 9B89     		ldrh	r3, [r3, #12]
 1733 09dc 4FEA0343 		lsl	r3, r3, #16
 1734 09e0 FA68     		ldr	r2, [r7, #12]
 1735 09e2 1343     		orrs	r3, r3, r2
 1736 09e4 FB60     		str	r3, [r7, #12]
1013:../src/stm32f30x_tim.c **** 
1014:../src/stm32f30x_tim.c ****   /* Set the Output State */
1015:../src/stm32f30x_tim.c ****   tmpccer |= (uint32_t)((uint32_t)TIM_OCInitStruct->TIM_OutputState << 16);
 1737              		.loc 1 1015 0
 1738 09e6 3B68     		ldr	r3, [r7, #0]
 1739 09e8 9B88     		ldrh	r3, [r3, #4]
 1740 09ea 4FEA0343 		lsl	r3, r3, #16
 1741 09ee FA68     		ldr	r2, [r7, #12]
 1742 09f0 1343     		orrs	r3, r3, r2
 1743 09f2 FB60     		str	r3, [r7, #12]
1016:../src/stm32f30x_tim.c ****   
1017:../src/stm32f30x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1744              		.loc 1 1017 0
 1745 09f4 7A68     		ldr	r2, [r7, #4]
 1746 09f6 4FF43053 		mov	r3, #11264
 1747 09fa C4F20103 		movt	r3, 16385
 1748 09fe 9A42     		cmp	r2, r3
 1749 0a00 06D0     		beq	.L57
 1750              		.loc 1 1017 0 is_stmt 0 discriminator 1
 1751 0a02 7A68     		ldr	r2, [r7, #4]
 1752 0a04 4FF45053 		mov	r3, #13312
 1753 0a08 C4F20103 		movt	r3, 16385
 1754 0a0c 9A42     		cmp	r2, r3
 1755 0a0e 0AD1     		bne	.L58
 1756              	.L57:
1018:../src/stm32f30x_tim.c ****   {
1019:../src/stm32f30x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
1020:../src/stm32f30x_tim.c ****     /* Reset the Output Compare IDLE State */
1021:../src/stm32f30x_tim.c ****     tmpcr2 &=(uint32_t) ~TIM_CR2_OIS5;
 1757              		.loc 1 1021 0 is_stmt 1
 1758 0a10 7B69     		ldr	r3, [r7, #20]
 1759 0a12 23F48033 		bic	r3, r3, #65536
 1760 0a16 7B61     		str	r3, [r7, #20]
1022:../src/stm32f30x_tim.c ****     /* Set the Output Idle state */
1023:../src/stm32f30x_tim.c ****     tmpcr2 |= (uint32_t)((uint32_t)TIM_OCInitStruct->TIM_OCIdleState << 16);
 1761              		.loc 1 1023 0
 1762 0a18 3B68     		ldr	r3, [r7, #0]
 1763 0a1a 1B8A     		ldrh	r3, [r3, #16]
 1764 0a1c 4FEA0343 		lsl	r3, r3, #16
 1765 0a20 7A69     		ldr	r2, [r7, #20]
 1766 0a22 1343     		orrs	r3, r3, r2
 1767 0a24 7B61     		str	r3, [r7, #20]
 1768              	.L58:
1024:../src/stm32f30x_tim.c ****   }
1025:../src/stm32f30x_tim.c ****   /* Write to TIMx CR2 */
1026:../src/stm32f30x_tim.c ****   TIMx->CR2 = tmpcr2;
 1769              		.loc 1 1026 0
 1770 0a26 7B68     		ldr	r3, [r7, #4]
 1771 0a28 7A69     		ldr	r2, [r7, #20]
 1772 0a2a 5A60     		str	r2, [r3, #4]
1027:../src/stm32f30x_tim.c ****   
1028:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR2 */  
1029:../src/stm32f30x_tim.c ****   TIMx->CCMR3 = tmpccmrx;
 1773              		.loc 1 1029 0
 1774 0a2c 7B68     		ldr	r3, [r7, #4]
 1775 0a2e 3A69     		ldr	r2, [r7, #16]
 1776 0a30 5A65     		str	r2, [r3, #84]
1030:../src/stm32f30x_tim.c ****     
1031:../src/stm32f30x_tim.c ****   /* Set the Capture Compare Register value */
1032:../src/stm32f30x_tim.c ****   TIMx->CCR5 = TIM_OCInitStruct->TIM_Pulse;
 1777              		.loc 1 1032 0
 1778 0a32 3B68     		ldr	r3, [r7, #0]
 1779 0a34 9A68     		ldr	r2, [r3, #8]
 1780 0a36 7B68     		ldr	r3, [r7, #4]
 1781 0a38 9A65     		str	r2, [r3, #88]
1033:../src/stm32f30x_tim.c ****   
1034:../src/stm32f30x_tim.c ****   /* Write to TIMx CCER */
1035:../src/stm32f30x_tim.c ****   TIMx->CCER = tmpccer;
 1782              		.loc 1 1035 0
 1783 0a3a 7B68     		ldr	r3, [r7, #4]
 1784 0a3c FA68     		ldr	r2, [r7, #12]
 1785 0a3e 1A62     		str	r2, [r3, #32]
1036:../src/stm32f30x_tim.c **** }
 1786              		.loc 1 1036 0
 1787 0a40 07F11C07 		add	r7, r7, #28
 1788 0a44 BD46     		mov	sp, r7
 1789 0a46 80BC     		pop	{r7}
 1790 0a48 7047     		bx	lr
 1791              		.cfi_endproc
 1792              	.LFE131:
 1794 0a4a 00BF     		.align	2
 1795              		.global	TIM_OC6Init
 1796              		.thumb
 1797              		.thumb_func
 1799              	TIM_OC6Init:
 1800              	.LFB132:
1037:../src/stm32f30x_tim.c **** 
1038:../src/stm32f30x_tim.c **** /**
1039:../src/stm32f30x_tim.c ****   * @brief  Initializes the TIMx Channel6 according to the specified parameters
1040:../src/stm32f30x_tim.c ****   *         in the TIM_OCInitStruct.
1041:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1042:../src/stm32f30x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
1043:../src/stm32f30x_tim.c ****   *         the configuration information for the specified TIM peripheral.
1044:../src/stm32f30x_tim.c ****   * @retval None
1045:../src/stm32f30x_tim.c ****   */
1046:../src/stm32f30x_tim.c **** void TIM_OC6Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
1047:../src/stm32f30x_tim.c **** {
 1801              		.loc 1 1047 0
 1802              		.cfi_startproc
 1803              		@ args = 0, pretend = 0, frame = 24
 1804              		@ frame_needed = 1, uses_anonymous_args = 0
 1805              		@ link register save eliminated.
 1806 0a4c 80B4     		push	{r7}
 1807              	.LCFI63:
 1808              		.cfi_def_cfa_offset 4
 1809              		.cfi_offset 7, -4
 1810 0a4e 87B0     		sub	sp, sp, #28
 1811              	.LCFI64:
 1812              		.cfi_def_cfa_offset 32
 1813 0a50 00AF     		add	r7, sp, #0
 1814              	.LCFI65:
 1815              		.cfi_def_cfa_register 7
 1816 0a52 7860     		str	r0, [r7, #4]
 1817 0a54 3960     		str	r1, [r7, #0]
1048:../src/stm32f30x_tim.c ****   uint32_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1818              		.loc 1 1048 0
 1819 0a56 4FF00003 		mov	r3, #0
 1820 0a5a 3B61     		str	r3, [r7, #16]
 1821 0a5c 4FF00003 		mov	r3, #0
 1822 0a60 FB60     		str	r3, [r7, #12]
 1823 0a62 4FF00003 		mov	r3, #0
 1824 0a66 7B61     		str	r3, [r7, #20]
1049:../src/stm32f30x_tim.c ****    
1050:../src/stm32f30x_tim.c ****   /* Check the parameters */
1051:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx)); 
1052:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
1053:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
1054:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
1055:../src/stm32f30x_tim.c **** 
1056:../src/stm32f30x_tim.c ****   /* Disable the Channel 5: Reset the CC5E Bit */
1057:../src/stm32f30x_tim.c ****   TIMx->CCER &= (uint32_t)~TIM_CCER_CC6E; /* to be verified*/
 1825              		.loc 1 1057 0
 1826 0a68 7B68     		ldr	r3, [r7, #4]
 1827 0a6a 1B6A     		ldr	r3, [r3, #32]
 1828 0a6c 23F48012 		bic	r2, r3, #1048576
 1829 0a70 7B68     		ldr	r3, [r7, #4]
 1830 0a72 1A62     		str	r2, [r3, #32]
1058:../src/stm32f30x_tim.c ****   
1059:../src/stm32f30x_tim.c ****   /* Get the TIMx CCER register value */
1060:../src/stm32f30x_tim.c ****   tmpccer = TIMx->CCER;
 1831              		.loc 1 1060 0
 1832 0a74 7B68     		ldr	r3, [r7, #4]
 1833 0a76 1B6A     		ldr	r3, [r3, #32]
 1834 0a78 FB60     		str	r3, [r7, #12]
1061:../src/stm32f30x_tim.c ****   /* Get the TIMx CR2 register value */
1062:../src/stm32f30x_tim.c ****   tmpcr2 =  TIMx->CR2;
 1835              		.loc 1 1062 0
 1836 0a7a 7B68     		ldr	r3, [r7, #4]
 1837 0a7c 5B68     		ldr	r3, [r3, #4]
 1838 0a7e 7B61     		str	r3, [r7, #20]
1063:../src/stm32f30x_tim.c ****   
1064:../src/stm32f30x_tim.c ****   /* Get the TIMx CCMR3 register value */
1065:../src/stm32f30x_tim.c ****   tmpccmrx = TIMx->CCMR3;
 1839              		.loc 1 1065 0
 1840 0a80 7B68     		ldr	r3, [r7, #4]
 1841 0a82 5B6D     		ldr	r3, [r3, #84]
 1842 0a84 3B61     		str	r3, [r7, #16]
1066:../src/stm32f30x_tim.c ****   
1067:../src/stm32f30x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
1068:../src/stm32f30x_tim.c ****   tmpccmrx &= (uint32_t)~TIM_CCMR3_OC6M;
 1843              		.loc 1 1068 0
 1844 0a86 3B69     		ldr	r3, [r7, #16]
 1845 0a88 23F4E043 		bic	r3, r3, #28672
 1846 0a8c 3B61     		str	r3, [r7, #16]
1069:../src/stm32f30x_tim.c ****   
1070:../src/stm32f30x_tim.c ****   /* Select the Output Compare Mode */
1071:../src/stm32f30x_tim.c ****   tmpccmrx |= (uint32_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1847              		.loc 1 1071 0
 1848 0a8e 3B68     		ldr	r3, [r7, #0]
 1849 0a90 1B68     		ldr	r3, [r3, #0]
 1850 0a92 4FEA0323 		lsl	r3, r3, #8
 1851 0a96 3A69     		ldr	r2, [r7, #16]
 1852 0a98 1343     		orrs	r3, r3, r2
 1853 0a9a 3B61     		str	r3, [r7, #16]
1072:../src/stm32f30x_tim.c ****   
1073:../src/stm32f30x_tim.c ****   /* Reset the Output Polarity level */
1074:../src/stm32f30x_tim.c ****   tmpccer &= (uint32_t)~TIM_CCER_CC6P;
 1854              		.loc 1 1074 0
 1855 0a9c FB68     		ldr	r3, [r7, #12]
 1856 0a9e 23F40013 		bic	r3, r3, #2097152
 1857 0aa2 FB60     		str	r3, [r7, #12]
1075:../src/stm32f30x_tim.c ****   /* Set the Output Compare Polarity */
1076:../src/stm32f30x_tim.c ****   tmpccer |= (uint32_t)((uint32_t)TIM_OCInitStruct->TIM_OCPolarity << 20);
 1858              		.loc 1 1076 0
 1859 0aa4 3B68     		ldr	r3, [r7, #0]
 1860 0aa6 9B89     		ldrh	r3, [r3, #12]
 1861 0aa8 4FEA0353 		lsl	r3, r3, #20
 1862 0aac FA68     		ldr	r2, [r7, #12]
 1863 0aae 1343     		orrs	r3, r3, r2
 1864 0ab0 FB60     		str	r3, [r7, #12]
1077:../src/stm32f30x_tim.c **** 
1078:../src/stm32f30x_tim.c ****   /* Set the Output State */
1079:../src/stm32f30x_tim.c ****   tmpccer |= (uint32_t)((uint32_t)TIM_OCInitStruct->TIM_OutputState << 20);
 1865              		.loc 1 1079 0
 1866 0ab2 3B68     		ldr	r3, [r7, #0]
 1867 0ab4 9B88     		ldrh	r3, [r3, #4]
 1868 0ab6 4FEA0353 		lsl	r3, r3, #20
 1869 0aba FA68     		ldr	r2, [r7, #12]
 1870 0abc 1343     		orrs	r3, r3, r2
 1871 0abe FB60     		str	r3, [r7, #12]
1080:../src/stm32f30x_tim.c ****   
1081:../src/stm32f30x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1872              		.loc 1 1081 0
 1873 0ac0 7A68     		ldr	r2, [r7, #4]
 1874 0ac2 4FF43053 		mov	r3, #11264
 1875 0ac6 C4F20103 		movt	r3, 16385
 1876 0aca 9A42     		cmp	r2, r3
 1877 0acc 06D0     		beq	.L60
 1878              		.loc 1 1081 0 is_stmt 0 discriminator 1
 1879 0ace 7A68     		ldr	r2, [r7, #4]
 1880 0ad0 4FF45053 		mov	r3, #13312
 1881 0ad4 C4F20103 		movt	r3, 16385
 1882 0ad8 9A42     		cmp	r2, r3
 1883 0ada 03D1     		bne	.L61
 1884              	.L60:
1082:../src/stm32f30x_tim.c ****   {
1083:../src/stm32f30x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
1084:../src/stm32f30x_tim.c ****     /* Reset the Output Compare IDLE State */
1085:../src/stm32f30x_tim.c ****     tmpcr2 &=(uint32_t) ~TIM_CR2_OIS6;
 1885              		.loc 1 1085 0 is_stmt 1
 1886 0adc 7B69     		ldr	r3, [r7, #20]
 1887 0ade 23F40033 		bic	r3, r3, #131072
 1888 0ae2 7B61     		str	r3, [r7, #20]
 1889              	.L61:
1086:../src/stm32f30x_tim.c ****     /* Set the Output Idle state */
1087:../src/stm32f30x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 18);
1088:../src/stm32f30x_tim.c ****   }
1089:../src/stm32f30x_tim.c ****   /* Write to TIMx CR2 */
1090:../src/stm32f30x_tim.c ****   TIMx->CR2 = tmpcr2;
 1890              		.loc 1 1090 0
 1891 0ae4 7B68     		ldr	r3, [r7, #4]
 1892 0ae6 7A69     		ldr	r2, [r7, #20]
 1893 0ae8 5A60     		str	r2, [r3, #4]
1091:../src/stm32f30x_tim.c ****   
1092:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR2 */  
1093:../src/stm32f30x_tim.c ****   TIMx->CCMR3 = tmpccmrx;
 1894              		.loc 1 1093 0
 1895 0aea 7B68     		ldr	r3, [r7, #4]
 1896 0aec 3A69     		ldr	r2, [r7, #16]
 1897 0aee 5A65     		str	r2, [r3, #84]
1094:../src/stm32f30x_tim.c ****     
1095:../src/stm32f30x_tim.c ****   /* Set the Capture Compare Register value */
1096:../src/stm32f30x_tim.c ****   TIMx->CCR6 = TIM_OCInitStruct->TIM_Pulse;
 1898              		.loc 1 1096 0
 1899 0af0 3B68     		ldr	r3, [r7, #0]
 1900 0af2 9A68     		ldr	r2, [r3, #8]
 1901 0af4 7B68     		ldr	r3, [r7, #4]
 1902 0af6 DA65     		str	r2, [r3, #92]
1097:../src/stm32f30x_tim.c ****   
1098:../src/stm32f30x_tim.c ****   /* Write to TIMx CCER */
1099:../src/stm32f30x_tim.c ****   TIMx->CCER = tmpccer;
 1903              		.loc 1 1099 0
 1904 0af8 7B68     		ldr	r3, [r7, #4]
 1905 0afa FA68     		ldr	r2, [r7, #12]
 1906 0afc 1A62     		str	r2, [r3, #32]
1100:../src/stm32f30x_tim.c **** }
 1907              		.loc 1 1100 0
 1908 0afe 07F11C07 		add	r7, r7, #28
 1909 0b02 BD46     		mov	sp, r7
 1910 0b04 80BC     		pop	{r7}
 1911 0b06 7047     		bx	lr
 1912              		.cfi_endproc
 1913              	.LFE132:
 1915              		.align	2
 1916              		.global	TIM_SelectGC5C1
 1917              		.thumb
 1918              		.thumb_func
 1920              	TIM_SelectGC5C1:
 1921              	.LFB133:
1101:../src/stm32f30x_tim.c **** 
1102:../src/stm32f30x_tim.c **** /**
1103:../src/stm32f30x_tim.c ****   * @brief  Selects the TIM Group Channel 5 and Channel 1, 
1104:../src/stm32f30x_tim.c ****             OC1REFC is the logical AND of OC1REFC and OC5REF.
1105:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
1106:../src/stm32f30x_tim.c ****   * @param  NewState: new state of the Commutation event.
1107:../src/stm32f30x_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
1108:../src/stm32f30x_tim.c ****   * @retval None
1109:../src/stm32f30x_tim.c ****   */
1110:../src/stm32f30x_tim.c **** void TIM_SelectGC5C1(TIM_TypeDef* TIMx, FunctionalState NewState)
1111:../src/stm32f30x_tim.c **** {
 1922              		.loc 1 1111 0
 1923              		.cfi_startproc
 1924              		@ args = 0, pretend = 0, frame = 8
 1925              		@ frame_needed = 1, uses_anonymous_args = 0
 1926              		@ link register save eliminated.
 1927 0b08 80B4     		push	{r7}
 1928              	.LCFI66:
 1929              		.cfi_def_cfa_offset 4
 1930              		.cfi_offset 7, -4
 1931 0b0a 83B0     		sub	sp, sp, #12
 1932              	.LCFI67:
 1933              		.cfi_def_cfa_offset 16
 1934 0b0c 00AF     		add	r7, sp, #0
 1935              	.LCFI68:
 1936              		.cfi_def_cfa_register 7
 1937 0b0e 7860     		str	r0, [r7, #4]
 1938 0b10 0B46     		mov	r3, r1
 1939 0b12 FB70     		strb	r3, [r7, #3]
1112:../src/stm32f30x_tim.c ****   /* Check the parameters */
1113:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1114:../src/stm32f30x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1115:../src/stm32f30x_tim.c **** 
1116:../src/stm32f30x_tim.c ****   if (NewState != DISABLE)
 1940              		.loc 1 1116 0
 1941 0b14 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1942 0b16 002B     		cmp	r3, #0
 1943 0b18 06D0     		beq	.L63
1117:../src/stm32f30x_tim.c ****   {
1118:../src/stm32f30x_tim.c ****     /* Set the GC5C1 Bit */
1119:../src/stm32f30x_tim.c ****     TIMx->CCR5 |= TIM_CCR5_GC5C1;
 1944              		.loc 1 1119 0
 1945 0b1a 7B68     		ldr	r3, [r7, #4]
 1946 0b1c 9B6D     		ldr	r3, [r3, #88]
 1947 0b1e 43F00052 		orr	r2, r3, #536870912
 1948 0b22 7B68     		ldr	r3, [r7, #4]
 1949 0b24 9A65     		str	r2, [r3, #88]
 1950 0b26 05E0     		b	.L62
 1951              	.L63:
1120:../src/stm32f30x_tim.c ****   }
1121:../src/stm32f30x_tim.c ****   else
1122:../src/stm32f30x_tim.c ****   {
1123:../src/stm32f30x_tim.c ****     /* Reset the GC5C1 Bit */
1124:../src/stm32f30x_tim.c ****     TIMx->CCR5 &= (uint32_t)~TIM_CCR5_GC5C1;
 1952              		.loc 1 1124 0
 1953 0b28 7B68     		ldr	r3, [r7, #4]
 1954 0b2a 9B6D     		ldr	r3, [r3, #88]
 1955 0b2c 23F00052 		bic	r2, r3, #536870912
 1956 0b30 7B68     		ldr	r3, [r7, #4]
 1957 0b32 9A65     		str	r2, [r3, #88]
 1958              	.L62:
1125:../src/stm32f30x_tim.c ****   }
1126:../src/stm32f30x_tim.c **** }
 1959              		.loc 1 1126 0
 1960 0b34 07F10C07 		add	r7, r7, #12
 1961 0b38 BD46     		mov	sp, r7
 1962 0b3a 80BC     		pop	{r7}
 1963 0b3c 7047     		bx	lr
 1964              		.cfi_endproc
 1965              	.LFE133:
 1967 0b3e 00BF     		.align	2
 1968              		.global	TIM_SelectGC5C2
 1969              		.thumb
 1970              		.thumb_func
 1972              	TIM_SelectGC5C2:
 1973              	.LFB134:
1127:../src/stm32f30x_tim.c **** 
1128:../src/stm32f30x_tim.c **** /**
1129:../src/stm32f30x_tim.c ****   * @brief  Selects the TIM Group Channel 5 and Channel 2, 
1130:../src/stm32f30x_tim.c ****             OC2REFC is the logical AND of OC2REFC and OC5REF.
1131:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
1132:../src/stm32f30x_tim.c ****   * @param  NewState: new state of the Commutation event.
1133:../src/stm32f30x_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
1134:../src/stm32f30x_tim.c ****   * @retval None
1135:../src/stm32f30x_tim.c ****   */
1136:../src/stm32f30x_tim.c **** void TIM_SelectGC5C2(TIM_TypeDef* TIMx, FunctionalState NewState)
1137:../src/stm32f30x_tim.c **** {
 1974              		.loc 1 1137 0
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 8
 1977              		@ frame_needed = 1, uses_anonymous_args = 0
 1978              		@ link register save eliminated.
 1979 0b40 80B4     		push	{r7}
 1980              	.LCFI69:
 1981              		.cfi_def_cfa_offset 4
 1982              		.cfi_offset 7, -4
 1983 0b42 83B0     		sub	sp, sp, #12
 1984              	.LCFI70:
 1985              		.cfi_def_cfa_offset 16
 1986 0b44 00AF     		add	r7, sp, #0
 1987              	.LCFI71:
 1988              		.cfi_def_cfa_register 7
 1989 0b46 7860     		str	r0, [r7, #4]
 1990 0b48 0B46     		mov	r3, r1
 1991 0b4a FB70     		strb	r3, [r7, #3]
1138:../src/stm32f30x_tim.c ****   /* Check the parameters */
1139:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1140:../src/stm32f30x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1141:../src/stm32f30x_tim.c **** 
1142:../src/stm32f30x_tim.c ****   if (NewState != DISABLE)
 1992              		.loc 1 1142 0
 1993 0b4c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1994 0b4e 002B     		cmp	r3, #0
 1995 0b50 06D0     		beq	.L66
1143:../src/stm32f30x_tim.c ****   {
1144:../src/stm32f30x_tim.c ****     /* Set the GC5C2 Bit */
1145:../src/stm32f30x_tim.c ****     TIMx->CCR5 |= TIM_CCR5_GC5C2;
 1996              		.loc 1 1145 0
 1997 0b52 7B68     		ldr	r3, [r7, #4]
 1998 0b54 9B6D     		ldr	r3, [r3, #88]
 1999 0b56 43F08042 		orr	r2, r3, #1073741824
 2000 0b5a 7B68     		ldr	r3, [r7, #4]
 2001 0b5c 9A65     		str	r2, [r3, #88]
 2002 0b5e 05E0     		b	.L65
 2003              	.L66:
1146:../src/stm32f30x_tim.c ****   }
1147:../src/stm32f30x_tim.c ****   else
1148:../src/stm32f30x_tim.c ****   {
1149:../src/stm32f30x_tim.c ****     /* Reset the GC5C2 Bit */
1150:../src/stm32f30x_tim.c ****     TIMx->CCR5 &= (uint32_t)~TIM_CCR5_GC5C2;
 2004              		.loc 1 1150 0
 2005 0b60 7B68     		ldr	r3, [r7, #4]
 2006 0b62 9B6D     		ldr	r3, [r3, #88]
 2007 0b64 23F08042 		bic	r2, r3, #1073741824
 2008 0b68 7B68     		ldr	r3, [r7, #4]
 2009 0b6a 9A65     		str	r2, [r3, #88]
 2010              	.L65:
1151:../src/stm32f30x_tim.c ****   }
1152:../src/stm32f30x_tim.c **** }
 2011              		.loc 1 1152 0
 2012 0b6c 07F10C07 		add	r7, r7, #12
 2013 0b70 BD46     		mov	sp, r7
 2014 0b72 80BC     		pop	{r7}
 2015 0b74 7047     		bx	lr
 2016              		.cfi_endproc
 2017              	.LFE134:
 2019 0b76 00BF     		.align	2
 2020              		.global	TIM_SelectGC5C3
 2021              		.thumb
 2022              		.thumb_func
 2024              	TIM_SelectGC5C3:
 2025              	.LFB135:
1153:../src/stm32f30x_tim.c **** 
1154:../src/stm32f30x_tim.c **** 
1155:../src/stm32f30x_tim.c **** /**
1156:../src/stm32f30x_tim.c ****   * @brief  Selects the TIM Group Channel 5 and Channel 3, 
1157:../src/stm32f30x_tim.c ****             OC3REFC is the logical AND of OC3REFC and OC5REF.
1158:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
1159:../src/stm32f30x_tim.c ****   * @param  NewState: new state of the Commutation event.
1160:../src/stm32f30x_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
1161:../src/stm32f30x_tim.c ****   * @retval None
1162:../src/stm32f30x_tim.c ****   */
1163:../src/stm32f30x_tim.c **** void TIM_SelectGC5C3(TIM_TypeDef* TIMx, FunctionalState NewState)
1164:../src/stm32f30x_tim.c **** {
 2026              		.loc 1 1164 0
 2027              		.cfi_startproc
 2028              		@ args = 0, pretend = 0, frame = 8
 2029              		@ frame_needed = 1, uses_anonymous_args = 0
 2030              		@ link register save eliminated.
 2031 0b78 80B4     		push	{r7}
 2032              	.LCFI72:
 2033              		.cfi_def_cfa_offset 4
 2034              		.cfi_offset 7, -4
 2035 0b7a 83B0     		sub	sp, sp, #12
 2036              	.LCFI73:
 2037              		.cfi_def_cfa_offset 16
 2038 0b7c 00AF     		add	r7, sp, #0
 2039              	.LCFI74:
 2040              		.cfi_def_cfa_register 7
 2041 0b7e 7860     		str	r0, [r7, #4]
 2042 0b80 0B46     		mov	r3, r1
 2043 0b82 FB70     		strb	r3, [r7, #3]
1165:../src/stm32f30x_tim.c ****   /* Check the parameters */
1166:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1167:../src/stm32f30x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1168:../src/stm32f30x_tim.c **** 
1169:../src/stm32f30x_tim.c ****   if (NewState != DISABLE)
 2044              		.loc 1 1169 0
 2045 0b84 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2046 0b86 002B     		cmp	r3, #0
 2047 0b88 06D0     		beq	.L69
1170:../src/stm32f30x_tim.c ****   {
1171:../src/stm32f30x_tim.c ****     /* Set the GC5C3 Bit */
1172:../src/stm32f30x_tim.c ****     TIMx->CCR5 |= TIM_CCR5_GC5C3;
 2048              		.loc 1 1172 0
 2049 0b8a 7B68     		ldr	r3, [r7, #4]
 2050 0b8c 9B6D     		ldr	r3, [r3, #88]
 2051 0b8e 43F00042 		orr	r2, r3, #-2147483648
 2052 0b92 7B68     		ldr	r3, [r7, #4]
 2053 0b94 9A65     		str	r2, [r3, #88]
 2054 0b96 05E0     		b	.L68
 2055              	.L69:
1173:../src/stm32f30x_tim.c ****   }
1174:../src/stm32f30x_tim.c ****   else
1175:../src/stm32f30x_tim.c ****   {
1176:../src/stm32f30x_tim.c ****     /* Reset the GC5C3 Bit */
1177:../src/stm32f30x_tim.c ****     TIMx->CCR5 &= (uint32_t)~TIM_CCR5_GC5C3;
 2056              		.loc 1 1177 0
 2057 0b98 7B68     		ldr	r3, [r7, #4]
 2058 0b9a 9B6D     		ldr	r3, [r3, #88]
 2059 0b9c 23F00042 		bic	r2, r3, #-2147483648
 2060 0ba0 7B68     		ldr	r3, [r7, #4]
 2061 0ba2 9A65     		str	r2, [r3, #88]
 2062              	.L68:
1178:../src/stm32f30x_tim.c ****   }
1179:../src/stm32f30x_tim.c **** }
 2063              		.loc 1 1179 0
 2064 0ba4 07F10C07 		add	r7, r7, #12
 2065 0ba8 BD46     		mov	sp, r7
 2066 0baa 80BC     		pop	{r7}
 2067 0bac 7047     		bx	lr
 2068              		.cfi_endproc
 2069              	.LFE135:
 2071 0bae 00BF     		.align	2
 2072              		.global	TIM_OCStructInit
 2073              		.thumb
 2074              		.thumb_func
 2076              	TIM_OCStructInit:
 2077              	.LFB136:
1180:../src/stm32f30x_tim.c **** 
1181:../src/stm32f30x_tim.c **** /**
1182:../src/stm32f30x_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
1183:../src/stm32f30x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure which will
1184:../src/stm32f30x_tim.c ****   *         be initialized.
1185:../src/stm32f30x_tim.c ****   * @retval None
1186:../src/stm32f30x_tim.c ****   */
1187:../src/stm32f30x_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
1188:../src/stm32f30x_tim.c **** {
 2078              		.loc 1 1188 0
 2079              		.cfi_startproc
 2080              		@ args = 0, pretend = 0, frame = 8
 2081              		@ frame_needed = 1, uses_anonymous_args = 0
 2082              		@ link register save eliminated.
 2083 0bb0 80B4     		push	{r7}
 2084              	.LCFI75:
 2085              		.cfi_def_cfa_offset 4
 2086              		.cfi_offset 7, -4
 2087 0bb2 83B0     		sub	sp, sp, #12
 2088              	.LCFI76:
 2089              		.cfi_def_cfa_offset 16
 2090 0bb4 00AF     		add	r7, sp, #0
 2091              	.LCFI77:
 2092              		.cfi_def_cfa_register 7
 2093 0bb6 7860     		str	r0, [r7, #4]
1189:../src/stm32f30x_tim.c ****   /* Set the default configuration */
1190:../src/stm32f30x_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 2094              		.loc 1 1190 0
 2095 0bb8 7B68     		ldr	r3, [r7, #4]
 2096 0bba 4FF00002 		mov	r2, #0
 2097 0bbe 1A60     		str	r2, [r3, #0]
1191:../src/stm32f30x_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 2098              		.loc 1 1191 0
 2099 0bc0 7B68     		ldr	r3, [r7, #4]
 2100 0bc2 4FF00002 		mov	r2, #0
 2101 0bc6 9A80     		strh	r2, [r3, #4]	@ movhi
1192:../src/stm32f30x_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 2102              		.loc 1 1192 0
 2103 0bc8 7B68     		ldr	r3, [r7, #4]
 2104 0bca 4FF00002 		mov	r2, #0
 2105 0bce DA80     		strh	r2, [r3, #6]	@ movhi
1193:../src/stm32f30x_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x00000000;
 2106              		.loc 1 1193 0
 2107 0bd0 7B68     		ldr	r3, [r7, #4]
 2108 0bd2 4FF00002 		mov	r2, #0
 2109 0bd6 9A60     		str	r2, [r3, #8]
1194:../src/stm32f30x_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 2110              		.loc 1 1194 0
 2111 0bd8 7B68     		ldr	r3, [r7, #4]
 2112 0bda 4FF00002 		mov	r2, #0
 2113 0bde 9A81     		strh	r2, [r3, #12]	@ movhi
1195:../src/stm32f30x_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 2114              		.loc 1 1195 0
 2115 0be0 7B68     		ldr	r3, [r7, #4]
 2116 0be2 4FF00002 		mov	r2, #0
 2117 0be6 DA81     		strh	r2, [r3, #14]	@ movhi
1196:../src/stm32f30x_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 2118              		.loc 1 1196 0
 2119 0be8 7B68     		ldr	r3, [r7, #4]
 2120 0bea 4FF00002 		mov	r2, #0
 2121 0bee 1A82     		strh	r2, [r3, #16]	@ movhi
1197:../src/stm32f30x_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 2122              		.loc 1 1197 0
 2123 0bf0 7B68     		ldr	r3, [r7, #4]
 2124 0bf2 4FF00002 		mov	r2, #0
 2125 0bf6 5A82     		strh	r2, [r3, #18]	@ movhi
1198:../src/stm32f30x_tim.c **** }
 2126              		.loc 1 1198 0
 2127 0bf8 07F10C07 		add	r7, r7, #12
 2128 0bfc BD46     		mov	sp, r7
 2129 0bfe 80BC     		pop	{r7}
 2130 0c00 7047     		bx	lr
 2131              		.cfi_endproc
 2132              	.LFE136:
 2134 0c02 00BF     		.align	2
 2135              		.global	TIM_SelectOCxM
 2136              		.thumb
 2137              		.thumb_func
 2139              	TIM_SelectOCxM:
 2140              	.LFB137:
1199:../src/stm32f30x_tim.c **** 
1200:../src/stm32f30x_tim.c **** /**
1201:../src/stm32f30x_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
1202:../src/stm32f30x_tim.c ****   * @note   This function disables the selected channel before changing the Output
1203:../src/stm32f30x_tim.c ****   *         Compare Mode. If needed, user has to enable this channel using
1204:../src/stm32f30x_tim.c ****   *         TIM_CCxCmd() and TIM_CCxNCmd() functions.
1205:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8, 15, 16 or 17 to select the TIM peripheral.
1206:../src/stm32f30x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1207:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1208:../src/stm32f30x_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1209:../src/stm32f30x_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1210:../src/stm32f30x_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1211:../src/stm32f30x_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
1212:../src/stm32f30x_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
1213:../src/stm32f30x_tim.c ****   *           This parameter can be one of the following values:
1214:../src/stm32f30x_tim.c ****   *            @arg TIM_OCMode_Timing
1215:../src/stm32f30x_tim.c ****   *            @arg TIM_OCMode_Active
1216:../src/stm32f30x_tim.c ****   *            @arg TIM_OCMode_Toggle
1217:../src/stm32f30x_tim.c ****   *            @arg TIM_OCMode_PWM1
1218:../src/stm32f30x_tim.c ****   *            @arg TIM_OCMode_PWM2
1219:../src/stm32f30x_tim.c ****   *            @arg TIM_ForcedAction_Active
1220:../src/stm32f30x_tim.c ****   *            @arg TIM_ForcedAction_InActive
1221:../src/stm32f30x_tim.c ****   *            @arg TIM_OCMode_Retrigerrable_OPM1
1222:../src/stm32f30x_tim.c ****   *            @arg TIM_OCMode_Retrigerrable_OPM2
1223:../src/stm32f30x_tim.c ****   *            @arg TIM_OCMode_Combined_PWM1
1224:../src/stm32f30x_tim.c ****   *            @arg TIM_OCMode_Combined_PWM2
1225:../src/stm32f30x_tim.c ****   *            @arg TIM_OCMode_Asymmetric_PWM1
1226:../src/stm32f30x_tim.c ****   *            @arg TIM_OCMode_Asymmetric_PWM2            
1227:../src/stm32f30x_tim.c ****   * @retval None
1228:../src/stm32f30x_tim.c ****   */
1229:../src/stm32f30x_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint32_t TIM_OCMode) /* to be updated*
1230:../src/stm32f30x_tim.c **** {
 2141              		.loc 1 1230 0
 2142              		.cfi_startproc
 2143              		@ args = 0, pretend = 0, frame = 24
 2144              		@ frame_needed = 1, uses_anonymous_args = 0
 2145              		@ link register save eliminated.
 2146 0c04 80B4     		push	{r7}
 2147              	.LCFI78:
 2148              		.cfi_def_cfa_offset 4
 2149              		.cfi_offset 7, -4
 2150 0c06 87B0     		sub	sp, sp, #28
 2151              	.LCFI79:
 2152              		.cfi_def_cfa_offset 32
 2153 0c08 00AF     		add	r7, sp, #0
 2154              	.LCFI80:
 2155              		.cfi_def_cfa_register 7
 2156 0c0a F860     		str	r0, [r7, #12]
 2157 0c0c 0B46     		mov	r3, r1
 2158 0c0e 7A60     		str	r2, [r7, #4]
 2159 0c10 7B81     		strh	r3, [r7, #10]	@ movhi
1231:../src/stm32f30x_tim.c ****   uint32_t tmp = 0;
 2160              		.loc 1 1231 0
 2161 0c12 4FF00003 		mov	r3, #0
 2162 0c16 7B61     		str	r3, [r7, #20]
1232:../src/stm32f30x_tim.c ****   uint16_t tmp1 = 0;
 2163              		.loc 1 1232 0
 2164 0c18 4FF00003 		mov	r3, #0
 2165 0c1c 7B82     		strh	r3, [r7, #18]	@ movhi
1233:../src/stm32f30x_tim.c **** 
1234:../src/stm32f30x_tim.c ****   /* Check the parameters */
1235:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1236:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1237:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
1238:../src/stm32f30x_tim.c **** 
1239:../src/stm32f30x_tim.c ****   tmp = (uint32_t) TIMx;
 2166              		.loc 1 1239 0
 2167 0c1e FB68     		ldr	r3, [r7, #12]
 2168 0c20 7B61     		str	r3, [r7, #20]
1240:../src/stm32f30x_tim.c ****   tmp += CCMR_OFFSET;
 2169              		.loc 1 1240 0
 2170 0c22 7B69     		ldr	r3, [r7, #20]
 2171 0c24 03F11803 		add	r3, r3, #24
 2172 0c28 7B61     		str	r3, [r7, #20]
1241:../src/stm32f30x_tim.c **** 
1242:../src/stm32f30x_tim.c ****   tmp1 = CCER_CCE_SET << (uint16_t)TIM_Channel;
 2173              		.loc 1 1242 0
 2174 0c2a 7B89     		ldrh	r3, [r7, #10]
 2175 0c2c 4FF00102 		mov	r2, #1
 2176 0c30 02FA03F3 		lsl	r3, r2, r3
 2177 0c34 7B82     		strh	r3, [r7, #18]	@ movhi
1243:../src/stm32f30x_tim.c **** 
1244:../src/stm32f30x_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
1245:../src/stm32f30x_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
 2178              		.loc 1 1245 0
 2179 0c36 FB68     		ldr	r3, [r7, #12]
 2180 0c38 1A6A     		ldr	r2, [r3, #32]
 2181 0c3a 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 2182 0c3c 6FEA0303 		mvn	r3, r3
 2183 0c40 9BB2     		uxth	r3, r3
 2184 0c42 1A40     		ands	r2, r2, r3
 2185 0c44 FB68     		ldr	r3, [r7, #12]
 2186 0c46 1A62     		str	r2, [r3, #32]
1246:../src/stm32f30x_tim.c **** 
1247:../src/stm32f30x_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
 2187              		.loc 1 1247 0
 2188 0c48 7B89     		ldrh	r3, [r7, #10]
 2189 0c4a 002B     		cmp	r3, #0
 2190 0c4c 02D0     		beq	.L73
 2191              		.loc 1 1247 0 is_stmt 0 discriminator 1
 2192 0c4e 7B89     		ldrh	r3, [r7, #10]
 2193 0c50 082B     		cmp	r3, #8
 2194 0c52 15D1     		bne	.L74
 2195              	.L73:
1248:../src/stm32f30x_tim.c ****   {
1249:../src/stm32f30x_tim.c ****     tmp += (TIM_Channel>>1);
 2196              		.loc 1 1249 0 is_stmt 1
 2197 0c54 7B89     		ldrh	r3, [r7, #10]
 2198 0c56 4FEA5303 		lsr	r3, r3, #1
 2199 0c5a 9BB2     		uxth	r3, r3
 2200 0c5c 7A69     		ldr	r2, [r7, #20]
 2201 0c5e D318     		adds	r3, r2, r3
 2202 0c60 7B61     		str	r3, [r7, #20]
1250:../src/stm32f30x_tim.c **** 
1251:../src/stm32f30x_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1252:../src/stm32f30x_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC13M_MASK;
 2203              		.loc 1 1252 0
 2204 0c62 7A69     		ldr	r2, [r7, #20]
 2205 0c64 7B69     		ldr	r3, [r7, #20]
 2206 0c66 1B68     		ldr	r3, [r3, #0]
 2207 0c68 23F48033 		bic	r3, r3, #65536
 2208 0c6c 23F07003 		bic	r3, r3, #112
 2209 0c70 1360     		str	r3, [r2, #0]
1253:../src/stm32f30x_tim.c ****    
1254:../src/stm32f30x_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1255:../src/stm32f30x_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
 2210              		.loc 1 1255 0
 2211 0c72 7B69     		ldr	r3, [r7, #20]
 2212 0c74 7A69     		ldr	r2, [r7, #20]
 2213 0c76 1168     		ldr	r1, [r2, #0]
 2214 0c78 7A68     		ldr	r2, [r7, #4]
 2215 0c7a 0A43     		orrs	r2, r2, r1
 2216 0c7c 1A60     		str	r2, [r3, #0]
 2217 0c7e 19E0     		b	.L72
 2218              	.L74:
1256:../src/stm32f30x_tim.c ****   }
1257:../src/stm32f30x_tim.c ****   else
1258:../src/stm32f30x_tim.c ****   {
1259:../src/stm32f30x_tim.c ****     tmp += (uint32_t)(TIM_Channel - (uint32_t)4)>> (uint32_t)1;
 2219              		.loc 1 1259 0
 2220 0c80 7B89     		ldrh	r3, [r7, #10]
 2221 0c82 A3F10403 		sub	r3, r3, #4
 2222 0c86 4FEA5303 		lsr	r3, r3, #1
 2223 0c8a 7A69     		ldr	r2, [r7, #20]
 2224 0c8c D318     		adds	r3, r2, r3
 2225 0c8e 7B61     		str	r3, [r7, #20]
1260:../src/stm32f30x_tim.c **** 
1261:../src/stm32f30x_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1262:../src/stm32f30x_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC24M_MASK;
 2226              		.loc 1 1262 0
 2227 0c90 7A69     		ldr	r2, [r7, #20]
 2228 0c92 7B69     		ldr	r3, [r7, #20]
 2229 0c94 1B68     		ldr	r3, [r3, #0]
 2230 0c96 23F08073 		bic	r3, r3, #16777216
 2231 0c9a 23F4E043 		bic	r3, r3, #28672
 2232 0c9e 1360     		str	r3, [r2, #0]
1263:../src/stm32f30x_tim.c ****     
1264:../src/stm32f30x_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1265:../src/stm32f30x_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
 2233              		.loc 1 1265 0
 2234 0ca0 7B69     		ldr	r3, [r7, #20]
 2235 0ca2 7A69     		ldr	r2, [r7, #20]
 2236 0ca4 1168     		ldr	r1, [r2, #0]
 2237 0ca6 7A68     		ldr	r2, [r7, #4]
 2238 0ca8 92B2     		uxth	r2, r2
 2239 0caa 4FEA0222 		lsl	r2, r2, #8
 2240 0cae 92B2     		uxth	r2, r2
 2241 0cb0 0A43     		orrs	r2, r2, r1
 2242 0cb2 1A60     		str	r2, [r3, #0]
 2243              	.L72:
1266:../src/stm32f30x_tim.c ****   }
1267:../src/stm32f30x_tim.c **** }
 2244              		.loc 1 1267 0
 2245 0cb4 07F11C07 		add	r7, r7, #28
 2246 0cb8 BD46     		mov	sp, r7
 2247 0cba 80BC     		pop	{r7}
 2248 0cbc 7047     		bx	lr
 2249              		.cfi_endproc
 2250              	.LFE137:
 2252 0cbe 00BF     		.align	2
 2253              		.global	TIM_SetCompare1
 2254              		.thumb
 2255              		.thumb_func
 2257              	TIM_SetCompare1:
 2258              	.LFB138:
1268:../src/stm32f30x_tim.c **** 
1269:../src/stm32f30x_tim.c **** /**
1270:../src/stm32f30x_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
1271:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8, 15, 16 or 17 to select the TIM peripheral.
1272:../src/stm32f30x_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
1273:../src/stm32f30x_tim.c ****   * @retval None
1274:../src/stm32f30x_tim.c ****   */
1275:../src/stm32f30x_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint32_t Compare1)
1276:../src/stm32f30x_tim.c **** {
 2259              		.loc 1 1276 0
 2260              		.cfi_startproc
 2261              		@ args = 0, pretend = 0, frame = 8
 2262              		@ frame_needed = 1, uses_anonymous_args = 0
 2263              		@ link register save eliminated.
 2264 0cc0 80B4     		push	{r7}
 2265              	.LCFI81:
 2266              		.cfi_def_cfa_offset 4
 2267              		.cfi_offset 7, -4
 2268 0cc2 83B0     		sub	sp, sp, #12
 2269              	.LCFI82:
 2270              		.cfi_def_cfa_offset 16
 2271 0cc4 00AF     		add	r7, sp, #0
 2272              	.LCFI83:
 2273              		.cfi_def_cfa_register 7
 2274 0cc6 7860     		str	r0, [r7, #4]
 2275 0cc8 3960     		str	r1, [r7, #0]
1277:../src/stm32f30x_tim.c ****   /* Check the parameters */
1278:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1279:../src/stm32f30x_tim.c **** 
1280:../src/stm32f30x_tim.c ****   /* Set the Capture Compare1 Register value */
1281:../src/stm32f30x_tim.c ****   TIMx->CCR1 = Compare1;
 2276              		.loc 1 1281 0
 2277 0cca 7B68     		ldr	r3, [r7, #4]
 2278 0ccc 3A68     		ldr	r2, [r7, #0]
 2279 0cce 5A63     		str	r2, [r3, #52]
1282:../src/stm32f30x_tim.c **** }
 2280              		.loc 1 1282 0
 2281 0cd0 07F10C07 		add	r7, r7, #12
 2282 0cd4 BD46     		mov	sp, r7
 2283 0cd6 80BC     		pop	{r7}
 2284 0cd8 7047     		bx	lr
 2285              		.cfi_endproc
 2286              	.LFE138:
 2288 0cda 00BF     		.align	2
 2289              		.global	TIM_SetCompare2
 2290              		.thumb
 2291              		.thumb_func
 2293              	TIM_SetCompare2:
 2294              	.LFB139:
1283:../src/stm32f30x_tim.c **** 
1284:../src/stm32f30x_tim.c **** /**
1285:../src/stm32f30x_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
1286:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8 or 15 to select the TIM 
1287:../src/stm32f30x_tim.c ****   *         peripheral.
1288:../src/stm32f30x_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
1289:../src/stm32f30x_tim.c ****   * @retval None
1290:../src/stm32f30x_tim.c ****   */
1291:../src/stm32f30x_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint32_t Compare2)
1292:../src/stm32f30x_tim.c **** {
 2295              		.loc 1 1292 0
 2296              		.cfi_startproc
 2297              		@ args = 0, pretend = 0, frame = 8
 2298              		@ frame_needed = 1, uses_anonymous_args = 0
 2299              		@ link register save eliminated.
 2300 0cdc 80B4     		push	{r7}
 2301              	.LCFI84:
 2302              		.cfi_def_cfa_offset 4
 2303              		.cfi_offset 7, -4
 2304 0cde 83B0     		sub	sp, sp, #12
 2305              	.LCFI85:
 2306              		.cfi_def_cfa_offset 16
 2307 0ce0 00AF     		add	r7, sp, #0
 2308              	.LCFI86:
 2309              		.cfi_def_cfa_register 7
 2310 0ce2 7860     		str	r0, [r7, #4]
 2311 0ce4 3960     		str	r1, [r7, #0]
1293:../src/stm32f30x_tim.c ****   /* Check the parameters */
1294:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1295:../src/stm32f30x_tim.c **** 
1296:../src/stm32f30x_tim.c ****   /* Set the Capture Compare2 Register value */
1297:../src/stm32f30x_tim.c ****   TIMx->CCR2 = Compare2;
 2312              		.loc 1 1297 0
 2313 0ce6 7B68     		ldr	r3, [r7, #4]
 2314 0ce8 3A68     		ldr	r2, [r7, #0]
 2315 0cea 9A63     		str	r2, [r3, #56]
1298:../src/stm32f30x_tim.c **** }
 2316              		.loc 1 1298 0
 2317 0cec 07F10C07 		add	r7, r7, #12
 2318 0cf0 BD46     		mov	sp, r7
 2319 0cf2 80BC     		pop	{r7}
 2320 0cf4 7047     		bx	lr
 2321              		.cfi_endproc
 2322              	.LFE139:
 2324 0cf6 00BF     		.align	2
 2325              		.global	TIM_SetCompare3
 2326              		.thumb
 2327              		.thumb_func
 2329              	TIM_SetCompare3:
 2330              	.LFB140:
1299:../src/stm32f30x_tim.c **** 
1300:../src/stm32f30x_tim.c **** /**
1301:../src/stm32f30x_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
1302:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1303:../src/stm32f30x_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
1304:../src/stm32f30x_tim.c ****   * @retval None
1305:../src/stm32f30x_tim.c ****   */
1306:../src/stm32f30x_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint32_t Compare3)
1307:../src/stm32f30x_tim.c **** {
 2331              		.loc 1 1307 0
 2332              		.cfi_startproc
 2333              		@ args = 0, pretend = 0, frame = 8
 2334              		@ frame_needed = 1, uses_anonymous_args = 0
 2335              		@ link register save eliminated.
 2336 0cf8 80B4     		push	{r7}
 2337              	.LCFI87:
 2338              		.cfi_def_cfa_offset 4
 2339              		.cfi_offset 7, -4
 2340 0cfa 83B0     		sub	sp, sp, #12
 2341              	.LCFI88:
 2342              		.cfi_def_cfa_offset 16
 2343 0cfc 00AF     		add	r7, sp, #0
 2344              	.LCFI89:
 2345              		.cfi_def_cfa_register 7
 2346 0cfe 7860     		str	r0, [r7, #4]
 2347 0d00 3960     		str	r1, [r7, #0]
1308:../src/stm32f30x_tim.c ****   /* Check the parameters */
1309:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1310:../src/stm32f30x_tim.c **** 
1311:../src/stm32f30x_tim.c ****   /* Set the Capture Compare3 Register value */
1312:../src/stm32f30x_tim.c ****   TIMx->CCR3 = Compare3;
 2348              		.loc 1 1312 0
 2349 0d02 7B68     		ldr	r3, [r7, #4]
 2350 0d04 3A68     		ldr	r2, [r7, #0]
 2351 0d06 DA63     		str	r2, [r3, #60]
1313:../src/stm32f30x_tim.c **** }
 2352              		.loc 1 1313 0
 2353 0d08 07F10C07 		add	r7, r7, #12
 2354 0d0c BD46     		mov	sp, r7
 2355 0d0e 80BC     		pop	{r7}
 2356 0d10 7047     		bx	lr
 2357              		.cfi_endproc
 2358              	.LFE140:
 2360 0d12 00BF     		.align	2
 2361              		.global	TIM_SetCompare4
 2362              		.thumb
 2363              		.thumb_func
 2365              	TIM_SetCompare4:
 2366              	.LFB141:
1314:../src/stm32f30x_tim.c **** 
1315:../src/stm32f30x_tim.c **** /**
1316:../src/stm32f30x_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
1317:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1318:../src/stm32f30x_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
1319:../src/stm32f30x_tim.c ****   * @retval None
1320:../src/stm32f30x_tim.c ****   */
1321:../src/stm32f30x_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint32_t Compare4)
1322:../src/stm32f30x_tim.c **** {
 2367              		.loc 1 1322 0
 2368              		.cfi_startproc
 2369              		@ args = 0, pretend = 0, frame = 8
 2370              		@ frame_needed = 1, uses_anonymous_args = 0
 2371              		@ link register save eliminated.
 2372 0d14 80B4     		push	{r7}
 2373              	.LCFI90:
 2374              		.cfi_def_cfa_offset 4
 2375              		.cfi_offset 7, -4
 2376 0d16 83B0     		sub	sp, sp, #12
 2377              	.LCFI91:
 2378              		.cfi_def_cfa_offset 16
 2379 0d18 00AF     		add	r7, sp, #0
 2380              	.LCFI92:
 2381              		.cfi_def_cfa_register 7
 2382 0d1a 7860     		str	r0, [r7, #4]
 2383 0d1c 3960     		str	r1, [r7, #0]
1323:../src/stm32f30x_tim.c ****   /* Check the parameters */
1324:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1325:../src/stm32f30x_tim.c **** 
1326:../src/stm32f30x_tim.c ****   /* Set the Capture Compare4 Register value */
1327:../src/stm32f30x_tim.c ****   TIMx->CCR4 = Compare4;
 2384              		.loc 1 1327 0
 2385 0d1e 7B68     		ldr	r3, [r7, #4]
 2386 0d20 3A68     		ldr	r2, [r7, #0]
 2387 0d22 1A64     		str	r2, [r3, #64]
1328:../src/stm32f30x_tim.c **** }
 2388              		.loc 1 1328 0
 2389 0d24 07F10C07 		add	r7, r7, #12
 2390 0d28 BD46     		mov	sp, r7
 2391 0d2a 80BC     		pop	{r7}
 2392 0d2c 7047     		bx	lr
 2393              		.cfi_endproc
 2394              	.LFE141:
 2396 0d2e 00BF     		.align	2
 2397              		.global	TIM_SetCompare5
 2398              		.thumb
 2399              		.thumb_func
 2401              	TIM_SetCompare5:
 2402              	.LFB142:
1329:../src/stm32f30x_tim.c **** 
1330:../src/stm32f30x_tim.c **** /**
1331:../src/stm32f30x_tim.c ****   * @brief  Sets the TIMx Capture Compare5 Register value
1332:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1333:../src/stm32f30x_tim.c ****   * @param  Compare5: specifies the Capture Compare5 register new value.
1334:../src/stm32f30x_tim.c ****   * @retval None
1335:../src/stm32f30x_tim.c ****   */
1336:../src/stm32f30x_tim.c **** void TIM_SetCompare5(TIM_TypeDef* TIMx, uint32_t Compare5)
1337:../src/stm32f30x_tim.c **** {
 2403              		.loc 1 1337 0
 2404              		.cfi_startproc
 2405              		@ args = 0, pretend = 0, frame = 8
 2406              		@ frame_needed = 1, uses_anonymous_args = 0
 2407              		@ link register save eliminated.
 2408 0d30 80B4     		push	{r7}
 2409              	.LCFI93:
 2410              		.cfi_def_cfa_offset 4
 2411              		.cfi_offset 7, -4
 2412 0d32 83B0     		sub	sp, sp, #12
 2413              	.LCFI94:
 2414              		.cfi_def_cfa_offset 16
 2415 0d34 00AF     		add	r7, sp, #0
 2416              	.LCFI95:
 2417              		.cfi_def_cfa_register 7
 2418 0d36 7860     		str	r0, [r7, #4]
 2419 0d38 3960     		str	r1, [r7, #0]
1338:../src/stm32f30x_tim.c ****   /* Check the parameters */
1339:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1340:../src/stm32f30x_tim.c **** 
1341:../src/stm32f30x_tim.c ****   /* Set the Capture Compare5 Register value */
1342:../src/stm32f30x_tim.c ****   TIMx->CCR5 = Compare5;
 2420              		.loc 1 1342 0
 2421 0d3a 7B68     		ldr	r3, [r7, #4]
 2422 0d3c 3A68     		ldr	r2, [r7, #0]
 2423 0d3e 9A65     		str	r2, [r3, #88]
1343:../src/stm32f30x_tim.c **** }
 2424              		.loc 1 1343 0
 2425 0d40 07F10C07 		add	r7, r7, #12
 2426 0d44 BD46     		mov	sp, r7
 2427 0d46 80BC     		pop	{r7}
 2428 0d48 7047     		bx	lr
 2429              		.cfi_endproc
 2430              	.LFE142:
 2432 0d4a 00BF     		.align	2
 2433              		.global	TIM_SetCompare6
 2434              		.thumb
 2435              		.thumb_func
 2437              	TIM_SetCompare6:
 2438              	.LFB143:
1344:../src/stm32f30x_tim.c **** 
1345:../src/stm32f30x_tim.c **** /**
1346:../src/stm32f30x_tim.c ****   * @brief  Sets the TIMx Capture Compare6 Register value
1347:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1348:../src/stm32f30x_tim.c ****   * @param  Compare6: specifies the Capture Compare5 register new value.
1349:../src/stm32f30x_tim.c ****   * @retval None
1350:../src/stm32f30x_tim.c ****   */
1351:../src/stm32f30x_tim.c **** void TIM_SetCompare6(TIM_TypeDef* TIMx, uint32_t Compare6)
1352:../src/stm32f30x_tim.c **** {
 2439              		.loc 1 1352 0
 2440              		.cfi_startproc
 2441              		@ args = 0, pretend = 0, frame = 8
 2442              		@ frame_needed = 1, uses_anonymous_args = 0
 2443              		@ link register save eliminated.
 2444 0d4c 80B4     		push	{r7}
 2445              	.LCFI96:
 2446              		.cfi_def_cfa_offset 4
 2447              		.cfi_offset 7, -4
 2448 0d4e 83B0     		sub	sp, sp, #12
 2449              	.LCFI97:
 2450              		.cfi_def_cfa_offset 16
 2451 0d50 00AF     		add	r7, sp, #0
 2452              	.LCFI98:
 2453              		.cfi_def_cfa_register 7
 2454 0d52 7860     		str	r0, [r7, #4]
 2455 0d54 3960     		str	r1, [r7, #0]
1353:../src/stm32f30x_tim.c ****   /* Check the parameters */
1354:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1355:../src/stm32f30x_tim.c **** 
1356:../src/stm32f30x_tim.c ****   /* Set the Capture Compare6 Register value */
1357:../src/stm32f30x_tim.c ****   TIMx->CCR6 = Compare6;
 2456              		.loc 1 1357 0
 2457 0d56 7B68     		ldr	r3, [r7, #4]
 2458 0d58 3A68     		ldr	r2, [r7, #0]
 2459 0d5a DA65     		str	r2, [r3, #92]
1358:../src/stm32f30x_tim.c **** }
 2460              		.loc 1 1358 0
 2461 0d5c 07F10C07 		add	r7, r7, #12
 2462 0d60 BD46     		mov	sp, r7
 2463 0d62 80BC     		pop	{r7}
 2464 0d64 7047     		bx	lr
 2465              		.cfi_endproc
 2466              	.LFE143:
 2468 0d66 00BF     		.align	2
 2469              		.global	TIM_ForcedOC1Config
 2470              		.thumb
 2471              		.thumb_func
 2473              	TIM_ForcedOC1Config:
 2474              	.LFB144:
1359:../src/stm32f30x_tim.c **** 
1360:../src/stm32f30x_tim.c **** /**
1361:../src/stm32f30x_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1362:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8, 15, 16 or 17 to select the TIM peripheral.
1363:../src/stm32f30x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1364:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1365:../src/stm32f30x_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC1REF
1366:../src/stm32f30x_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1367:../src/stm32f30x_tim.c ****   * @retval None
1368:../src/stm32f30x_tim.c ****   */
1369:../src/stm32f30x_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1370:../src/stm32f30x_tim.c **** {
 2475              		.loc 1 1370 0
 2476              		.cfi_startproc
 2477              		@ args = 0, pretend = 0, frame = 16
 2478              		@ frame_needed = 1, uses_anonymous_args = 0
 2479              		@ link register save eliminated.
 2480 0d68 80B4     		push	{r7}
 2481              	.LCFI99:
 2482              		.cfi_def_cfa_offset 4
 2483              		.cfi_offset 7, -4
 2484 0d6a 85B0     		sub	sp, sp, #20
 2485              	.LCFI100:
 2486              		.cfi_def_cfa_offset 24
 2487 0d6c 00AF     		add	r7, sp, #0
 2488              	.LCFI101:
 2489              		.cfi_def_cfa_register 7
 2490 0d6e 7860     		str	r0, [r7, #4]
 2491 0d70 0B46     		mov	r3, r1
 2492 0d72 7B80     		strh	r3, [r7, #2]	@ movhi
1371:../src/stm32f30x_tim.c ****   uint32_t tmpccmr1 = 0;
 2493              		.loc 1 1371 0
 2494 0d74 4FF00003 		mov	r3, #0
 2495 0d78 FB60     		str	r3, [r7, #12]
1372:../src/stm32f30x_tim.c **** 
1373:../src/stm32f30x_tim.c ****   /* Check the parameters */
1374:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1375:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1376:../src/stm32f30x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2496              		.loc 1 1376 0
 2497 0d7a 7B68     		ldr	r3, [r7, #4]
 2498 0d7c 9B69     		ldr	r3, [r3, #24]
 2499 0d7e FB60     		str	r3, [r7, #12]
1377:../src/stm32f30x_tim.c **** 
1378:../src/stm32f30x_tim.c ****   /* Reset the OC1M Bits */
1379:../src/stm32f30x_tim.c ****   tmpccmr1 &= (uint32_t)~TIM_CCMR1_OC1M;
 2500              		.loc 1 1379 0
 2501 0d80 FB68     		ldr	r3, [r7, #12]
 2502 0d82 23F48033 		bic	r3, r3, #65536
 2503 0d86 23F07003 		bic	r3, r3, #112
 2504 0d8a FB60     		str	r3, [r7, #12]
1380:../src/stm32f30x_tim.c **** 
1381:../src/stm32f30x_tim.c ****   /* Configure The Forced output Mode */
1382:../src/stm32f30x_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
 2505              		.loc 1 1382 0
 2506 0d8c 7B88     		ldrh	r3, [r7, #2]
 2507 0d8e FA68     		ldr	r2, [r7, #12]
 2508 0d90 1343     		orrs	r3, r3, r2
 2509 0d92 FB60     		str	r3, [r7, #12]
1383:../src/stm32f30x_tim.c **** 
1384:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR1 register */
1385:../src/stm32f30x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2510              		.loc 1 1385 0
 2511 0d94 7B68     		ldr	r3, [r7, #4]
 2512 0d96 FA68     		ldr	r2, [r7, #12]
 2513 0d98 9A61     		str	r2, [r3, #24]
1386:../src/stm32f30x_tim.c **** }
 2514              		.loc 1 1386 0
 2515 0d9a 07F11407 		add	r7, r7, #20
 2516 0d9e BD46     		mov	sp, r7
 2517 0da0 80BC     		pop	{r7}
 2518 0da2 7047     		bx	lr
 2519              		.cfi_endproc
 2520              	.LFE144:
 2522              		.align	2
 2523              		.global	TIM_ForcedOC2Config
 2524              		.thumb
 2525              		.thumb_func
 2527              	TIM_ForcedOC2Config:
 2528              	.LFB145:
1387:../src/stm32f30x_tim.c **** 
1388:../src/stm32f30x_tim.c **** /**
1389:../src/stm32f30x_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1390:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be   1, 2, 3, 4, 8 or 15 to select the TIM 
1391:../src/stm32f30x_tim.c ****   *         peripheral.
1392:../src/stm32f30x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1393:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1394:../src/stm32f30x_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC2REF
1395:../src/stm32f30x_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1396:../src/stm32f30x_tim.c ****   * @retval None
1397:../src/stm32f30x_tim.c ****   */
1398:../src/stm32f30x_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1399:../src/stm32f30x_tim.c **** {
 2529              		.loc 1 1399 0
 2530              		.cfi_startproc
 2531              		@ args = 0, pretend = 0, frame = 16
 2532              		@ frame_needed = 1, uses_anonymous_args = 0
 2533              		@ link register save eliminated.
 2534 0da4 80B4     		push	{r7}
 2535              	.LCFI102:
 2536              		.cfi_def_cfa_offset 4
 2537              		.cfi_offset 7, -4
 2538 0da6 85B0     		sub	sp, sp, #20
 2539              	.LCFI103:
 2540              		.cfi_def_cfa_offset 24
 2541 0da8 00AF     		add	r7, sp, #0
 2542              	.LCFI104:
 2543              		.cfi_def_cfa_register 7
 2544 0daa 7860     		str	r0, [r7, #4]
 2545 0dac 0B46     		mov	r3, r1
 2546 0dae 7B80     		strh	r3, [r7, #2]	@ movhi
1400:../src/stm32f30x_tim.c ****   uint32_t tmpccmr1 = 0;
 2547              		.loc 1 1400 0
 2548 0db0 4FF00003 		mov	r3, #0
 2549 0db4 FB60     		str	r3, [r7, #12]
1401:../src/stm32f30x_tim.c **** 
1402:../src/stm32f30x_tim.c ****   /* Check the parameters */
1403:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1404:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1405:../src/stm32f30x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2550              		.loc 1 1405 0
 2551 0db6 7B68     		ldr	r3, [r7, #4]
 2552 0db8 9B69     		ldr	r3, [r3, #24]
 2553 0dba FB60     		str	r3, [r7, #12]
1406:../src/stm32f30x_tim.c **** 
1407:../src/stm32f30x_tim.c ****   /* Reset the OC2M Bits */
1408:../src/stm32f30x_tim.c ****   tmpccmr1 &= (uint32_t)~TIM_CCMR1_OC2M;
 2554              		.loc 1 1408 0
 2555 0dbc FB68     		ldr	r3, [r7, #12]
 2556 0dbe 23F08073 		bic	r3, r3, #16777216
 2557 0dc2 23F4E043 		bic	r3, r3, #28672
 2558 0dc6 FB60     		str	r3, [r7, #12]
1409:../src/stm32f30x_tim.c **** 
1410:../src/stm32f30x_tim.c ****   /* Configure The Forced output Mode */
1411:../src/stm32f30x_tim.c ****   tmpccmr1 |= ((uint32_t)TIM_ForcedAction << 8);
 2559              		.loc 1 1411 0
 2560 0dc8 7B88     		ldrh	r3, [r7, #2]
 2561 0dca 4FEA0323 		lsl	r3, r3, #8
 2562 0dce FA68     		ldr	r2, [r7, #12]
 2563 0dd0 1343     		orrs	r3, r3, r2
 2564 0dd2 FB60     		str	r3, [r7, #12]
1412:../src/stm32f30x_tim.c **** 
1413:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR1 register */
1414:../src/stm32f30x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2565              		.loc 1 1414 0
 2566 0dd4 7B68     		ldr	r3, [r7, #4]
 2567 0dd6 FA68     		ldr	r2, [r7, #12]
 2568 0dd8 9A61     		str	r2, [r3, #24]
1415:../src/stm32f30x_tim.c **** }
 2569              		.loc 1 1415 0
 2570 0dda 07F11407 		add	r7, r7, #20
 2571 0dde BD46     		mov	sp, r7
 2572 0de0 80BC     		pop	{r7}
 2573 0de2 7047     		bx	lr
 2574              		.cfi_endproc
 2575              	.LFE145:
 2577              		.align	2
 2578              		.global	TIM_ForcedOC3Config
 2579              		.thumb
 2580              		.thumb_func
 2582              	TIM_ForcedOC3Config:
 2583              	.LFB146:
1416:../src/stm32f30x_tim.c **** 
1417:../src/stm32f30x_tim.c **** /**
1418:../src/stm32f30x_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1419:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4 or 8 to select the TIM peripheral.
1420:../src/stm32f30x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1421:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1422:../src/stm32f30x_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC3REF
1423:../src/stm32f30x_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1424:../src/stm32f30x_tim.c ****   * @retval None
1425:../src/stm32f30x_tim.c ****   */
1426:../src/stm32f30x_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1427:../src/stm32f30x_tim.c **** {
 2584              		.loc 1 1427 0
 2585              		.cfi_startproc
 2586              		@ args = 0, pretend = 0, frame = 16
 2587              		@ frame_needed = 1, uses_anonymous_args = 0
 2588              		@ link register save eliminated.
 2589 0de4 80B4     		push	{r7}
 2590              	.LCFI105:
 2591              		.cfi_def_cfa_offset 4
 2592              		.cfi_offset 7, -4
 2593 0de6 85B0     		sub	sp, sp, #20
 2594              	.LCFI106:
 2595              		.cfi_def_cfa_offset 24
 2596 0de8 00AF     		add	r7, sp, #0
 2597              	.LCFI107:
 2598              		.cfi_def_cfa_register 7
 2599 0dea 7860     		str	r0, [r7, #4]
 2600 0dec 0B46     		mov	r3, r1
 2601 0dee 7B80     		strh	r3, [r7, #2]	@ movhi
1428:../src/stm32f30x_tim.c ****   uint32_t tmpccmr2 = 0;
 2602              		.loc 1 1428 0
 2603 0df0 4FF00003 		mov	r3, #0
 2604 0df4 FB60     		str	r3, [r7, #12]
1429:../src/stm32f30x_tim.c **** 
1430:../src/stm32f30x_tim.c ****   /* Check the parameters */
1431:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1432:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1433:../src/stm32f30x_tim.c **** 
1434:../src/stm32f30x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2605              		.loc 1 1434 0
 2606 0df6 7B68     		ldr	r3, [r7, #4]
 2607 0df8 DB69     		ldr	r3, [r3, #28]
 2608 0dfa FB60     		str	r3, [r7, #12]
1435:../src/stm32f30x_tim.c **** 
1436:../src/stm32f30x_tim.c ****   /* Reset the OC1M Bits */
1437:../src/stm32f30x_tim.c ****   tmpccmr2 &= (uint32_t)~TIM_CCMR2_OC3M;
 2609              		.loc 1 1437 0
 2610 0dfc FB68     		ldr	r3, [r7, #12]
 2611 0dfe 23F07003 		bic	r3, r3, #112
 2612 0e02 FB60     		str	r3, [r7, #12]
1438:../src/stm32f30x_tim.c **** 
1439:../src/stm32f30x_tim.c ****   /* Configure The Forced output Mode */
1440:../src/stm32f30x_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
 2613              		.loc 1 1440 0
 2614 0e04 7B88     		ldrh	r3, [r7, #2]
 2615 0e06 FA68     		ldr	r2, [r7, #12]
 2616 0e08 1343     		orrs	r3, r3, r2
 2617 0e0a FB60     		str	r3, [r7, #12]
1441:../src/stm32f30x_tim.c **** 
1442:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR2 register */
1443:../src/stm32f30x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2618              		.loc 1 1443 0
 2619 0e0c 7B68     		ldr	r3, [r7, #4]
 2620 0e0e FA68     		ldr	r2, [r7, #12]
 2621 0e10 DA61     		str	r2, [r3, #28]
1444:../src/stm32f30x_tim.c **** }
 2622              		.loc 1 1444 0
 2623 0e12 07F11407 		add	r7, r7, #20
 2624 0e16 BD46     		mov	sp, r7
 2625 0e18 80BC     		pop	{r7}
 2626 0e1a 7047     		bx	lr
 2627              		.cfi_endproc
 2628              	.LFE146:
 2630              		.align	2
 2631              		.global	TIM_ForcedOC4Config
 2632              		.thumb
 2633              		.thumb_func
 2635              	TIM_ForcedOC4Config:
 2636              	.LFB147:
1445:../src/stm32f30x_tim.c **** 
1446:../src/stm32f30x_tim.c **** /**
1447:../src/stm32f30x_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1448:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4 or 8 to select the TIM peripheral.
1449:../src/stm32f30x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1450:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1451:../src/stm32f30x_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC4REF
1452:../src/stm32f30x_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1453:../src/stm32f30x_tim.c ****   * @retval None
1454:../src/stm32f30x_tim.c ****   */
1455:../src/stm32f30x_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1456:../src/stm32f30x_tim.c **** {
 2637              		.loc 1 1456 0
 2638              		.cfi_startproc
 2639              		@ args = 0, pretend = 0, frame = 16
 2640              		@ frame_needed = 1, uses_anonymous_args = 0
 2641              		@ link register save eliminated.
 2642 0e1c 80B4     		push	{r7}
 2643              	.LCFI108:
 2644              		.cfi_def_cfa_offset 4
 2645              		.cfi_offset 7, -4
 2646 0e1e 85B0     		sub	sp, sp, #20
 2647              	.LCFI109:
 2648              		.cfi_def_cfa_offset 24
 2649 0e20 00AF     		add	r7, sp, #0
 2650              	.LCFI110:
 2651              		.cfi_def_cfa_register 7
 2652 0e22 7860     		str	r0, [r7, #4]
 2653 0e24 0B46     		mov	r3, r1
 2654 0e26 7B80     		strh	r3, [r7, #2]	@ movhi
1457:../src/stm32f30x_tim.c ****   uint32_t tmpccmr2 = 0;
 2655              		.loc 1 1457 0
 2656 0e28 4FF00003 		mov	r3, #0
 2657 0e2c FB60     		str	r3, [r7, #12]
1458:../src/stm32f30x_tim.c **** 
1459:../src/stm32f30x_tim.c ****   /* Check the parameters */
1460:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1461:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1462:../src/stm32f30x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2658              		.loc 1 1462 0
 2659 0e2e 7B68     		ldr	r3, [r7, #4]
 2660 0e30 DB69     		ldr	r3, [r3, #28]
 2661 0e32 FB60     		str	r3, [r7, #12]
1463:../src/stm32f30x_tim.c **** 
1464:../src/stm32f30x_tim.c ****   /* Reset the OC2M Bits */
1465:../src/stm32f30x_tim.c ****   tmpccmr2 &= (uint32_t)~TIM_CCMR2_OC4M;
 2662              		.loc 1 1465 0
 2663 0e34 FB68     		ldr	r3, [r7, #12]
 2664 0e36 23F4E043 		bic	r3, r3, #28672
 2665 0e3a FB60     		str	r3, [r7, #12]
1466:../src/stm32f30x_tim.c **** 
1467:../src/stm32f30x_tim.c ****   /* Configure The Forced output Mode */
1468:../src/stm32f30x_tim.c ****   tmpccmr2 |= ((uint32_t)TIM_ForcedAction << 8);
 2666              		.loc 1 1468 0
 2667 0e3c 7B88     		ldrh	r3, [r7, #2]
 2668 0e3e 4FEA0323 		lsl	r3, r3, #8
 2669 0e42 FA68     		ldr	r2, [r7, #12]
 2670 0e44 1343     		orrs	r3, r3, r2
 2671 0e46 FB60     		str	r3, [r7, #12]
1469:../src/stm32f30x_tim.c **** 
1470:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR2 register */
1471:../src/stm32f30x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2672              		.loc 1 1471 0
 2673 0e48 7B68     		ldr	r3, [r7, #4]
 2674 0e4a FA68     		ldr	r2, [r7, #12]
 2675 0e4c DA61     		str	r2, [r3, #28]
1472:../src/stm32f30x_tim.c **** }
 2676              		.loc 1 1472 0
 2677 0e4e 07F11407 		add	r7, r7, #20
 2678 0e52 BD46     		mov	sp, r7
 2679 0e54 80BC     		pop	{r7}
 2680 0e56 7047     		bx	lr
 2681              		.cfi_endproc
 2682              	.LFE147:
 2684              		.align	2
 2685              		.global	TIM_ForcedOC5Config
 2686              		.thumb
 2687              		.thumb_func
 2689              	TIM_ForcedOC5Config:
 2690              	.LFB148:
1473:../src/stm32f30x_tim.c **** 
1474:../src/stm32f30x_tim.c **** /**
1475:../src/stm32f30x_tim.c ****   * @brief  Forces the TIMx output 5 waveform to active or inactive level.
1476:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM peripheral.
1477:../src/stm32f30x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1478:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1479:../src/stm32f30x_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC5REF
1480:../src/stm32f30x_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC5REF.
1481:../src/stm32f30x_tim.c ****   * @retval None
1482:../src/stm32f30x_tim.c ****   */
1483:../src/stm32f30x_tim.c **** void TIM_ForcedOC5Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1484:../src/stm32f30x_tim.c **** {
 2691              		.loc 1 1484 0
 2692              		.cfi_startproc
 2693              		@ args = 0, pretend = 0, frame = 16
 2694              		@ frame_needed = 1, uses_anonymous_args = 0
 2695              		@ link register save eliminated.
 2696 0e58 80B4     		push	{r7}
 2697              	.LCFI111:
 2698              		.cfi_def_cfa_offset 4
 2699              		.cfi_offset 7, -4
 2700 0e5a 85B0     		sub	sp, sp, #20
 2701              	.LCFI112:
 2702              		.cfi_def_cfa_offset 24
 2703 0e5c 00AF     		add	r7, sp, #0
 2704              	.LCFI113:
 2705              		.cfi_def_cfa_register 7
 2706 0e5e 7860     		str	r0, [r7, #4]
 2707 0e60 0B46     		mov	r3, r1
 2708 0e62 7B80     		strh	r3, [r7, #2]	@ movhi
1485:../src/stm32f30x_tim.c ****   uint32_t tmpccmr3 = 0;
 2709              		.loc 1 1485 0
 2710 0e64 4FF00003 		mov	r3, #0
 2711 0e68 FB60     		str	r3, [r7, #12]
1486:../src/stm32f30x_tim.c **** 
1487:../src/stm32f30x_tim.c ****   /* Check the parameters */
1488:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1489:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1490:../src/stm32f30x_tim.c ****   tmpccmr3 = TIMx->CCMR3;
 2712              		.loc 1 1490 0
 2713 0e6a 7B68     		ldr	r3, [r7, #4]
 2714 0e6c 5B6D     		ldr	r3, [r3, #84]
 2715 0e6e FB60     		str	r3, [r7, #12]
1491:../src/stm32f30x_tim.c **** 
1492:../src/stm32f30x_tim.c ****   /* Reset the OC5M Bits */
1493:../src/stm32f30x_tim.c ****   tmpccmr3 &= (uint32_t)~TIM_CCMR3_OC5M;
 2716              		.loc 1 1493 0
 2717 0e70 FB68     		ldr	r3, [r7, #12]
 2718 0e72 23F07003 		bic	r3, r3, #112
 2719 0e76 FB60     		str	r3, [r7, #12]
1494:../src/stm32f30x_tim.c **** 
1495:../src/stm32f30x_tim.c ****   /* Configure The Forced output Mode */
1496:../src/stm32f30x_tim.c ****   tmpccmr3 |= (uint32_t)(TIM_ForcedAction);
 2720              		.loc 1 1496 0
 2721 0e78 7B88     		ldrh	r3, [r7, #2]
 2722 0e7a FA68     		ldr	r2, [r7, #12]
 2723 0e7c 1343     		orrs	r3, r3, r2
 2724 0e7e FB60     		str	r3, [r7, #12]
1497:../src/stm32f30x_tim.c **** 
1498:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR3 register */
1499:../src/stm32f30x_tim.c ****   TIMx->CCMR3 = tmpccmr3;
 2725              		.loc 1 1499 0
 2726 0e80 7B68     		ldr	r3, [r7, #4]
 2727 0e82 FA68     		ldr	r2, [r7, #12]
 2728 0e84 5A65     		str	r2, [r3, #84]
1500:../src/stm32f30x_tim.c **** }
 2729              		.loc 1 1500 0
 2730 0e86 07F11407 		add	r7, r7, #20
 2731 0e8a BD46     		mov	sp, r7
 2732 0e8c 80BC     		pop	{r7}
 2733 0e8e 7047     		bx	lr
 2734              		.cfi_endproc
 2735              	.LFE148:
 2737              		.align	2
 2738              		.global	TIM_ForcedOC6Config
 2739              		.thumb
 2740              		.thumb_func
 2742              	TIM_ForcedOC6Config:
 2743              	.LFB149:
1501:../src/stm32f30x_tim.c **** 
1502:../src/stm32f30x_tim.c **** /**
1503:../src/stm32f30x_tim.c ****   * @brief  Forces the TIMx output 6 waveform to active or inactive level.
1504:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1505:../src/stm32f30x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1506:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1507:../src/stm32f30x_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC5REF
1508:../src/stm32f30x_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC5REF.
1509:../src/stm32f30x_tim.c ****   * @retval None
1510:../src/stm32f30x_tim.c ****   */
1511:../src/stm32f30x_tim.c **** void TIM_ForcedOC6Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1512:../src/stm32f30x_tim.c **** {
 2744              		.loc 1 1512 0
 2745              		.cfi_startproc
 2746              		@ args = 0, pretend = 0, frame = 16
 2747              		@ frame_needed = 1, uses_anonymous_args = 0
 2748              		@ link register save eliminated.
 2749 0e90 80B4     		push	{r7}
 2750              	.LCFI114:
 2751              		.cfi_def_cfa_offset 4
 2752              		.cfi_offset 7, -4
 2753 0e92 85B0     		sub	sp, sp, #20
 2754              	.LCFI115:
 2755              		.cfi_def_cfa_offset 24
 2756 0e94 00AF     		add	r7, sp, #0
 2757              	.LCFI116:
 2758              		.cfi_def_cfa_register 7
 2759 0e96 7860     		str	r0, [r7, #4]
 2760 0e98 0B46     		mov	r3, r1
 2761 0e9a 7B80     		strh	r3, [r7, #2]	@ movhi
1513:../src/stm32f30x_tim.c ****   uint32_t tmpccmr3 = 0;
 2762              		.loc 1 1513 0
 2763 0e9c 4FF00003 		mov	r3, #0
 2764 0ea0 FB60     		str	r3, [r7, #12]
1514:../src/stm32f30x_tim.c **** 
1515:../src/stm32f30x_tim.c ****   /* Check the parameters */
1516:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1517:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1518:../src/stm32f30x_tim.c ****   tmpccmr3 = TIMx->CCMR3;
 2765              		.loc 1 1518 0
 2766 0ea2 7B68     		ldr	r3, [r7, #4]
 2767 0ea4 5B6D     		ldr	r3, [r3, #84]
 2768 0ea6 FB60     		str	r3, [r7, #12]
1519:../src/stm32f30x_tim.c **** 
1520:../src/stm32f30x_tim.c ****   /* Reset the OC6M Bits */
1521:../src/stm32f30x_tim.c ****   tmpccmr3 &= (uint32_t)~TIM_CCMR3_OC6M;
 2769              		.loc 1 1521 0
 2770 0ea8 FB68     		ldr	r3, [r7, #12]
 2771 0eaa 23F4E043 		bic	r3, r3, #28672
 2772 0eae FB60     		str	r3, [r7, #12]
1522:../src/stm32f30x_tim.c **** 
1523:../src/stm32f30x_tim.c ****   /* Configure The Forced output Mode */
1524:../src/stm32f30x_tim.c ****   tmpccmr3 |= ((uint32_t)TIM_ForcedAction << 8);
 2773              		.loc 1 1524 0
 2774 0eb0 7B88     		ldrh	r3, [r7, #2]
 2775 0eb2 4FEA0323 		lsl	r3, r3, #8
 2776 0eb6 FA68     		ldr	r2, [r7, #12]
 2777 0eb8 1343     		orrs	r3, r3, r2
 2778 0eba FB60     		str	r3, [r7, #12]
1525:../src/stm32f30x_tim.c **** 
1526:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR3 register */
1527:../src/stm32f30x_tim.c ****   TIMx->CCMR3 = tmpccmr3;
 2779              		.loc 1 1527 0
 2780 0ebc 7B68     		ldr	r3, [r7, #4]
 2781 0ebe FA68     		ldr	r2, [r7, #12]
 2782 0ec0 5A65     		str	r2, [r3, #84]
1528:../src/stm32f30x_tim.c **** }
 2783              		.loc 1 1528 0
 2784 0ec2 07F11407 		add	r7, r7, #20
 2785 0ec6 BD46     		mov	sp, r7
 2786 0ec8 80BC     		pop	{r7}
 2787 0eca 7047     		bx	lr
 2788              		.cfi_endproc
 2789              	.LFE149:
 2791              		.align	2
 2792              		.global	TIM_OC1PreloadConfig
 2793              		.thumb
 2794              		.thumb_func
 2796              	TIM_OC1PreloadConfig:
 2797              	.LFB150:
1529:../src/stm32f30x_tim.c **** 
1530:../src/stm32f30x_tim.c **** /**
1531:../src/stm32f30x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1532:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8, 15, 16 or 17 to select the TIM peripheral.
1533:../src/stm32f30x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1534:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1535:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPreload_Enable
1536:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPreload_Disable
1537:../src/stm32f30x_tim.c ****   * @retval None
1538:../src/stm32f30x_tim.c ****   */
1539:../src/stm32f30x_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1540:../src/stm32f30x_tim.c **** {
 2798              		.loc 1 1540 0
 2799              		.cfi_startproc
 2800              		@ args = 0, pretend = 0, frame = 16
 2801              		@ frame_needed = 1, uses_anonymous_args = 0
 2802              		@ link register save eliminated.
 2803 0ecc 80B4     		push	{r7}
 2804              	.LCFI117:
 2805              		.cfi_def_cfa_offset 4
 2806              		.cfi_offset 7, -4
 2807 0ece 85B0     		sub	sp, sp, #20
 2808              	.LCFI118:
 2809              		.cfi_def_cfa_offset 24
 2810 0ed0 00AF     		add	r7, sp, #0
 2811              	.LCFI119:
 2812              		.cfi_def_cfa_register 7
 2813 0ed2 7860     		str	r0, [r7, #4]
 2814 0ed4 0B46     		mov	r3, r1
 2815 0ed6 7B80     		strh	r3, [r7, #2]	@ movhi
1541:../src/stm32f30x_tim.c ****   uint32_t tmpccmr1 = 0;
 2816              		.loc 1 1541 0
 2817 0ed8 4FF00003 		mov	r3, #0
 2818 0edc FB60     		str	r3, [r7, #12]
1542:../src/stm32f30x_tim.c **** 
1543:../src/stm32f30x_tim.c ****   /* Check the parameters */
1544:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1545:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1546:../src/stm32f30x_tim.c **** 
1547:../src/stm32f30x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2819              		.loc 1 1547 0
 2820 0ede 7B68     		ldr	r3, [r7, #4]
 2821 0ee0 9B69     		ldr	r3, [r3, #24]
 2822 0ee2 FB60     		str	r3, [r7, #12]
1548:../src/stm32f30x_tim.c **** 
1549:../src/stm32f30x_tim.c ****   /* Reset the OC1PE Bit */
1550:../src/stm32f30x_tim.c ****   tmpccmr1 &= (uint32_t)(~TIM_CCMR1_OC1PE);
 2823              		.loc 1 1550 0
 2824 0ee4 FB68     		ldr	r3, [r7, #12]
 2825 0ee6 23F00803 		bic	r3, r3, #8
 2826 0eea FB60     		str	r3, [r7, #12]
1551:../src/stm32f30x_tim.c **** 
1552:../src/stm32f30x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1553:../src/stm32f30x_tim.c ****   tmpccmr1 |= TIM_OCPreload;
 2827              		.loc 1 1553 0
 2828 0eec 7B88     		ldrh	r3, [r7, #2]
 2829 0eee FA68     		ldr	r2, [r7, #12]
 2830 0ef0 1343     		orrs	r3, r3, r2
 2831 0ef2 FB60     		str	r3, [r7, #12]
1554:../src/stm32f30x_tim.c **** 
1555:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR1 register */
1556:../src/stm32f30x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2832              		.loc 1 1556 0
 2833 0ef4 7B68     		ldr	r3, [r7, #4]
 2834 0ef6 FA68     		ldr	r2, [r7, #12]
 2835 0ef8 9A61     		str	r2, [r3, #24]
1557:../src/stm32f30x_tim.c **** }
 2836              		.loc 1 1557 0
 2837 0efa 07F11407 		add	r7, r7, #20
 2838 0efe BD46     		mov	sp, r7
 2839 0f00 80BC     		pop	{r7}
 2840 0f02 7047     		bx	lr
 2841              		.cfi_endproc
 2842              	.LFE150:
 2844              		.align	2
 2845              		.global	TIM_OC2PreloadConfig
 2846              		.thumb
 2847              		.thumb_func
 2849              	TIM_OC2PreloadConfig:
 2850              	.LFB151:
1558:../src/stm32f30x_tim.c **** 
1559:../src/stm32f30x_tim.c **** /**
1560:../src/stm32f30x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1561:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 8 or 15 to select the TIM 
1562:../src/stm32f30x_tim.c ****   *         peripheral.
1563:../src/stm32f30x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1564:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1565:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPreload_Enable
1566:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPreload_Disable
1567:../src/stm32f30x_tim.c ****   * @retval None
1568:../src/stm32f30x_tim.c ****   */
1569:../src/stm32f30x_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1570:../src/stm32f30x_tim.c **** {
 2851              		.loc 1 1570 0
 2852              		.cfi_startproc
 2853              		@ args = 0, pretend = 0, frame = 16
 2854              		@ frame_needed = 1, uses_anonymous_args = 0
 2855              		@ link register save eliminated.
 2856 0f04 80B4     		push	{r7}
 2857              	.LCFI120:
 2858              		.cfi_def_cfa_offset 4
 2859              		.cfi_offset 7, -4
 2860 0f06 85B0     		sub	sp, sp, #20
 2861              	.LCFI121:
 2862              		.cfi_def_cfa_offset 24
 2863 0f08 00AF     		add	r7, sp, #0
 2864              	.LCFI122:
 2865              		.cfi_def_cfa_register 7
 2866 0f0a 7860     		str	r0, [r7, #4]
 2867 0f0c 0B46     		mov	r3, r1
 2868 0f0e 7B80     		strh	r3, [r7, #2]	@ movhi
1571:../src/stm32f30x_tim.c ****   uint32_t tmpccmr1 = 0;
 2869              		.loc 1 1571 0
 2870 0f10 4FF00003 		mov	r3, #0
 2871 0f14 FB60     		str	r3, [r7, #12]
1572:../src/stm32f30x_tim.c **** 
1573:../src/stm32f30x_tim.c ****   /* Check the parameters */
1574:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1575:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1576:../src/stm32f30x_tim.c **** 
1577:../src/stm32f30x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2872              		.loc 1 1577 0
 2873 0f16 7B68     		ldr	r3, [r7, #4]
 2874 0f18 9B69     		ldr	r3, [r3, #24]
 2875 0f1a FB60     		str	r3, [r7, #12]
1578:../src/stm32f30x_tim.c **** 
1579:../src/stm32f30x_tim.c ****   /* Reset the OC2PE Bit */
1580:../src/stm32f30x_tim.c ****   tmpccmr1 &= (uint32_t)(~TIM_CCMR1_OC2PE);
 2876              		.loc 1 1580 0
 2877 0f1c FB68     		ldr	r3, [r7, #12]
 2878 0f1e 23F40063 		bic	r3, r3, #2048
 2879 0f22 FB60     		str	r3, [r7, #12]
1581:../src/stm32f30x_tim.c **** 
1582:../src/stm32f30x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1583:../src/stm32f30x_tim.c ****   tmpccmr1 |= ((uint32_t)TIM_OCPreload << 8);
 2880              		.loc 1 1583 0
 2881 0f24 7B88     		ldrh	r3, [r7, #2]
 2882 0f26 4FEA0323 		lsl	r3, r3, #8
 2883 0f2a FA68     		ldr	r2, [r7, #12]
 2884 0f2c 1343     		orrs	r3, r3, r2
 2885 0f2e FB60     		str	r3, [r7, #12]
1584:../src/stm32f30x_tim.c **** 
1585:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR1 register */
1586:../src/stm32f30x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2886              		.loc 1 1586 0
 2887 0f30 7B68     		ldr	r3, [r7, #4]
 2888 0f32 FA68     		ldr	r2, [r7, #12]
 2889 0f34 9A61     		str	r2, [r3, #24]
1587:../src/stm32f30x_tim.c **** }
 2890              		.loc 1 1587 0
 2891 0f36 07F11407 		add	r7, r7, #20
 2892 0f3a BD46     		mov	sp, r7
 2893 0f3c 80BC     		pop	{r7}
 2894 0f3e 7047     		bx	lr
 2895              		.cfi_endproc
 2896              	.LFE151:
 2898              		.align	2
 2899              		.global	TIM_OC3PreloadConfig
 2900              		.thumb
 2901              		.thumb_func
 2903              	TIM_OC3PreloadConfig:
 2904              	.LFB152:
1588:../src/stm32f30x_tim.c **** 
1589:../src/stm32f30x_tim.c **** /**
1590:../src/stm32f30x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1591:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4 or 8 to select the TIM peripheral.
1592:../src/stm32f30x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1593:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1594:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPreload_Enable
1595:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPreload_Disable
1596:../src/stm32f30x_tim.c ****   * @retval None
1597:../src/stm32f30x_tim.c ****   */
1598:../src/stm32f30x_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1599:../src/stm32f30x_tim.c **** {
 2905              		.loc 1 1599 0
 2906              		.cfi_startproc
 2907              		@ args = 0, pretend = 0, frame = 16
 2908              		@ frame_needed = 1, uses_anonymous_args = 0
 2909              		@ link register save eliminated.
 2910 0f40 80B4     		push	{r7}
 2911              	.LCFI123:
 2912              		.cfi_def_cfa_offset 4
 2913              		.cfi_offset 7, -4
 2914 0f42 85B0     		sub	sp, sp, #20
 2915              	.LCFI124:
 2916              		.cfi_def_cfa_offset 24
 2917 0f44 00AF     		add	r7, sp, #0
 2918              	.LCFI125:
 2919              		.cfi_def_cfa_register 7
 2920 0f46 7860     		str	r0, [r7, #4]
 2921 0f48 0B46     		mov	r3, r1
 2922 0f4a 7B80     		strh	r3, [r7, #2]	@ movhi
1600:../src/stm32f30x_tim.c ****   uint32_t tmpccmr2 = 0;
 2923              		.loc 1 1600 0
 2924 0f4c 4FF00003 		mov	r3, #0
 2925 0f50 FB60     		str	r3, [r7, #12]
1601:../src/stm32f30x_tim.c **** 
1602:../src/stm32f30x_tim.c ****   /* Check the parameters */
1603:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1604:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1605:../src/stm32f30x_tim.c **** 
1606:../src/stm32f30x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2926              		.loc 1 1606 0
 2927 0f52 7B68     		ldr	r3, [r7, #4]
 2928 0f54 DB69     		ldr	r3, [r3, #28]
 2929 0f56 FB60     		str	r3, [r7, #12]
1607:../src/stm32f30x_tim.c **** 
1608:../src/stm32f30x_tim.c ****   /* Reset the OC3PE Bit */
1609:../src/stm32f30x_tim.c ****   tmpccmr2 &= (uint32_t)(~TIM_CCMR2_OC3PE);
 2930              		.loc 1 1609 0
 2931 0f58 FB68     		ldr	r3, [r7, #12]
 2932 0f5a 23F00803 		bic	r3, r3, #8
 2933 0f5e FB60     		str	r3, [r7, #12]
1610:../src/stm32f30x_tim.c **** 
1611:../src/stm32f30x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1612:../src/stm32f30x_tim.c ****   tmpccmr2 |= TIM_OCPreload;
 2934              		.loc 1 1612 0
 2935 0f60 7B88     		ldrh	r3, [r7, #2]
 2936 0f62 FA68     		ldr	r2, [r7, #12]
 2937 0f64 1343     		orrs	r3, r3, r2
 2938 0f66 FB60     		str	r3, [r7, #12]
1613:../src/stm32f30x_tim.c **** 
1614:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR2 register */
1615:../src/stm32f30x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2939              		.loc 1 1615 0
 2940 0f68 7B68     		ldr	r3, [r7, #4]
 2941 0f6a FA68     		ldr	r2, [r7, #12]
 2942 0f6c DA61     		str	r2, [r3, #28]
1616:../src/stm32f30x_tim.c **** }
 2943              		.loc 1 1616 0
 2944 0f6e 07F11407 		add	r7, r7, #20
 2945 0f72 BD46     		mov	sp, r7
 2946 0f74 80BC     		pop	{r7}
 2947 0f76 7047     		bx	lr
 2948              		.cfi_endproc
 2949              	.LFE152:
 2951              		.align	2
 2952              		.global	TIM_OC4PreloadConfig
 2953              		.thumb
 2954              		.thumb_func
 2956              	TIM_OC4PreloadConfig:
 2957              	.LFB153:
1617:../src/stm32f30x_tim.c **** 
1618:../src/stm32f30x_tim.c **** /**
1619:../src/stm32f30x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1620:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4 or 8 to select the TIM peripheral.
1621:../src/stm32f30x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1622:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1623:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPreload_Enable
1624:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPreload_Disable
1625:../src/stm32f30x_tim.c ****   * @retval None
1626:../src/stm32f30x_tim.c ****   */
1627:../src/stm32f30x_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1628:../src/stm32f30x_tim.c **** {
 2958              		.loc 1 1628 0
 2959              		.cfi_startproc
 2960              		@ args = 0, pretend = 0, frame = 16
 2961              		@ frame_needed = 1, uses_anonymous_args = 0
 2962              		@ link register save eliminated.
 2963 0f78 80B4     		push	{r7}
 2964              	.LCFI126:
 2965              		.cfi_def_cfa_offset 4
 2966              		.cfi_offset 7, -4
 2967 0f7a 85B0     		sub	sp, sp, #20
 2968              	.LCFI127:
 2969              		.cfi_def_cfa_offset 24
 2970 0f7c 00AF     		add	r7, sp, #0
 2971              	.LCFI128:
 2972              		.cfi_def_cfa_register 7
 2973 0f7e 7860     		str	r0, [r7, #4]
 2974 0f80 0B46     		mov	r3, r1
 2975 0f82 7B80     		strh	r3, [r7, #2]	@ movhi
1629:../src/stm32f30x_tim.c ****   uint32_t tmpccmr2 = 0;
 2976              		.loc 1 1629 0
 2977 0f84 4FF00003 		mov	r3, #0
 2978 0f88 FB60     		str	r3, [r7, #12]
1630:../src/stm32f30x_tim.c **** 
1631:../src/stm32f30x_tim.c ****   /* Check the parameters */
1632:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1633:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1634:../src/stm32f30x_tim.c **** 
1635:../src/stm32f30x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2979              		.loc 1 1635 0
 2980 0f8a 7B68     		ldr	r3, [r7, #4]
 2981 0f8c DB69     		ldr	r3, [r3, #28]
 2982 0f8e FB60     		str	r3, [r7, #12]
1636:../src/stm32f30x_tim.c **** 
1637:../src/stm32f30x_tim.c ****   /* Reset the OC4PE Bit */
1638:../src/stm32f30x_tim.c ****   tmpccmr2 &= (uint32_t)(~TIM_CCMR2_OC4PE);
 2983              		.loc 1 1638 0
 2984 0f90 FB68     		ldr	r3, [r7, #12]
 2985 0f92 23F40063 		bic	r3, r3, #2048
 2986 0f96 FB60     		str	r3, [r7, #12]
1639:../src/stm32f30x_tim.c **** 
1640:../src/stm32f30x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1641:../src/stm32f30x_tim.c ****   tmpccmr2 |= ((uint32_t)TIM_OCPreload << 8);
 2987              		.loc 1 1641 0
 2988 0f98 7B88     		ldrh	r3, [r7, #2]
 2989 0f9a 4FEA0323 		lsl	r3, r3, #8
 2990 0f9e FA68     		ldr	r2, [r7, #12]
 2991 0fa0 1343     		orrs	r3, r3, r2
 2992 0fa2 FB60     		str	r3, [r7, #12]
1642:../src/stm32f30x_tim.c **** 
1643:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR2 register */
1644:../src/stm32f30x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2993              		.loc 1 1644 0
 2994 0fa4 7B68     		ldr	r3, [r7, #4]
 2995 0fa6 FA68     		ldr	r2, [r7, #12]
 2996 0fa8 DA61     		str	r2, [r3, #28]
1645:../src/stm32f30x_tim.c **** }
 2997              		.loc 1 1645 0
 2998 0faa 07F11407 		add	r7, r7, #20
 2999 0fae BD46     		mov	sp, r7
 3000 0fb0 80BC     		pop	{r7}
 3001 0fb2 7047     		bx	lr
 3002              		.cfi_endproc
 3003              	.LFE153:
 3005              		.align	2
 3006              		.global	TIM_OC5PreloadConfig
 3007              		.thumb
 3008              		.thumb_func
 3010              	TIM_OC5PreloadConfig:
 3011              	.LFB154:
1646:../src/stm32f30x_tim.c **** 
1647:../src/stm32f30x_tim.c **** /**
1648:../src/stm32f30x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR5.
1649:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM peripheral.
1650:../src/stm32f30x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1651:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1652:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPreload_Enable
1653:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPreload_Disable
1654:../src/stm32f30x_tim.c ****   * @retval None
1655:../src/stm32f30x_tim.c ****   */
1656:../src/stm32f30x_tim.c **** void TIM_OC5PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1657:../src/stm32f30x_tim.c **** {
 3012              		.loc 1 1657 0
 3013              		.cfi_startproc
 3014              		@ args = 0, pretend = 0, frame = 16
 3015              		@ frame_needed = 1, uses_anonymous_args = 0
 3016              		@ link register save eliminated.
 3017 0fb4 80B4     		push	{r7}
 3018              	.LCFI129:
 3019              		.cfi_def_cfa_offset 4
 3020              		.cfi_offset 7, -4
 3021 0fb6 85B0     		sub	sp, sp, #20
 3022              	.LCFI130:
 3023              		.cfi_def_cfa_offset 24
 3024 0fb8 00AF     		add	r7, sp, #0
 3025              	.LCFI131:
 3026              		.cfi_def_cfa_register 7
 3027 0fba 7860     		str	r0, [r7, #4]
 3028 0fbc 0B46     		mov	r3, r1
 3029 0fbe 7B80     		strh	r3, [r7, #2]	@ movhi
1658:../src/stm32f30x_tim.c ****   uint32_t tmpccmr3 = 0;
 3030              		.loc 1 1658 0
 3031 0fc0 4FF00003 		mov	r3, #0
 3032 0fc4 FB60     		str	r3, [r7, #12]
1659:../src/stm32f30x_tim.c **** 
1660:../src/stm32f30x_tim.c ****   /* Check the parameters */
1661:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1662:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1663:../src/stm32f30x_tim.c **** 
1664:../src/stm32f30x_tim.c ****   tmpccmr3 = TIMx->CCMR3;
 3033              		.loc 1 1664 0
 3034 0fc6 7B68     		ldr	r3, [r7, #4]
 3035 0fc8 5B6D     		ldr	r3, [r3, #84]
 3036 0fca FB60     		str	r3, [r7, #12]
1665:../src/stm32f30x_tim.c **** 
1666:../src/stm32f30x_tim.c ****   /* Reset the OC5PE Bit */
1667:../src/stm32f30x_tim.c ****   tmpccmr3 &= (uint32_t)(~TIM_CCMR3_OC5PE);
 3037              		.loc 1 1667 0
 3038 0fcc FB68     		ldr	r3, [r7, #12]
 3039 0fce 23F00803 		bic	r3, r3, #8
 3040 0fd2 FB60     		str	r3, [r7, #12]
1668:../src/stm32f30x_tim.c **** 
1669:../src/stm32f30x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1670:../src/stm32f30x_tim.c ****   tmpccmr3 |= (uint32_t)(TIM_OCPreload);
 3041              		.loc 1 1670 0
 3042 0fd4 7B88     		ldrh	r3, [r7, #2]
 3043 0fd6 FA68     		ldr	r2, [r7, #12]
 3044 0fd8 1343     		orrs	r3, r3, r2
 3045 0fda FB60     		str	r3, [r7, #12]
1671:../src/stm32f30x_tim.c **** 
1672:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR3 register */
1673:../src/stm32f30x_tim.c ****   TIMx->CCMR3 = tmpccmr3;
 3046              		.loc 1 1673 0
 3047 0fdc 7B68     		ldr	r3, [r7, #4]
 3048 0fde FA68     		ldr	r2, [r7, #12]
 3049 0fe0 5A65     		str	r2, [r3, #84]
1674:../src/stm32f30x_tim.c **** }
 3050              		.loc 1 1674 0
 3051 0fe2 07F11407 		add	r7, r7, #20
 3052 0fe6 BD46     		mov	sp, r7
 3053 0fe8 80BC     		pop	{r7}
 3054 0fea 7047     		bx	lr
 3055              		.cfi_endproc
 3056              	.LFE154:
 3058              		.align	2
 3059              		.global	TIM_OC6PreloadConfig
 3060              		.thumb
 3061              		.thumb_func
 3063              	TIM_OC6PreloadConfig:
 3064              	.LFB155:
1675:../src/stm32f30x_tim.c **** 
1676:../src/stm32f30x_tim.c **** /**
1677:../src/stm32f30x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR6.
1678:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM peripheral.
1679:../src/stm32f30x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1680:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1681:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPreload_Enable
1682:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPreload_Disable
1683:../src/stm32f30x_tim.c ****   * @retval None
1684:../src/stm32f30x_tim.c ****   */
1685:../src/stm32f30x_tim.c **** void TIM_OC6PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1686:../src/stm32f30x_tim.c **** {
 3065              		.loc 1 1686 0
 3066              		.cfi_startproc
 3067              		@ args = 0, pretend = 0, frame = 16
 3068              		@ frame_needed = 1, uses_anonymous_args = 0
 3069              		@ link register save eliminated.
 3070 0fec 80B4     		push	{r7}
 3071              	.LCFI132:
 3072              		.cfi_def_cfa_offset 4
 3073              		.cfi_offset 7, -4
 3074 0fee 85B0     		sub	sp, sp, #20
 3075              	.LCFI133:
 3076              		.cfi_def_cfa_offset 24
 3077 0ff0 00AF     		add	r7, sp, #0
 3078              	.LCFI134:
 3079              		.cfi_def_cfa_register 7
 3080 0ff2 7860     		str	r0, [r7, #4]
 3081 0ff4 0B46     		mov	r3, r1
 3082 0ff6 7B80     		strh	r3, [r7, #2]	@ movhi
1687:../src/stm32f30x_tim.c ****   uint32_t tmpccmr3 = 0;
 3083              		.loc 1 1687 0
 3084 0ff8 4FF00003 		mov	r3, #0
 3085 0ffc FB60     		str	r3, [r7, #12]
1688:../src/stm32f30x_tim.c **** 
1689:../src/stm32f30x_tim.c ****   /* Check the parameters */
1690:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1691:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1692:../src/stm32f30x_tim.c **** 
1693:../src/stm32f30x_tim.c ****   tmpccmr3 = TIMx->CCMR3;
 3086              		.loc 1 1693 0
 3087 0ffe 7B68     		ldr	r3, [r7, #4]
 3088 1000 5B6D     		ldr	r3, [r3, #84]
 3089 1002 FB60     		str	r3, [r7, #12]
1694:../src/stm32f30x_tim.c **** 
1695:../src/stm32f30x_tim.c ****   /* Reset the OC5PE Bit */
1696:../src/stm32f30x_tim.c ****   tmpccmr3 &= (uint32_t)(~TIM_CCMR3_OC6PE);
 3090              		.loc 1 1696 0
 3091 1004 FB68     		ldr	r3, [r7, #12]
 3092 1006 23F40063 		bic	r3, r3, #2048
 3093 100a FB60     		str	r3, [r7, #12]
1697:../src/stm32f30x_tim.c **** 
1698:../src/stm32f30x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1699:../src/stm32f30x_tim.c ****   tmpccmr3 |= ((uint32_t)TIM_OCPreload << 8);
 3094              		.loc 1 1699 0
 3095 100c 7B88     		ldrh	r3, [r7, #2]
 3096 100e 4FEA0323 		lsl	r3, r3, #8
 3097 1012 FA68     		ldr	r2, [r7, #12]
 3098 1014 1343     		orrs	r3, r3, r2
 3099 1016 FB60     		str	r3, [r7, #12]
1700:../src/stm32f30x_tim.c **** 
1701:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR3 register */
1702:../src/stm32f30x_tim.c ****   TIMx->CCMR3 = tmpccmr3;
 3100              		.loc 1 1702 0
 3101 1018 7B68     		ldr	r3, [r7, #4]
 3102 101a FA68     		ldr	r2, [r7, #12]
 3103 101c 5A65     		str	r2, [r3, #84]
1703:../src/stm32f30x_tim.c **** }
 3104              		.loc 1 1703 0
 3105 101e 07F11407 		add	r7, r7, #20
 3106 1022 BD46     		mov	sp, r7
 3107 1024 80BC     		pop	{r7}
 3108 1026 7047     		bx	lr
 3109              		.cfi_endproc
 3110              	.LFE155:
 3112              		.align	2
 3113              		.global	TIM_OC1FastConfig
 3114              		.thumb
 3115              		.thumb_func
 3117              	TIM_OC1FastConfig:
 3118              	.LFB156:
1704:../src/stm32f30x_tim.c **** 
1705:../src/stm32f30x_tim.c **** /**
1706:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1707:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8, 15, 16 or 17 to select the TIM peripheral.
1708:../src/stm32f30x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1709:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1710:../src/stm32f30x_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1711:../src/stm32f30x_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1712:../src/stm32f30x_tim.c ****   * @retval None
1713:../src/stm32f30x_tim.c ****   */
1714:../src/stm32f30x_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1715:../src/stm32f30x_tim.c **** {
 3119              		.loc 1 1715 0
 3120              		.cfi_startproc
 3121              		@ args = 0, pretend = 0, frame = 16
 3122              		@ frame_needed = 1, uses_anonymous_args = 0
 3123              		@ link register save eliminated.
 3124 1028 80B4     		push	{r7}
 3125              	.LCFI135:
 3126              		.cfi_def_cfa_offset 4
 3127              		.cfi_offset 7, -4
 3128 102a 85B0     		sub	sp, sp, #20
 3129              	.LCFI136:
 3130              		.cfi_def_cfa_offset 24
 3131 102c 00AF     		add	r7, sp, #0
 3132              	.LCFI137:
 3133              		.cfi_def_cfa_register 7
 3134 102e 7860     		str	r0, [r7, #4]
 3135 1030 0B46     		mov	r3, r1
 3136 1032 7B80     		strh	r3, [r7, #2]	@ movhi
1716:../src/stm32f30x_tim.c ****   uint32_t tmpccmr1 = 0;
 3137              		.loc 1 1716 0
 3138 1034 4FF00003 		mov	r3, #0
 3139 1038 FB60     		str	r3, [r7, #12]
1717:../src/stm32f30x_tim.c **** 
1718:../src/stm32f30x_tim.c ****   /* Check the parameters */
1719:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1720:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1721:../src/stm32f30x_tim.c **** 
1722:../src/stm32f30x_tim.c ****   /* Get the TIMx CCMR1 register value */
1723:../src/stm32f30x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 3140              		.loc 1 1723 0
 3141 103a 7B68     		ldr	r3, [r7, #4]
 3142 103c 9B69     		ldr	r3, [r3, #24]
 3143 103e FB60     		str	r3, [r7, #12]
1724:../src/stm32f30x_tim.c **** 
1725:../src/stm32f30x_tim.c ****   /* Reset the OC1FE Bit */
1726:../src/stm32f30x_tim.c ****   tmpccmr1 &= (uint32_t)~TIM_CCMR1_OC1FE;
 3144              		.loc 1 1726 0
 3145 1040 FB68     		ldr	r3, [r7, #12]
 3146 1042 23F00403 		bic	r3, r3, #4
 3147 1046 FB60     		str	r3, [r7, #12]
1727:../src/stm32f30x_tim.c **** 
1728:../src/stm32f30x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1729:../src/stm32f30x_tim.c ****   tmpccmr1 |= TIM_OCFast;
 3148              		.loc 1 1729 0
 3149 1048 7B88     		ldrh	r3, [r7, #2]
 3150 104a FA68     		ldr	r2, [r7, #12]
 3151 104c 1343     		orrs	r3, r3, r2
 3152 104e FB60     		str	r3, [r7, #12]
1730:../src/stm32f30x_tim.c **** 
1731:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR1 */
1732:../src/stm32f30x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 3153              		.loc 1 1732 0
 3154 1050 7B68     		ldr	r3, [r7, #4]
 3155 1052 FA68     		ldr	r2, [r7, #12]
 3156 1054 9A61     		str	r2, [r3, #24]
1733:../src/stm32f30x_tim.c **** }
 3157              		.loc 1 1733 0
 3158 1056 07F11407 		add	r7, r7, #20
 3159 105a BD46     		mov	sp, r7
 3160 105c 80BC     		pop	{r7}
 3161 105e 7047     		bx	lr
 3162              		.cfi_endproc
 3163              	.LFE156:
 3165              		.align	2
 3166              		.global	TIM_OC2FastConfig
 3167              		.thumb
 3168              		.thumb_func
 3170              	TIM_OC2FastConfig:
 3171              	.LFB157:
1734:../src/stm32f30x_tim.c **** 
1735:../src/stm32f30x_tim.c **** /**
1736:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1737:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8 or 15 to select the TIM 
1738:../src/stm32f30x_tim.c ****   *         peripheral.
1739:../src/stm32f30x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1740:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1741:../src/stm32f30x_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1742:../src/stm32f30x_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1743:../src/stm32f30x_tim.c ****   * @retval None
1744:../src/stm32f30x_tim.c ****   */
1745:../src/stm32f30x_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1746:../src/stm32f30x_tim.c **** {
 3172              		.loc 1 1746 0
 3173              		.cfi_startproc
 3174              		@ args = 0, pretend = 0, frame = 16
 3175              		@ frame_needed = 1, uses_anonymous_args = 0
 3176              		@ link register save eliminated.
 3177 1060 80B4     		push	{r7}
 3178              	.LCFI138:
 3179              		.cfi_def_cfa_offset 4
 3180              		.cfi_offset 7, -4
 3181 1062 85B0     		sub	sp, sp, #20
 3182              	.LCFI139:
 3183              		.cfi_def_cfa_offset 24
 3184 1064 00AF     		add	r7, sp, #0
 3185              	.LCFI140:
 3186              		.cfi_def_cfa_register 7
 3187 1066 7860     		str	r0, [r7, #4]
 3188 1068 0B46     		mov	r3, r1
 3189 106a 7B80     		strh	r3, [r7, #2]	@ movhi
1747:../src/stm32f30x_tim.c ****   uint32_t tmpccmr1 = 0;
 3190              		.loc 1 1747 0
 3191 106c 4FF00003 		mov	r3, #0
 3192 1070 FB60     		str	r3, [r7, #12]
1748:../src/stm32f30x_tim.c **** 
1749:../src/stm32f30x_tim.c ****   /* Check the parameters */
1750:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1751:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1752:../src/stm32f30x_tim.c **** 
1753:../src/stm32f30x_tim.c ****   /* Get the TIMx CCMR1 register value */
1754:../src/stm32f30x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 3193              		.loc 1 1754 0
 3194 1072 7B68     		ldr	r3, [r7, #4]
 3195 1074 9B69     		ldr	r3, [r3, #24]
 3196 1076 FB60     		str	r3, [r7, #12]
1755:../src/stm32f30x_tim.c **** 
1756:../src/stm32f30x_tim.c ****   /* Reset the OC2FE Bit */
1757:../src/stm32f30x_tim.c ****   tmpccmr1 &= (uint32_t)(~TIM_CCMR1_OC2FE);
 3197              		.loc 1 1757 0
 3198 1078 FB68     		ldr	r3, [r7, #12]
 3199 107a 23F48063 		bic	r3, r3, #1024
 3200 107e FB60     		str	r3, [r7, #12]
1758:../src/stm32f30x_tim.c **** 
1759:../src/stm32f30x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1760:../src/stm32f30x_tim.c ****   tmpccmr1 |= ((uint32_t)TIM_OCFast << 8);
 3201              		.loc 1 1760 0
 3202 1080 7B88     		ldrh	r3, [r7, #2]
 3203 1082 4FEA0323 		lsl	r3, r3, #8
 3204 1086 FA68     		ldr	r2, [r7, #12]
 3205 1088 1343     		orrs	r3, r3, r2
 3206 108a FB60     		str	r3, [r7, #12]
1761:../src/stm32f30x_tim.c **** 
1762:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR1 */
1763:../src/stm32f30x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 3207              		.loc 1 1763 0
 3208 108c 7B68     		ldr	r3, [r7, #4]
 3209 108e FA68     		ldr	r2, [r7, #12]
 3210 1090 9A61     		str	r2, [r3, #24]
1764:../src/stm32f30x_tim.c **** }
 3211              		.loc 1 1764 0
 3212 1092 07F11407 		add	r7, r7, #20
 3213 1096 BD46     		mov	sp, r7
 3214 1098 80BC     		pop	{r7}
 3215 109a 7047     		bx	lr
 3216              		.cfi_endproc
 3217              	.LFE157:
 3219              		.align	2
 3220              		.global	TIM_OC3FastConfig
 3221              		.thumb
 3222              		.thumb_func
 3224              	TIM_OC3FastConfig:
 3225              	.LFB158:
1765:../src/stm32f30x_tim.c **** 
1766:../src/stm32f30x_tim.c **** /**
1767:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1768:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4 or 8 to select the TIM peripheral.
1769:../src/stm32f30x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1770:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1771:../src/stm32f30x_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1772:../src/stm32f30x_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1773:../src/stm32f30x_tim.c ****   * @retval None
1774:../src/stm32f30x_tim.c ****   */
1775:../src/stm32f30x_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1776:../src/stm32f30x_tim.c **** {
 3226              		.loc 1 1776 0
 3227              		.cfi_startproc
 3228              		@ args = 0, pretend = 0, frame = 16
 3229              		@ frame_needed = 1, uses_anonymous_args = 0
 3230              		@ link register save eliminated.
 3231 109c 80B4     		push	{r7}
 3232              	.LCFI141:
 3233              		.cfi_def_cfa_offset 4
 3234              		.cfi_offset 7, -4
 3235 109e 85B0     		sub	sp, sp, #20
 3236              	.LCFI142:
 3237              		.cfi_def_cfa_offset 24
 3238 10a0 00AF     		add	r7, sp, #0
 3239              	.LCFI143:
 3240              		.cfi_def_cfa_register 7
 3241 10a2 7860     		str	r0, [r7, #4]
 3242 10a4 0B46     		mov	r3, r1
 3243 10a6 7B80     		strh	r3, [r7, #2]	@ movhi
1777:../src/stm32f30x_tim.c ****   uint32_t tmpccmr2 = 0;
 3244              		.loc 1 1777 0
 3245 10a8 4FF00003 		mov	r3, #0
 3246 10ac FB60     		str	r3, [r7, #12]
1778:../src/stm32f30x_tim.c ****   
1779:../src/stm32f30x_tim.c ****   /* Check the parameters */
1780:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1781:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1782:../src/stm32f30x_tim.c **** 
1783:../src/stm32f30x_tim.c ****   /* Get the TIMx CCMR2 register value */
1784:../src/stm32f30x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 3247              		.loc 1 1784 0
 3248 10ae 7B68     		ldr	r3, [r7, #4]
 3249 10b0 DB69     		ldr	r3, [r3, #28]
 3250 10b2 FB60     		str	r3, [r7, #12]
1785:../src/stm32f30x_tim.c **** 
1786:../src/stm32f30x_tim.c ****   /* Reset the OC3FE Bit */
1787:../src/stm32f30x_tim.c ****   tmpccmr2 &= (uint32_t)~TIM_CCMR2_OC3FE;
 3251              		.loc 1 1787 0
 3252 10b4 FB68     		ldr	r3, [r7, #12]
 3253 10b6 23F00403 		bic	r3, r3, #4
 3254 10ba FB60     		str	r3, [r7, #12]
1788:../src/stm32f30x_tim.c **** 
1789:../src/stm32f30x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1790:../src/stm32f30x_tim.c ****   tmpccmr2 |= TIM_OCFast;
 3255              		.loc 1 1790 0
 3256 10bc 7B88     		ldrh	r3, [r7, #2]
 3257 10be FA68     		ldr	r2, [r7, #12]
 3258 10c0 1343     		orrs	r3, r3, r2
 3259 10c2 FB60     		str	r3, [r7, #12]
1791:../src/stm32f30x_tim.c **** 
1792:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR2 */
1793:../src/stm32f30x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 3260              		.loc 1 1793 0
 3261 10c4 7B68     		ldr	r3, [r7, #4]
 3262 10c6 FA68     		ldr	r2, [r7, #12]
 3263 10c8 DA61     		str	r2, [r3, #28]
1794:../src/stm32f30x_tim.c **** }
 3264              		.loc 1 1794 0
 3265 10ca 07F11407 		add	r7, r7, #20
 3266 10ce BD46     		mov	sp, r7
 3267 10d0 80BC     		pop	{r7}
 3268 10d2 7047     		bx	lr
 3269              		.cfi_endproc
 3270              	.LFE158:
 3272              		.align	2
 3273              		.global	TIM_OC4FastConfig
 3274              		.thumb
 3275              		.thumb_func
 3277              	TIM_OC4FastConfig:
 3278              	.LFB159:
1795:../src/stm32f30x_tim.c **** 
1796:../src/stm32f30x_tim.c **** /**
1797:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1798:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4 or 8 to select the TIM peripheral.
1799:../src/stm32f30x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1800:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1801:../src/stm32f30x_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1802:../src/stm32f30x_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1803:../src/stm32f30x_tim.c ****   * @retval None
1804:../src/stm32f30x_tim.c ****   */
1805:../src/stm32f30x_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1806:../src/stm32f30x_tim.c **** {
 3279              		.loc 1 1806 0
 3280              		.cfi_startproc
 3281              		@ args = 0, pretend = 0, frame = 16
 3282              		@ frame_needed = 1, uses_anonymous_args = 0
 3283              		@ link register save eliminated.
 3284 10d4 80B4     		push	{r7}
 3285              	.LCFI144:
 3286              		.cfi_def_cfa_offset 4
 3287              		.cfi_offset 7, -4
 3288 10d6 85B0     		sub	sp, sp, #20
 3289              	.LCFI145:
 3290              		.cfi_def_cfa_offset 24
 3291 10d8 00AF     		add	r7, sp, #0
 3292              	.LCFI146:
 3293              		.cfi_def_cfa_register 7
 3294 10da 7860     		str	r0, [r7, #4]
 3295 10dc 0B46     		mov	r3, r1
 3296 10de 7B80     		strh	r3, [r7, #2]	@ movhi
1807:../src/stm32f30x_tim.c ****   uint32_t tmpccmr2 = 0;
 3297              		.loc 1 1807 0
 3298 10e0 4FF00003 		mov	r3, #0
 3299 10e4 FB60     		str	r3, [r7, #12]
1808:../src/stm32f30x_tim.c **** 
1809:../src/stm32f30x_tim.c ****   /* Check the parameters */
1810:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1811:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1812:../src/stm32f30x_tim.c **** 
1813:../src/stm32f30x_tim.c ****   /* Get the TIMx CCMR2 register value */
1814:../src/stm32f30x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 3300              		.loc 1 1814 0
 3301 10e6 7B68     		ldr	r3, [r7, #4]
 3302 10e8 DB69     		ldr	r3, [r3, #28]
 3303 10ea FB60     		str	r3, [r7, #12]
1815:../src/stm32f30x_tim.c **** 
1816:../src/stm32f30x_tim.c ****   /* Reset the OC4FE Bit */
1817:../src/stm32f30x_tim.c ****   tmpccmr2 &= (uint32_t)(~TIM_CCMR2_OC4FE);
 3304              		.loc 1 1817 0
 3305 10ec FB68     		ldr	r3, [r7, #12]
 3306 10ee 23F48063 		bic	r3, r3, #1024
 3307 10f2 FB60     		str	r3, [r7, #12]
1818:../src/stm32f30x_tim.c **** 
1819:../src/stm32f30x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1820:../src/stm32f30x_tim.c ****   tmpccmr2 |= ((uint32_t)TIM_OCFast << 8);
 3308              		.loc 1 1820 0
 3309 10f4 7B88     		ldrh	r3, [r7, #2]
 3310 10f6 4FEA0323 		lsl	r3, r3, #8
 3311 10fa FA68     		ldr	r2, [r7, #12]
 3312 10fc 1343     		orrs	r3, r3, r2
 3313 10fe FB60     		str	r3, [r7, #12]
1821:../src/stm32f30x_tim.c **** 
1822:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR2 */
1823:../src/stm32f30x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 3314              		.loc 1 1823 0
 3315 1100 7B68     		ldr	r3, [r7, #4]
 3316 1102 FA68     		ldr	r2, [r7, #12]
 3317 1104 DA61     		str	r2, [r3, #28]
1824:../src/stm32f30x_tim.c **** }
 3318              		.loc 1 1824 0
 3319 1106 07F11407 		add	r7, r7, #20
 3320 110a BD46     		mov	sp, r7
 3321 110c 80BC     		pop	{r7}
 3322 110e 7047     		bx	lr
 3323              		.cfi_endproc
 3324              	.LFE159:
 3326              		.align	2
 3327              		.global	TIM_ClearOC1Ref
 3328              		.thumb
 3329              		.thumb_func
 3331              	TIM_ClearOC1Ref:
 3332              	.LFB160:
1825:../src/stm32f30x_tim.c **** 
1826:../src/stm32f30x_tim.c **** /**
1827:../src/stm32f30x_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1828:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8, 15, 16 or 17 to select the TIM peripheral.
1829:../src/stm32f30x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1830:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1831:../src/stm32f30x_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1832:../src/stm32f30x_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1833:../src/stm32f30x_tim.c ****   * @retval None
1834:../src/stm32f30x_tim.c ****   */
1835:../src/stm32f30x_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1836:../src/stm32f30x_tim.c **** {
 3333              		.loc 1 1836 0
 3334              		.cfi_startproc
 3335              		@ args = 0, pretend = 0, frame = 16
 3336              		@ frame_needed = 1, uses_anonymous_args = 0
 3337              		@ link register save eliminated.
 3338 1110 80B4     		push	{r7}
 3339              	.LCFI147:
 3340              		.cfi_def_cfa_offset 4
 3341              		.cfi_offset 7, -4
 3342 1112 85B0     		sub	sp, sp, #20
 3343              	.LCFI148:
 3344              		.cfi_def_cfa_offset 24
 3345 1114 00AF     		add	r7, sp, #0
 3346              	.LCFI149:
 3347              		.cfi_def_cfa_register 7
 3348 1116 7860     		str	r0, [r7, #4]
 3349 1118 0B46     		mov	r3, r1
 3350 111a 7B80     		strh	r3, [r7, #2]	@ movhi
1837:../src/stm32f30x_tim.c ****   uint32_t tmpccmr1 = 0;
 3351              		.loc 1 1837 0
 3352 111c 4FF00003 		mov	r3, #0
 3353 1120 FB60     		str	r3, [r7, #12]
1838:../src/stm32f30x_tim.c **** 
1839:../src/stm32f30x_tim.c ****   /* Check the parameters */
1840:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1841:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1842:../src/stm32f30x_tim.c **** 
1843:../src/stm32f30x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 3354              		.loc 1 1843 0
 3355 1122 7B68     		ldr	r3, [r7, #4]
 3356 1124 9B69     		ldr	r3, [r3, #24]
 3357 1126 FB60     		str	r3, [r7, #12]
1844:../src/stm32f30x_tim.c **** 
1845:../src/stm32f30x_tim.c ****   /* Reset the OC1CE Bit */
1846:../src/stm32f30x_tim.c ****   tmpccmr1 &= (uint32_t)~TIM_CCMR1_OC1CE;
 3358              		.loc 1 1846 0
 3359 1128 FB68     		ldr	r3, [r7, #12]
 3360 112a 23F08003 		bic	r3, r3, #128
 3361 112e FB60     		str	r3, [r7, #12]
1847:../src/stm32f30x_tim.c **** 
1848:../src/stm32f30x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1849:../src/stm32f30x_tim.c ****   tmpccmr1 |= TIM_OCClear;
 3362              		.loc 1 1849 0
 3363 1130 7B88     		ldrh	r3, [r7, #2]
 3364 1132 FA68     		ldr	r2, [r7, #12]
 3365 1134 1343     		orrs	r3, r3, r2
 3366 1136 FB60     		str	r3, [r7, #12]
1850:../src/stm32f30x_tim.c **** 
1851:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR1 register */
1852:../src/stm32f30x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 3367              		.loc 1 1852 0
 3368 1138 7B68     		ldr	r3, [r7, #4]
 3369 113a FA68     		ldr	r2, [r7, #12]
 3370 113c 9A61     		str	r2, [r3, #24]
1853:../src/stm32f30x_tim.c **** }
 3371              		.loc 1 1853 0
 3372 113e 07F11407 		add	r7, r7, #20
 3373 1142 BD46     		mov	sp, r7
 3374 1144 80BC     		pop	{r7}
 3375 1146 7047     		bx	lr
 3376              		.cfi_endproc
 3377              	.LFE160:
 3379              		.align	2
 3380              		.global	TIM_ClearOC2Ref
 3381              		.thumb
 3382              		.thumb_func
 3384              	TIM_ClearOC2Ref:
 3385              	.LFB161:
1854:../src/stm32f30x_tim.c **** 
1855:../src/stm32f30x_tim.c **** /**
1856:../src/stm32f30x_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1857:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8 or 15 to select the TIM 
1858:../src/stm32f30x_tim.c ****   *         peripheral.
1859:../src/stm32f30x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1860:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1861:../src/stm32f30x_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1862:../src/stm32f30x_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1863:../src/stm32f30x_tim.c ****   * @retval None
1864:../src/stm32f30x_tim.c ****   */
1865:../src/stm32f30x_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1866:../src/stm32f30x_tim.c **** {
 3386              		.loc 1 1866 0
 3387              		.cfi_startproc
 3388              		@ args = 0, pretend = 0, frame = 16
 3389              		@ frame_needed = 1, uses_anonymous_args = 0
 3390              		@ link register save eliminated.
 3391 1148 80B4     		push	{r7}
 3392              	.LCFI150:
 3393              		.cfi_def_cfa_offset 4
 3394              		.cfi_offset 7, -4
 3395 114a 85B0     		sub	sp, sp, #20
 3396              	.LCFI151:
 3397              		.cfi_def_cfa_offset 24
 3398 114c 00AF     		add	r7, sp, #0
 3399              	.LCFI152:
 3400              		.cfi_def_cfa_register 7
 3401 114e 7860     		str	r0, [r7, #4]
 3402 1150 0B46     		mov	r3, r1
 3403 1152 7B80     		strh	r3, [r7, #2]	@ movhi
1867:../src/stm32f30x_tim.c ****   uint32_t tmpccmr1 = 0;
 3404              		.loc 1 1867 0
 3405 1154 4FF00003 		mov	r3, #0
 3406 1158 FB60     		str	r3, [r7, #12]
1868:../src/stm32f30x_tim.c **** 
1869:../src/stm32f30x_tim.c ****   /* Check the parameters */
1870:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1871:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1872:../src/stm32f30x_tim.c **** 
1873:../src/stm32f30x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 3407              		.loc 1 1873 0
 3408 115a 7B68     		ldr	r3, [r7, #4]
 3409 115c 9B69     		ldr	r3, [r3, #24]
 3410 115e FB60     		str	r3, [r7, #12]
1874:../src/stm32f30x_tim.c **** 
1875:../src/stm32f30x_tim.c ****   /* Reset the OC2CE Bit */
1876:../src/stm32f30x_tim.c ****   tmpccmr1 &= (uint32_t)~TIM_CCMR1_OC2CE;
 3411              		.loc 1 1876 0
 3412 1160 FB68     		ldr	r3, [r7, #12]
 3413 1162 23F40043 		bic	r3, r3, #32768
 3414 1166 FB60     		str	r3, [r7, #12]
1877:../src/stm32f30x_tim.c **** 
1878:../src/stm32f30x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1879:../src/stm32f30x_tim.c ****   tmpccmr1 |= ((uint32_t)TIM_OCClear << 8);
 3415              		.loc 1 1879 0
 3416 1168 7B88     		ldrh	r3, [r7, #2]
 3417 116a 4FEA0323 		lsl	r3, r3, #8
 3418 116e FA68     		ldr	r2, [r7, #12]
 3419 1170 1343     		orrs	r3, r3, r2
 3420 1172 FB60     		str	r3, [r7, #12]
1880:../src/stm32f30x_tim.c **** 
1881:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR1 register */
1882:../src/stm32f30x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 3421              		.loc 1 1882 0
 3422 1174 7B68     		ldr	r3, [r7, #4]
 3423 1176 FA68     		ldr	r2, [r7, #12]
 3424 1178 9A61     		str	r2, [r3, #24]
1883:../src/stm32f30x_tim.c **** }
 3425              		.loc 1 1883 0
 3426 117a 07F11407 		add	r7, r7, #20
 3427 117e BD46     		mov	sp, r7
 3428 1180 80BC     		pop	{r7}
 3429 1182 7047     		bx	lr
 3430              		.cfi_endproc
 3431              	.LFE161:
 3433              		.align	2
 3434              		.global	TIM_ClearOC3Ref
 3435              		.thumb
 3436              		.thumb_func
 3438              	TIM_ClearOC3Ref:
 3439              	.LFB162:
1884:../src/stm32f30x_tim.c **** 
1885:../src/stm32f30x_tim.c **** /**
1886:../src/stm32f30x_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1887:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4 or 8 to select the TIM peripheral.
1888:../src/stm32f30x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1889:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1890:../src/stm32f30x_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1891:../src/stm32f30x_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1892:../src/stm32f30x_tim.c ****   * @retval None
1893:../src/stm32f30x_tim.c ****   */
1894:../src/stm32f30x_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1895:../src/stm32f30x_tim.c **** {
 3440              		.loc 1 1895 0
 3441              		.cfi_startproc
 3442              		@ args = 0, pretend = 0, frame = 16
 3443              		@ frame_needed = 1, uses_anonymous_args = 0
 3444              		@ link register save eliminated.
 3445 1184 80B4     		push	{r7}
 3446              	.LCFI153:
 3447              		.cfi_def_cfa_offset 4
 3448              		.cfi_offset 7, -4
 3449 1186 85B0     		sub	sp, sp, #20
 3450              	.LCFI154:
 3451              		.cfi_def_cfa_offset 24
 3452 1188 00AF     		add	r7, sp, #0
 3453              	.LCFI155:
 3454              		.cfi_def_cfa_register 7
 3455 118a 7860     		str	r0, [r7, #4]
 3456 118c 0B46     		mov	r3, r1
 3457 118e 7B80     		strh	r3, [r7, #2]	@ movhi
1896:../src/stm32f30x_tim.c ****   uint32_t tmpccmr2 = 0;
 3458              		.loc 1 1896 0
 3459 1190 4FF00003 		mov	r3, #0
 3460 1194 FB60     		str	r3, [r7, #12]
1897:../src/stm32f30x_tim.c **** 
1898:../src/stm32f30x_tim.c ****   /* Check the parameters */
1899:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1900:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1901:../src/stm32f30x_tim.c **** 
1902:../src/stm32f30x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 3461              		.loc 1 1902 0
 3462 1196 7B68     		ldr	r3, [r7, #4]
 3463 1198 DB69     		ldr	r3, [r3, #28]
 3464 119a FB60     		str	r3, [r7, #12]
1903:../src/stm32f30x_tim.c **** 
1904:../src/stm32f30x_tim.c ****   /* Reset the OC3CE Bit */
1905:../src/stm32f30x_tim.c ****   tmpccmr2 &= (uint32_t)~TIM_CCMR2_OC3CE;
 3465              		.loc 1 1905 0
 3466 119c FB68     		ldr	r3, [r7, #12]
 3467 119e 23F08003 		bic	r3, r3, #128
 3468 11a2 FB60     		str	r3, [r7, #12]
1906:../src/stm32f30x_tim.c **** 
1907:../src/stm32f30x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1908:../src/stm32f30x_tim.c ****   tmpccmr2 |= TIM_OCClear;
 3469              		.loc 1 1908 0
 3470 11a4 7B88     		ldrh	r3, [r7, #2]
 3471 11a6 FA68     		ldr	r2, [r7, #12]
 3472 11a8 1343     		orrs	r3, r3, r2
 3473 11aa FB60     		str	r3, [r7, #12]
1909:../src/stm32f30x_tim.c **** 
1910:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR2 register */
1911:../src/stm32f30x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 3474              		.loc 1 1911 0
 3475 11ac 7B68     		ldr	r3, [r7, #4]
 3476 11ae FA68     		ldr	r2, [r7, #12]
 3477 11b0 DA61     		str	r2, [r3, #28]
1912:../src/stm32f30x_tim.c **** }
 3478              		.loc 1 1912 0
 3479 11b2 07F11407 		add	r7, r7, #20
 3480 11b6 BD46     		mov	sp, r7
 3481 11b8 80BC     		pop	{r7}
 3482 11ba 7047     		bx	lr
 3483              		.cfi_endproc
 3484              	.LFE162:
 3486              		.align	2
 3487              		.global	TIM_ClearOC4Ref
 3488              		.thumb
 3489              		.thumb_func
 3491              	TIM_ClearOC4Ref:
 3492              	.LFB163:
1913:../src/stm32f30x_tim.c **** 
1914:../src/stm32f30x_tim.c **** /**
1915:../src/stm32f30x_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1916:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4 or 8 to select the TIM peripheral.
1917:../src/stm32f30x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1918:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1919:../src/stm32f30x_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1920:../src/stm32f30x_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1921:../src/stm32f30x_tim.c ****   * @retval None
1922:../src/stm32f30x_tim.c ****   */
1923:../src/stm32f30x_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1924:../src/stm32f30x_tim.c **** {
 3493              		.loc 1 1924 0
 3494              		.cfi_startproc
 3495              		@ args = 0, pretend = 0, frame = 16
 3496              		@ frame_needed = 1, uses_anonymous_args = 0
 3497              		@ link register save eliminated.
 3498 11bc 80B4     		push	{r7}
 3499              	.LCFI156:
 3500              		.cfi_def_cfa_offset 4
 3501              		.cfi_offset 7, -4
 3502 11be 85B0     		sub	sp, sp, #20
 3503              	.LCFI157:
 3504              		.cfi_def_cfa_offset 24
 3505 11c0 00AF     		add	r7, sp, #0
 3506              	.LCFI158:
 3507              		.cfi_def_cfa_register 7
 3508 11c2 7860     		str	r0, [r7, #4]
 3509 11c4 0B46     		mov	r3, r1
 3510 11c6 7B80     		strh	r3, [r7, #2]	@ movhi
1925:../src/stm32f30x_tim.c ****   uint32_t tmpccmr2 = 0;
 3511              		.loc 1 1925 0
 3512 11c8 4FF00003 		mov	r3, #0
 3513 11cc FB60     		str	r3, [r7, #12]
1926:../src/stm32f30x_tim.c **** 
1927:../src/stm32f30x_tim.c ****   /* Check the parameters */
1928:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1929:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1930:../src/stm32f30x_tim.c **** 
1931:../src/stm32f30x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 3514              		.loc 1 1931 0
 3515 11ce 7B68     		ldr	r3, [r7, #4]
 3516 11d0 DB69     		ldr	r3, [r3, #28]
 3517 11d2 FB60     		str	r3, [r7, #12]
1932:../src/stm32f30x_tim.c **** 
1933:../src/stm32f30x_tim.c ****   /* Reset the OC4CE Bit */
1934:../src/stm32f30x_tim.c ****   tmpccmr2 &= (uint32_t)~TIM_CCMR2_OC4CE;
 3518              		.loc 1 1934 0
 3519 11d4 FB68     		ldr	r3, [r7, #12]
 3520 11d6 23F40043 		bic	r3, r3, #32768
 3521 11da FB60     		str	r3, [r7, #12]
1935:../src/stm32f30x_tim.c **** 
1936:../src/stm32f30x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1937:../src/stm32f30x_tim.c ****   tmpccmr2 |= ((uint32_t)TIM_OCClear << 8);
 3522              		.loc 1 1937 0
 3523 11dc 7B88     		ldrh	r3, [r7, #2]
 3524 11de 4FEA0323 		lsl	r3, r3, #8
 3525 11e2 FA68     		ldr	r2, [r7, #12]
 3526 11e4 1343     		orrs	r3, r3, r2
 3527 11e6 FB60     		str	r3, [r7, #12]
1938:../src/stm32f30x_tim.c **** 
1939:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR2 register */
1940:../src/stm32f30x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 3528              		.loc 1 1940 0
 3529 11e8 7B68     		ldr	r3, [r7, #4]
 3530 11ea FA68     		ldr	r2, [r7, #12]
 3531 11ec DA61     		str	r2, [r3, #28]
1941:../src/stm32f30x_tim.c **** }
 3532              		.loc 1 1941 0
 3533 11ee 07F11407 		add	r7, r7, #20
 3534 11f2 BD46     		mov	sp, r7
 3535 11f4 80BC     		pop	{r7}
 3536 11f6 7047     		bx	lr
 3537              		.cfi_endproc
 3538              	.LFE163:
 3540              		.align	2
 3541              		.global	TIM_ClearOC5Ref
 3542              		.thumb
 3543              		.thumb_func
 3545              	TIM_ClearOC5Ref:
 3546              	.LFB164:
1942:../src/stm32f30x_tim.c **** 
1943:../src/stm32f30x_tim.c **** /**
1944:../src/stm32f30x_tim.c ****   * @brief  Clears or safeguards the OCREF5 signal on an external event
1945:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM peripheral.
1946:../src/stm32f30x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1947:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1948:../src/stm32f30x_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1949:../src/stm32f30x_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1950:../src/stm32f30x_tim.c ****   * @retval None
1951:../src/stm32f30x_tim.c ****   */
1952:../src/stm32f30x_tim.c **** void TIM_ClearOC5Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1953:../src/stm32f30x_tim.c **** {
 3547              		.loc 1 1953 0
 3548              		.cfi_startproc
 3549              		@ args = 0, pretend = 0, frame = 16
 3550              		@ frame_needed = 1, uses_anonymous_args = 0
 3551              		@ link register save eliminated.
 3552 11f8 80B4     		push	{r7}
 3553              	.LCFI159:
 3554              		.cfi_def_cfa_offset 4
 3555              		.cfi_offset 7, -4
 3556 11fa 85B0     		sub	sp, sp, #20
 3557              	.LCFI160:
 3558              		.cfi_def_cfa_offset 24
 3559 11fc 00AF     		add	r7, sp, #0
 3560              	.LCFI161:
 3561              		.cfi_def_cfa_register 7
 3562 11fe 7860     		str	r0, [r7, #4]
 3563 1200 0B46     		mov	r3, r1
 3564 1202 7B80     		strh	r3, [r7, #2]	@ movhi
1954:../src/stm32f30x_tim.c ****   uint32_t tmpccmr3 = 0;
 3565              		.loc 1 1954 0
 3566 1204 4FF00003 		mov	r3, #0
 3567 1208 FB60     		str	r3, [r7, #12]
1955:../src/stm32f30x_tim.c **** 
1956:../src/stm32f30x_tim.c ****   /* Check the parameters */
1957:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1958:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1959:../src/stm32f30x_tim.c **** 
1960:../src/stm32f30x_tim.c ****   tmpccmr3 = TIMx->CCMR3;
 3568              		.loc 1 1960 0
 3569 120a 7B68     		ldr	r3, [r7, #4]
 3570 120c 5B6D     		ldr	r3, [r3, #84]
 3571 120e FB60     		str	r3, [r7, #12]
1961:../src/stm32f30x_tim.c **** 
1962:../src/stm32f30x_tim.c ****   /* Reset the OC5CE Bit */
1963:../src/stm32f30x_tim.c ****   tmpccmr3 &= (uint32_t)~TIM_CCMR3_OC5CE;
 3572              		.loc 1 1963 0
 3573 1210 FB68     		ldr	r3, [r7, #12]
 3574 1212 23F08003 		bic	r3, r3, #128
 3575 1216 FB60     		str	r3, [r7, #12]
1964:../src/stm32f30x_tim.c **** 
1965:../src/stm32f30x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1966:../src/stm32f30x_tim.c ****   tmpccmr3 |= (uint32_t)(TIM_OCClear);
 3576              		.loc 1 1966 0
 3577 1218 7B88     		ldrh	r3, [r7, #2]
 3578 121a FA68     		ldr	r2, [r7, #12]
 3579 121c 1343     		orrs	r3, r3, r2
 3580 121e FB60     		str	r3, [r7, #12]
1967:../src/stm32f30x_tim.c **** 
1968:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR3 register */
1969:../src/stm32f30x_tim.c ****   TIMx->CCMR3 = tmpccmr3;
 3581              		.loc 1 1969 0
 3582 1220 7B68     		ldr	r3, [r7, #4]
 3583 1222 FA68     		ldr	r2, [r7, #12]
 3584 1224 5A65     		str	r2, [r3, #84]
1970:../src/stm32f30x_tim.c **** }
 3585              		.loc 1 1970 0
 3586 1226 07F11407 		add	r7, r7, #20
 3587 122a BD46     		mov	sp, r7
 3588 122c 80BC     		pop	{r7}
 3589 122e 7047     		bx	lr
 3590              		.cfi_endproc
 3591              	.LFE164:
 3593              		.align	2
 3594              		.global	TIM_ClearOC6Ref
 3595              		.thumb
 3596              		.thumb_func
 3598              	TIM_ClearOC6Ref:
 3599              	.LFB165:
1971:../src/stm32f30x_tim.c **** 
1972:../src/stm32f30x_tim.c **** /**
1973:../src/stm32f30x_tim.c ****   * @brief  Clears or safeguards the OCREF6 signal on an external event
1974:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM peripheral.
1975:../src/stm32f30x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1976:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
1977:../src/stm32f30x_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1978:../src/stm32f30x_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1979:../src/stm32f30x_tim.c ****   * @retval None
1980:../src/stm32f30x_tim.c ****   */
1981:../src/stm32f30x_tim.c **** void TIM_ClearOC6Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1982:../src/stm32f30x_tim.c **** {
 3600              		.loc 1 1982 0
 3601              		.cfi_startproc
 3602              		@ args = 0, pretend = 0, frame = 16
 3603              		@ frame_needed = 1, uses_anonymous_args = 0
 3604              		@ link register save eliminated.
 3605 1230 80B4     		push	{r7}
 3606              	.LCFI162:
 3607              		.cfi_def_cfa_offset 4
 3608              		.cfi_offset 7, -4
 3609 1232 85B0     		sub	sp, sp, #20
 3610              	.LCFI163:
 3611              		.cfi_def_cfa_offset 24
 3612 1234 00AF     		add	r7, sp, #0
 3613              	.LCFI164:
 3614              		.cfi_def_cfa_register 7
 3615 1236 7860     		str	r0, [r7, #4]
 3616 1238 0B46     		mov	r3, r1
 3617 123a 7B80     		strh	r3, [r7, #2]	@ movhi
1983:../src/stm32f30x_tim.c ****   uint32_t tmpccmr3 = 0;
 3618              		.loc 1 1983 0
 3619 123c 4FF00003 		mov	r3, #0
 3620 1240 FB60     		str	r3, [r7, #12]
1984:../src/stm32f30x_tim.c **** 
1985:../src/stm32f30x_tim.c ****   /* Check the parameters */
1986:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1987:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1988:../src/stm32f30x_tim.c **** 
1989:../src/stm32f30x_tim.c ****   tmpccmr3 = TIMx->CCMR3;
 3621              		.loc 1 1989 0
 3622 1242 7B68     		ldr	r3, [r7, #4]
 3623 1244 5B6D     		ldr	r3, [r3, #84]
 3624 1246 FB60     		str	r3, [r7, #12]
1990:../src/stm32f30x_tim.c **** 
1991:../src/stm32f30x_tim.c ****   /* Reset the OC5CE Bit */
1992:../src/stm32f30x_tim.c ****   tmpccmr3 &= (uint32_t)~TIM_CCMR3_OC6CE;
 3625              		.loc 1 1992 0
 3626 1248 FB68     		ldr	r3, [r7, #12]
 3627 124a 23F40043 		bic	r3, r3, #32768
 3628 124e FB60     		str	r3, [r7, #12]
1993:../src/stm32f30x_tim.c **** 
1994:../src/stm32f30x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1995:../src/stm32f30x_tim.c ****   tmpccmr3 |= ((uint32_t)TIM_OCClear << 8);
 3629              		.loc 1 1995 0
 3630 1250 7B88     		ldrh	r3, [r7, #2]
 3631 1252 4FEA0323 		lsl	r3, r3, #8
 3632 1256 FA68     		ldr	r2, [r7, #12]
 3633 1258 1343     		orrs	r3, r3, r2
 3634 125a FB60     		str	r3, [r7, #12]
1996:../src/stm32f30x_tim.c **** 
1997:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR3 register */
1998:../src/stm32f30x_tim.c ****   TIMx->CCMR3 = tmpccmr3;
 3635              		.loc 1 1998 0
 3636 125c 7B68     		ldr	r3, [r7, #4]
 3637 125e FA68     		ldr	r2, [r7, #12]
 3638 1260 5A65     		str	r2, [r3, #84]
1999:../src/stm32f30x_tim.c **** }
 3639              		.loc 1 1999 0
 3640 1262 07F11407 		add	r7, r7, #20
 3641 1266 BD46     		mov	sp, r7
 3642 1268 80BC     		pop	{r7}
 3643 126a 7047     		bx	lr
 3644              		.cfi_endproc
 3645              	.LFE165:
 3647              		.align	2
 3648              		.global	TIM_SelectOCREFClear
 3649              		.thumb
 3650              		.thumb_func
 3652              	TIM_SelectOCREFClear:
 3653              	.LFB166:
2000:../src/stm32f30x_tim.c **** 
2001:../src/stm32f30x_tim.c **** /**
2002:../src/stm32f30x_tim.c ****   * @brief  Selects the OCReference Clear source.
2003:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8, 15, 16 or 17 to select the TIM peripheral.
2004:../src/stm32f30x_tim.c ****   * @param  TIM_OCReferenceClear: specifies the OCReference Clear source.
2005:../src/stm32f30x_tim.c ****   *   This parameter can be one of the following values:
2006:../src/stm32f30x_tim.c ****   *     @arg TIM_OCReferenceClear_ETRF: The internal OCreference clear input is connected to ETRF.
2007:../src/stm32f30x_tim.c ****   *     @arg TIM_OCReferenceClear_OCREFCLR: The internal OCreference clear input is connected to OC
2008:../src/stm32f30x_tim.c ****   * @retval None
2009:../src/stm32f30x_tim.c ****   */
2010:../src/stm32f30x_tim.c **** void TIM_SelectOCREFClear(TIM_TypeDef* TIMx, uint16_t TIM_OCReferenceClear)
2011:../src/stm32f30x_tim.c **** {
 3654              		.loc 1 2011 0
 3655              		.cfi_startproc
 3656              		@ args = 0, pretend = 0, frame = 8
 3657              		@ frame_needed = 1, uses_anonymous_args = 0
 3658              		@ link register save eliminated.
 3659 126c 80B4     		push	{r7}
 3660              	.LCFI165:
 3661              		.cfi_def_cfa_offset 4
 3662              		.cfi_offset 7, -4
 3663 126e 83B0     		sub	sp, sp, #12
 3664              	.LCFI166:
 3665              		.cfi_def_cfa_offset 16
 3666 1270 00AF     		add	r7, sp, #0
 3667              	.LCFI167:
 3668              		.cfi_def_cfa_register 7
 3669 1272 7860     		str	r0, [r7, #4]
 3670 1274 0B46     		mov	r3, r1
 3671 1276 7B80     		strh	r3, [r7, #2]	@ movhi
2012:../src/stm32f30x_tim.c ****   /* Check the parameters */
2013:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2014:../src/stm32f30x_tim.c ****   assert_param(TIM_OCREFERENCECECLEAR_SOURCE(TIM_OCReferenceClear));
2015:../src/stm32f30x_tim.c **** 
2016:../src/stm32f30x_tim.c ****   /* Set the TIM_OCReferenceClear source */
2017:../src/stm32f30x_tim.c ****   TIMx->SMCR &=  (uint16_t)~((uint16_t)TIM_SMCR_OCCS);
 3672              		.loc 1 2017 0
 3673 1278 7B68     		ldr	r3, [r7, #4]
 3674 127a 9A68     		ldr	r2, [r3, #8]
 3675 127c 4FF6F773 		movw	r3, #65527
 3676 1280 1340     		ands	r3, r3, r2
 3677 1282 7A68     		ldr	r2, [r7, #4]
 3678 1284 9360     		str	r3, [r2, #8]
2018:../src/stm32f30x_tim.c ****   TIMx->SMCR |=  TIM_OCReferenceClear;
 3679              		.loc 1 2018 0
 3680 1286 7B68     		ldr	r3, [r7, #4]
 3681 1288 9A68     		ldr	r2, [r3, #8]
 3682 128a 7B88     		ldrh	r3, [r7, #2]
 3683 128c 1A43     		orrs	r2, r2, r3
 3684 128e 7B68     		ldr	r3, [r7, #4]
 3685 1290 9A60     		str	r2, [r3, #8]
2019:../src/stm32f30x_tim.c **** }
 3686              		.loc 1 2019 0
 3687 1292 07F10C07 		add	r7, r7, #12
 3688 1296 BD46     		mov	sp, r7
 3689 1298 80BC     		pop	{r7}
 3690 129a 7047     		bx	lr
 3691              		.cfi_endproc
 3692              	.LFE166:
 3694              		.align	2
 3695              		.global	TIM_OC1PolarityConfig
 3696              		.thumb
 3697              		.thumb_func
 3699              	TIM_OC1PolarityConfig:
 3700              	.LFB167:
2020:../src/stm32f30x_tim.c **** 
2021:../src/stm32f30x_tim.c **** /**
2022:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
2023:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8, 15, 16 or 17 to select the TIM peripheral.
2024:../src/stm32f30x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
2025:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
2026:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
2027:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
2028:../src/stm32f30x_tim.c ****   * @retval None
2029:../src/stm32f30x_tim.c ****   */
2030:../src/stm32f30x_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
2031:../src/stm32f30x_tim.c **** {
 3701              		.loc 1 2031 0
 3702              		.cfi_startproc
 3703              		@ args = 0, pretend = 0, frame = 16
 3704              		@ frame_needed = 1, uses_anonymous_args = 0
 3705              		@ link register save eliminated.
 3706 129c 80B4     		push	{r7}
 3707              	.LCFI168:
 3708              		.cfi_def_cfa_offset 4
 3709              		.cfi_offset 7, -4
 3710 129e 85B0     		sub	sp, sp, #20
 3711              	.LCFI169:
 3712              		.cfi_def_cfa_offset 24
 3713 12a0 00AF     		add	r7, sp, #0
 3714              	.LCFI170:
 3715              		.cfi_def_cfa_register 7
 3716 12a2 7860     		str	r0, [r7, #4]
 3717 12a4 0B46     		mov	r3, r1
 3718 12a6 7B80     		strh	r3, [r7, #2]	@ movhi
2032:../src/stm32f30x_tim.c ****   uint32_t tmpccer = 0;
 3719              		.loc 1 2032 0
 3720 12a8 4FF00003 		mov	r3, #0
 3721 12ac FB60     		str	r3, [r7, #12]
2033:../src/stm32f30x_tim.c **** 
2034:../src/stm32f30x_tim.c ****   /* Check the parameters */
2035:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2036:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
2037:../src/stm32f30x_tim.c **** 
2038:../src/stm32f30x_tim.c ****   tmpccer = TIMx->CCER;
 3722              		.loc 1 2038 0
 3723 12ae 7B68     		ldr	r3, [r7, #4]
 3724 12b0 1B6A     		ldr	r3, [r3, #32]
 3725 12b2 FB60     		str	r3, [r7, #12]
2039:../src/stm32f30x_tim.c **** 
2040:../src/stm32f30x_tim.c ****   /* Set or Reset the CC1P Bit */
2041:../src/stm32f30x_tim.c ****   tmpccer &= (uint32_t)(~TIM_CCER_CC1P);
 3726              		.loc 1 2041 0
 3727 12b4 FB68     		ldr	r3, [r7, #12]
 3728 12b6 23F00203 		bic	r3, r3, #2
 3729 12ba FB60     		str	r3, [r7, #12]
2042:../src/stm32f30x_tim.c ****   tmpccer |= TIM_OCPolarity;
 3730              		.loc 1 2042 0
 3731 12bc 7B88     		ldrh	r3, [r7, #2]
 3732 12be FA68     		ldr	r2, [r7, #12]
 3733 12c0 1343     		orrs	r3, r3, r2
 3734 12c2 FB60     		str	r3, [r7, #12]
2043:../src/stm32f30x_tim.c **** 
2044:../src/stm32f30x_tim.c ****   /* Write to TIMx CCER register */
2045:../src/stm32f30x_tim.c ****   TIMx->CCER = tmpccer;
 3735              		.loc 1 2045 0
 3736 12c4 7B68     		ldr	r3, [r7, #4]
 3737 12c6 FA68     		ldr	r2, [r7, #12]
 3738 12c8 1A62     		str	r2, [r3, #32]
2046:../src/stm32f30x_tim.c **** }
 3739              		.loc 1 2046 0
 3740 12ca 07F11407 		add	r7, r7, #20
 3741 12ce BD46     		mov	sp, r7
 3742 12d0 80BC     		pop	{r7}
 3743 12d2 7047     		bx	lr
 3744              		.cfi_endproc
 3745              	.LFE167:
 3747              		.align	2
 3748              		.global	TIM_OC1NPolarityConfig
 3749              		.thumb
 3750              		.thumb_func
 3752              	TIM_OC1NPolarityConfig:
 3753              	.LFB168:
2047:../src/stm32f30x_tim.c **** 
2048:../src/stm32f30x_tim.c **** /**
2049:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
2050:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIM peripheral.
2051:../src/stm32f30x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
2052:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
2053:../src/stm32f30x_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
2054:../src/stm32f30x_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
2055:../src/stm32f30x_tim.c ****   * @retval None
2056:../src/stm32f30x_tim.c ****   */
2057:../src/stm32f30x_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
2058:../src/stm32f30x_tim.c **** {
 3754              		.loc 1 2058 0
 3755              		.cfi_startproc
 3756              		@ args = 0, pretend = 0, frame = 16
 3757              		@ frame_needed = 1, uses_anonymous_args = 0
 3758              		@ link register save eliminated.
 3759 12d4 80B4     		push	{r7}
 3760              	.LCFI171:
 3761              		.cfi_def_cfa_offset 4
 3762              		.cfi_offset 7, -4
 3763 12d6 85B0     		sub	sp, sp, #20
 3764              	.LCFI172:
 3765              		.cfi_def_cfa_offset 24
 3766 12d8 00AF     		add	r7, sp, #0
 3767              	.LCFI173:
 3768              		.cfi_def_cfa_register 7
 3769 12da 7860     		str	r0, [r7, #4]
 3770 12dc 0B46     		mov	r3, r1
 3771 12de 7B80     		strh	r3, [r7, #2]	@ movhi
2059:../src/stm32f30x_tim.c ****   uint32_t tmpccer = 0;
 3772              		.loc 1 2059 0
 3773 12e0 4FF00003 		mov	r3, #0
 3774 12e4 FB60     		str	r3, [r7, #12]
2060:../src/stm32f30x_tim.c ****   /* Check the parameters */
2061:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2062:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
2063:../src/stm32f30x_tim.c ****    
2064:../src/stm32f30x_tim.c ****   tmpccer = TIMx->CCER;
 3775              		.loc 1 2064 0
 3776 12e6 7B68     		ldr	r3, [r7, #4]
 3777 12e8 1B6A     		ldr	r3, [r3, #32]
 3778 12ea FB60     		str	r3, [r7, #12]
2065:../src/stm32f30x_tim.c **** 
2066:../src/stm32f30x_tim.c ****   /* Set or Reset the CC1NP Bit */
2067:../src/stm32f30x_tim.c ****   tmpccer &= (uint32_t)~TIM_CCER_CC1NP;
 3779              		.loc 1 2067 0
 3780 12ec FB68     		ldr	r3, [r7, #12]
 3781 12ee 23F00803 		bic	r3, r3, #8
 3782 12f2 FB60     		str	r3, [r7, #12]
2068:../src/stm32f30x_tim.c ****   tmpccer |= TIM_OCNPolarity;
 3783              		.loc 1 2068 0
 3784 12f4 7B88     		ldrh	r3, [r7, #2]
 3785 12f6 FA68     		ldr	r2, [r7, #12]
 3786 12f8 1343     		orrs	r3, r3, r2
 3787 12fa FB60     		str	r3, [r7, #12]
2069:../src/stm32f30x_tim.c **** 
2070:../src/stm32f30x_tim.c ****   /* Write to TIMx CCER register */
2071:../src/stm32f30x_tim.c ****   TIMx->CCER = tmpccer;
 3788              		.loc 1 2071 0
 3789 12fc 7B68     		ldr	r3, [r7, #4]
 3790 12fe FA68     		ldr	r2, [r7, #12]
 3791 1300 1A62     		str	r2, [r3, #32]
2072:../src/stm32f30x_tim.c **** }
 3792              		.loc 1 2072 0
 3793 1302 07F11407 		add	r7, r7, #20
 3794 1306 BD46     		mov	sp, r7
 3795 1308 80BC     		pop	{r7}
 3796 130a 7047     		bx	lr
 3797              		.cfi_endproc
 3798              	.LFE168:
 3800              		.align	2
 3801              		.global	TIM_OC2PolarityConfig
 3802              		.thumb
 3803              		.thumb_func
 3805              	TIM_OC2PolarityConfig:
 3806              	.LFB169:
2073:../src/stm32f30x_tim.c **** 
2074:../src/stm32f30x_tim.c **** /**
2075:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
2076:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4 8 or 15 to select the TIM 
2077:../src/stm32f30x_tim.c ****   *         peripheral.
2078:../src/stm32f30x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
2079:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
2080:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
2081:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
2082:../src/stm32f30x_tim.c ****   * @retval None
2083:../src/stm32f30x_tim.c ****   */
2084:../src/stm32f30x_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
2085:../src/stm32f30x_tim.c **** {
 3807              		.loc 1 2085 0
 3808              		.cfi_startproc
 3809              		@ args = 0, pretend = 0, frame = 16
 3810              		@ frame_needed = 1, uses_anonymous_args = 0
 3811              		@ link register save eliminated.
 3812 130c 80B4     		push	{r7}
 3813              	.LCFI174:
 3814              		.cfi_def_cfa_offset 4
 3815              		.cfi_offset 7, -4
 3816 130e 85B0     		sub	sp, sp, #20
 3817              	.LCFI175:
 3818              		.cfi_def_cfa_offset 24
 3819 1310 00AF     		add	r7, sp, #0
 3820              	.LCFI176:
 3821              		.cfi_def_cfa_register 7
 3822 1312 7860     		str	r0, [r7, #4]
 3823 1314 0B46     		mov	r3, r1
 3824 1316 7B80     		strh	r3, [r7, #2]	@ movhi
2086:../src/stm32f30x_tim.c ****   uint32_t tmpccer = 0;
 3825              		.loc 1 2086 0
 3826 1318 4FF00003 		mov	r3, #0
 3827 131c FB60     		str	r3, [r7, #12]
2087:../src/stm32f30x_tim.c **** 
2088:../src/stm32f30x_tim.c ****   /* Check the parameters */
2089:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2090:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
2091:../src/stm32f30x_tim.c **** 
2092:../src/stm32f30x_tim.c ****   tmpccer = TIMx->CCER;
 3828              		.loc 1 2092 0
 3829 131e 7B68     		ldr	r3, [r7, #4]
 3830 1320 1B6A     		ldr	r3, [r3, #32]
 3831 1322 FB60     		str	r3, [r7, #12]
2093:../src/stm32f30x_tim.c **** 
2094:../src/stm32f30x_tim.c ****   /* Set or Reset the CC2P Bit */
2095:../src/stm32f30x_tim.c ****   tmpccer &= (uint32_t)(~TIM_CCER_CC2P);
 3832              		.loc 1 2095 0
 3833 1324 FB68     		ldr	r3, [r7, #12]
 3834 1326 23F02003 		bic	r3, r3, #32
 3835 132a FB60     		str	r3, [r7, #12]
2096:../src/stm32f30x_tim.c ****   tmpccer |= ((uint32_t)TIM_OCPolarity << 4);
 3836              		.loc 1 2096 0
 3837 132c 7B88     		ldrh	r3, [r7, #2]
 3838 132e 4FEA0313 		lsl	r3, r3, #4
 3839 1332 FA68     		ldr	r2, [r7, #12]
 3840 1334 1343     		orrs	r3, r3, r2
 3841 1336 FB60     		str	r3, [r7, #12]
2097:../src/stm32f30x_tim.c **** 
2098:../src/stm32f30x_tim.c ****   /* Write to TIMx CCER register */
2099:../src/stm32f30x_tim.c ****   TIMx->CCER = tmpccer;
 3842              		.loc 1 2099 0
 3843 1338 7B68     		ldr	r3, [r7, #4]
 3844 133a FA68     		ldr	r2, [r7, #12]
 3845 133c 1A62     		str	r2, [r3, #32]
2100:../src/stm32f30x_tim.c **** }
 3846              		.loc 1 2100 0
 3847 133e 07F11407 		add	r7, r7, #20
 3848 1342 BD46     		mov	sp, r7
 3849 1344 80BC     		pop	{r7}
 3850 1346 7047     		bx	lr
 3851              		.cfi_endproc
 3852              	.LFE169:
 3854              		.align	2
 3855              		.global	TIM_OC2NPolarityConfig
 3856              		.thumb
 3857              		.thumb_func
 3859              	TIM_OC2NPolarityConfig:
 3860              	.LFB170:
2101:../src/stm32f30x_tim.c **** 
2102:../src/stm32f30x_tim.c **** /**
2103:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
2104:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
2105:../src/stm32f30x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
2106:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
2107:../src/stm32f30x_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
2108:../src/stm32f30x_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
2109:../src/stm32f30x_tim.c ****   * @retval None
2110:../src/stm32f30x_tim.c ****   */
2111:../src/stm32f30x_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
2112:../src/stm32f30x_tim.c **** {
 3861              		.loc 1 2112 0
 3862              		.cfi_startproc
 3863              		@ args = 0, pretend = 0, frame = 16
 3864              		@ frame_needed = 1, uses_anonymous_args = 0
 3865              		@ link register save eliminated.
 3866 1348 80B4     		push	{r7}
 3867              	.LCFI177:
 3868              		.cfi_def_cfa_offset 4
 3869              		.cfi_offset 7, -4
 3870 134a 85B0     		sub	sp, sp, #20
 3871              	.LCFI178:
 3872              		.cfi_def_cfa_offset 24
 3873 134c 00AF     		add	r7, sp, #0
 3874              	.LCFI179:
 3875              		.cfi_def_cfa_register 7
 3876 134e 7860     		str	r0, [r7, #4]
 3877 1350 0B46     		mov	r3, r1
 3878 1352 7B80     		strh	r3, [r7, #2]	@ movhi
2113:../src/stm32f30x_tim.c ****   uint32_t tmpccer = 0;
 3879              		.loc 1 2113 0
 3880 1354 4FF00003 		mov	r3, #0
 3881 1358 FB60     		str	r3, [r7, #12]
2114:../src/stm32f30x_tim.c **** 
2115:../src/stm32f30x_tim.c ****   /* Check the parameters */
2116:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2117:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
2118:../src/stm32f30x_tim.c ****   
2119:../src/stm32f30x_tim.c ****   tmpccer = TIMx->CCER;
 3882              		.loc 1 2119 0
 3883 135a 7B68     		ldr	r3, [r7, #4]
 3884 135c 1B6A     		ldr	r3, [r3, #32]
 3885 135e FB60     		str	r3, [r7, #12]
2120:../src/stm32f30x_tim.c **** 
2121:../src/stm32f30x_tim.c ****   /* Set or Reset the CC2NP Bit */
2122:../src/stm32f30x_tim.c ****   tmpccer &= (uint32_t)~TIM_CCER_CC2NP;
 3886              		.loc 1 2122 0
 3887 1360 FB68     		ldr	r3, [r7, #12]
 3888 1362 23F08003 		bic	r3, r3, #128
 3889 1366 FB60     		str	r3, [r7, #12]
2123:../src/stm32f30x_tim.c ****   tmpccer |= ((uint32_t)TIM_OCNPolarity << 4);
 3890              		.loc 1 2123 0
 3891 1368 7B88     		ldrh	r3, [r7, #2]
 3892 136a 4FEA0313 		lsl	r3, r3, #4
 3893 136e FA68     		ldr	r2, [r7, #12]
 3894 1370 1343     		orrs	r3, r3, r2
 3895 1372 FB60     		str	r3, [r7, #12]
2124:../src/stm32f30x_tim.c **** 
2125:../src/stm32f30x_tim.c ****   /* Write to TIMx CCER register */
2126:../src/stm32f30x_tim.c ****   TIMx->CCER = tmpccer;
 3896              		.loc 1 2126 0
 3897 1374 7B68     		ldr	r3, [r7, #4]
 3898 1376 FA68     		ldr	r2, [r7, #12]
 3899 1378 1A62     		str	r2, [r3, #32]
2127:../src/stm32f30x_tim.c **** }
 3900              		.loc 1 2127 0
 3901 137a 07F11407 		add	r7, r7, #20
 3902 137e BD46     		mov	sp, r7
 3903 1380 80BC     		pop	{r7}
 3904 1382 7047     		bx	lr
 3905              		.cfi_endproc
 3906              	.LFE170:
 3908              		.align	2
 3909              		.global	TIM_OC3PolarityConfig
 3910              		.thumb
 3911              		.thumb_func
 3913              	TIM_OC3PolarityConfig:
 3914              	.LFB171:
2128:../src/stm32f30x_tim.c **** 
2129:../src/stm32f30x_tim.c **** /**
2130:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
2131:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4 or 8 to select the TIM peripheral.
2132:../src/stm32f30x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
2133:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
2134:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
2135:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
2136:../src/stm32f30x_tim.c ****   * @retval None
2137:../src/stm32f30x_tim.c ****   */
2138:../src/stm32f30x_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
2139:../src/stm32f30x_tim.c **** {
 3915              		.loc 1 2139 0
 3916              		.cfi_startproc
 3917              		@ args = 0, pretend = 0, frame = 16
 3918              		@ frame_needed = 1, uses_anonymous_args = 0
 3919              		@ link register save eliminated.
 3920 1384 80B4     		push	{r7}
 3921              	.LCFI180:
 3922              		.cfi_def_cfa_offset 4
 3923              		.cfi_offset 7, -4
 3924 1386 85B0     		sub	sp, sp, #20
 3925              	.LCFI181:
 3926              		.cfi_def_cfa_offset 24
 3927 1388 00AF     		add	r7, sp, #0
 3928              	.LCFI182:
 3929              		.cfi_def_cfa_register 7
 3930 138a 7860     		str	r0, [r7, #4]
 3931 138c 0B46     		mov	r3, r1
 3932 138e 7B80     		strh	r3, [r7, #2]	@ movhi
2140:../src/stm32f30x_tim.c ****   uint32_t tmpccer = 0;
 3933              		.loc 1 2140 0
 3934 1390 4FF00003 		mov	r3, #0
 3935 1394 FB60     		str	r3, [r7, #12]
2141:../src/stm32f30x_tim.c **** 
2142:../src/stm32f30x_tim.c ****   /* Check the parameters */
2143:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2144:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
2145:../src/stm32f30x_tim.c **** 
2146:../src/stm32f30x_tim.c ****   tmpccer = TIMx->CCER;
 3936              		.loc 1 2146 0
 3937 1396 7B68     		ldr	r3, [r7, #4]
 3938 1398 1B6A     		ldr	r3, [r3, #32]
 3939 139a FB60     		str	r3, [r7, #12]
2147:../src/stm32f30x_tim.c **** 
2148:../src/stm32f30x_tim.c ****   /* Set or Reset the CC3P Bit */
2149:../src/stm32f30x_tim.c ****   tmpccer &= (uint32_t)~TIM_CCER_CC3P;
 3940              		.loc 1 2149 0
 3941 139c FB68     		ldr	r3, [r7, #12]
 3942 139e 23F40073 		bic	r3, r3, #512
 3943 13a2 FB60     		str	r3, [r7, #12]
2150:../src/stm32f30x_tim.c ****   tmpccer |= ((uint32_t)TIM_OCPolarity << 8);
 3944              		.loc 1 2150 0
 3945 13a4 7B88     		ldrh	r3, [r7, #2]
 3946 13a6 4FEA0323 		lsl	r3, r3, #8
 3947 13aa FA68     		ldr	r2, [r7, #12]
 3948 13ac 1343     		orrs	r3, r3, r2
 3949 13ae FB60     		str	r3, [r7, #12]
2151:../src/stm32f30x_tim.c **** 
2152:../src/stm32f30x_tim.c ****   /* Write to TIMx CCER register */
2153:../src/stm32f30x_tim.c ****   TIMx->CCER = tmpccer;
 3950              		.loc 1 2153 0
 3951 13b0 7B68     		ldr	r3, [r7, #4]
 3952 13b2 FA68     		ldr	r2, [r7, #12]
 3953 13b4 1A62     		str	r2, [r3, #32]
2154:../src/stm32f30x_tim.c **** }
 3954              		.loc 1 2154 0
 3955 13b6 07F11407 		add	r7, r7, #20
 3956 13ba BD46     		mov	sp, r7
 3957 13bc 80BC     		pop	{r7}
 3958 13be 7047     		bx	lr
 3959              		.cfi_endproc
 3960              	.LFE171:
 3962              		.align	2
 3963              		.global	TIM_OC3NPolarityConfig
 3964              		.thumb
 3965              		.thumb_func
 3967              	TIM_OC3NPolarityConfig:
 3968              	.LFB172:
2155:../src/stm32f30x_tim.c **** 
2156:../src/stm32f30x_tim.c **** /**
2157:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
2158:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
2159:../src/stm32f30x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
2160:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
2161:../src/stm32f30x_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
2162:../src/stm32f30x_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
2163:../src/stm32f30x_tim.c ****   * @retval None
2164:../src/stm32f30x_tim.c ****   */
2165:../src/stm32f30x_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
2166:../src/stm32f30x_tim.c **** {
 3969              		.loc 1 2166 0
 3970              		.cfi_startproc
 3971              		@ args = 0, pretend = 0, frame = 16
 3972              		@ frame_needed = 1, uses_anonymous_args = 0
 3973              		@ link register save eliminated.
 3974 13c0 80B4     		push	{r7}
 3975              	.LCFI183:
 3976              		.cfi_def_cfa_offset 4
 3977              		.cfi_offset 7, -4
 3978 13c2 85B0     		sub	sp, sp, #20
 3979              	.LCFI184:
 3980              		.cfi_def_cfa_offset 24
 3981 13c4 00AF     		add	r7, sp, #0
 3982              	.LCFI185:
 3983              		.cfi_def_cfa_register 7
 3984 13c6 7860     		str	r0, [r7, #4]
 3985 13c8 0B46     		mov	r3, r1
 3986 13ca 7B80     		strh	r3, [r7, #2]	@ movhi
2167:../src/stm32f30x_tim.c ****   uint32_t tmpccer = 0;
 3987              		.loc 1 2167 0
 3988 13cc 4FF00003 		mov	r3, #0
 3989 13d0 FB60     		str	r3, [r7, #12]
2168:../src/stm32f30x_tim.c ****  
2169:../src/stm32f30x_tim.c ****   /* Check the parameters */
2170:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2171:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
2172:../src/stm32f30x_tim.c ****     
2173:../src/stm32f30x_tim.c ****   tmpccer = TIMx->CCER;
 3990              		.loc 1 2173 0
 3991 13d2 7B68     		ldr	r3, [r7, #4]
 3992 13d4 1B6A     		ldr	r3, [r3, #32]
 3993 13d6 FB60     		str	r3, [r7, #12]
2174:../src/stm32f30x_tim.c **** 
2175:../src/stm32f30x_tim.c ****   /* Set or Reset the CC3NP Bit */
2176:../src/stm32f30x_tim.c ****   tmpccer &= (uint32_t)~TIM_CCER_CC3NP;
 3994              		.loc 1 2176 0
 3995 13d8 FB68     		ldr	r3, [r7, #12]
 3996 13da 23F40063 		bic	r3, r3, #2048
 3997 13de FB60     		str	r3, [r7, #12]
2177:../src/stm32f30x_tim.c ****   tmpccer |= ((uint32_t)TIM_OCNPolarity << 8);
 3998              		.loc 1 2177 0
 3999 13e0 7B88     		ldrh	r3, [r7, #2]
 4000 13e2 4FEA0323 		lsl	r3, r3, #8
 4001 13e6 FA68     		ldr	r2, [r7, #12]
 4002 13e8 1343     		orrs	r3, r3, r2
 4003 13ea FB60     		str	r3, [r7, #12]
2178:../src/stm32f30x_tim.c **** 
2179:../src/stm32f30x_tim.c ****   /* Write to TIMx CCER register */
2180:../src/stm32f30x_tim.c ****   TIMx->CCER = tmpccer;
 4004              		.loc 1 2180 0
 4005 13ec 7B68     		ldr	r3, [r7, #4]
 4006 13ee FA68     		ldr	r2, [r7, #12]
 4007 13f0 1A62     		str	r2, [r3, #32]
2181:../src/stm32f30x_tim.c **** }
 4008              		.loc 1 2181 0
 4009 13f2 07F11407 		add	r7, r7, #20
 4010 13f6 BD46     		mov	sp, r7
 4011 13f8 80BC     		pop	{r7}
 4012 13fa 7047     		bx	lr
 4013              		.cfi_endproc
 4014              	.LFE172:
 4016              		.align	2
 4017              		.global	TIM_OC4PolarityConfig
 4018              		.thumb
 4019              		.thumb_func
 4021              	TIM_OC4PolarityConfig:
 4022              	.LFB173:
2182:../src/stm32f30x_tim.c **** 
2183:../src/stm32f30x_tim.c **** /**
2184:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
2185:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4 or 8 to select the TIM peripheral.
2186:../src/stm32f30x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
2187:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
2188:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
2189:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
2190:../src/stm32f30x_tim.c ****   * @retval None
2191:../src/stm32f30x_tim.c ****   */
2192:../src/stm32f30x_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
2193:../src/stm32f30x_tim.c **** {
 4023              		.loc 1 2193 0
 4024              		.cfi_startproc
 4025              		@ args = 0, pretend = 0, frame = 16
 4026              		@ frame_needed = 1, uses_anonymous_args = 0
 4027              		@ link register save eliminated.
 4028 13fc 80B4     		push	{r7}
 4029              	.LCFI186:
 4030              		.cfi_def_cfa_offset 4
 4031              		.cfi_offset 7, -4
 4032 13fe 85B0     		sub	sp, sp, #20
 4033              	.LCFI187:
 4034              		.cfi_def_cfa_offset 24
 4035 1400 00AF     		add	r7, sp, #0
 4036              	.LCFI188:
 4037              		.cfi_def_cfa_register 7
 4038 1402 7860     		str	r0, [r7, #4]
 4039 1404 0B46     		mov	r3, r1
 4040 1406 7B80     		strh	r3, [r7, #2]	@ movhi
2194:../src/stm32f30x_tim.c ****   uint32_t tmpccer = 0;
 4041              		.loc 1 2194 0
 4042 1408 4FF00003 		mov	r3, #0
 4043 140c FB60     		str	r3, [r7, #12]
2195:../src/stm32f30x_tim.c **** 
2196:../src/stm32f30x_tim.c ****   /* Check the parameters */
2197:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2198:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
2199:../src/stm32f30x_tim.c **** 
2200:../src/stm32f30x_tim.c ****   tmpccer = TIMx->CCER;
 4044              		.loc 1 2200 0
 4045 140e 7B68     		ldr	r3, [r7, #4]
 4046 1410 1B6A     		ldr	r3, [r3, #32]
 4047 1412 FB60     		str	r3, [r7, #12]
2201:../src/stm32f30x_tim.c **** 
2202:../src/stm32f30x_tim.c ****   /* Set or Reset the CC4P Bit */
2203:../src/stm32f30x_tim.c ****   tmpccer &= (uint32_t)~TIM_CCER_CC4P;
 4048              		.loc 1 2203 0
 4049 1414 FB68     		ldr	r3, [r7, #12]
 4050 1416 23F40053 		bic	r3, r3, #8192
 4051 141a FB60     		str	r3, [r7, #12]
2204:../src/stm32f30x_tim.c ****   tmpccer |= ((uint32_t)TIM_OCPolarity << 12);
 4052              		.loc 1 2204 0
 4053 141c 7B88     		ldrh	r3, [r7, #2]
 4054 141e 4FEA0333 		lsl	r3, r3, #12
 4055 1422 FA68     		ldr	r2, [r7, #12]
 4056 1424 1343     		orrs	r3, r3, r2
 4057 1426 FB60     		str	r3, [r7, #12]
2205:../src/stm32f30x_tim.c **** 
2206:../src/stm32f30x_tim.c ****   /* Write to TIMx CCER register */
2207:../src/stm32f30x_tim.c ****   TIMx->CCER = tmpccer;
 4058              		.loc 1 2207 0
 4059 1428 7B68     		ldr	r3, [r7, #4]
 4060 142a FA68     		ldr	r2, [r7, #12]
 4061 142c 1A62     		str	r2, [r3, #32]
2208:../src/stm32f30x_tim.c **** }
 4062              		.loc 1 2208 0
 4063 142e 07F11407 		add	r7, r7, #20
 4064 1432 BD46     		mov	sp, r7
 4065 1434 80BC     		pop	{r7}
 4066 1436 7047     		bx	lr
 4067              		.cfi_endproc
 4068              	.LFE173:
 4070              		.align	2
 4071              		.global	TIM_OC5PolarityConfig
 4072              		.thumb
 4073              		.thumb_func
 4075              	TIM_OC5PolarityConfig:
 4076              	.LFB174:
2209:../src/stm32f30x_tim.c **** 
2210:../src/stm32f30x_tim.c **** /**
2211:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx channel 5 polarity.
2212:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
2213:../src/stm32f30x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC5 Polarity
2214:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
2215:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
2216:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
2217:../src/stm32f30x_tim.c ****   * @retval None
2218:../src/stm32f30x_tim.c ****   */
2219:../src/stm32f30x_tim.c **** void TIM_OC5PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
2220:../src/stm32f30x_tim.c **** {
 4077              		.loc 1 2220 0
 4078              		.cfi_startproc
 4079              		@ args = 0, pretend = 0, frame = 16
 4080              		@ frame_needed = 1, uses_anonymous_args = 0
 4081              		@ link register save eliminated.
 4082 1438 80B4     		push	{r7}
 4083              	.LCFI189:
 4084              		.cfi_def_cfa_offset 4
 4085              		.cfi_offset 7, -4
 4086 143a 85B0     		sub	sp, sp, #20
 4087              	.LCFI190:
 4088              		.cfi_def_cfa_offset 24
 4089 143c 00AF     		add	r7, sp, #0
 4090              	.LCFI191:
 4091              		.cfi_def_cfa_register 7
 4092 143e 7860     		str	r0, [r7, #4]
 4093 1440 0B46     		mov	r3, r1
 4094 1442 7B80     		strh	r3, [r7, #2]	@ movhi
2221:../src/stm32f30x_tim.c ****   uint32_t tmpccer = 0;
 4095              		.loc 1 2221 0
 4096 1444 4FF00003 		mov	r3, #0
 4097 1448 FB60     		str	r3, [r7, #12]
2222:../src/stm32f30x_tim.c **** 
2223:../src/stm32f30x_tim.c ****   /* Check the parameters */
2224:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2225:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
2226:../src/stm32f30x_tim.c **** 
2227:../src/stm32f30x_tim.c ****   tmpccer = TIMx->CCER;
 4098              		.loc 1 2227 0
 4099 144a 7B68     		ldr	r3, [r7, #4]
 4100 144c 1B6A     		ldr	r3, [r3, #32]
 4101 144e FB60     		str	r3, [r7, #12]
2228:../src/stm32f30x_tim.c **** 
2229:../src/stm32f30x_tim.c ****   /* Set or Reset the CC5P Bit */
2230:../src/stm32f30x_tim.c ****   tmpccer &= (uint32_t)~TIM_CCER_CC5P;
 4102              		.loc 1 2230 0
 4103 1450 FB68     		ldr	r3, [r7, #12]
 4104 1452 23F40033 		bic	r3, r3, #131072
 4105 1456 FB60     		str	r3, [r7, #12]
2231:../src/stm32f30x_tim.c ****   tmpccer |= ((uint32_t)TIM_OCPolarity << 16);
 4106              		.loc 1 2231 0
 4107 1458 7B88     		ldrh	r3, [r7, #2]
 4108 145a 4FEA0343 		lsl	r3, r3, #16
 4109 145e FA68     		ldr	r2, [r7, #12]
 4110 1460 1343     		orrs	r3, r3, r2
 4111 1462 FB60     		str	r3, [r7, #12]
2232:../src/stm32f30x_tim.c **** 
2233:../src/stm32f30x_tim.c ****   /* Write to TIMx CCER register */
2234:../src/stm32f30x_tim.c ****   TIMx->CCER = tmpccer;
 4112              		.loc 1 2234 0
 4113 1464 7B68     		ldr	r3, [r7, #4]
 4114 1466 FA68     		ldr	r2, [r7, #12]
 4115 1468 1A62     		str	r2, [r3, #32]
2235:../src/stm32f30x_tim.c **** }
 4116              		.loc 1 2235 0
 4117 146a 07F11407 		add	r7, r7, #20
 4118 146e BD46     		mov	sp, r7
 4119 1470 80BC     		pop	{r7}
 4120 1472 7047     		bx	lr
 4121              		.cfi_endproc
 4122              	.LFE174:
 4124              		.align	2
 4125              		.global	TIM_OC6PolarityConfig
 4126              		.thumb
 4127              		.thumb_func
 4129              	TIM_OC6PolarityConfig:
 4130              	.LFB175:
2236:../src/stm32f30x_tim.c **** 
2237:../src/stm32f30x_tim.c **** /**
2238:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx channel 6 polarity.
2239:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
2240:../src/stm32f30x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC6 Polarity
2241:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
2242:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
2243:../src/stm32f30x_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
2244:../src/stm32f30x_tim.c ****   * @retval None
2245:../src/stm32f30x_tim.c ****   */
2246:../src/stm32f30x_tim.c **** void TIM_OC6PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
2247:../src/stm32f30x_tim.c **** {
 4131              		.loc 1 2247 0
 4132              		.cfi_startproc
 4133              		@ args = 0, pretend = 0, frame = 16
 4134              		@ frame_needed = 1, uses_anonymous_args = 0
 4135              		@ link register save eliminated.
 4136 1474 80B4     		push	{r7}
 4137              	.LCFI192:
 4138              		.cfi_def_cfa_offset 4
 4139              		.cfi_offset 7, -4
 4140 1476 85B0     		sub	sp, sp, #20
 4141              	.LCFI193:
 4142              		.cfi_def_cfa_offset 24
 4143 1478 00AF     		add	r7, sp, #0
 4144              	.LCFI194:
 4145              		.cfi_def_cfa_register 7
 4146 147a 7860     		str	r0, [r7, #4]
 4147 147c 0B46     		mov	r3, r1
 4148 147e 7B80     		strh	r3, [r7, #2]	@ movhi
2248:../src/stm32f30x_tim.c ****   uint32_t tmpccer = 0;
 4149              		.loc 1 2248 0
 4150 1480 4FF00003 		mov	r3, #0
 4151 1484 FB60     		str	r3, [r7, #12]
2249:../src/stm32f30x_tim.c **** 
2250:../src/stm32f30x_tim.c ****   /* Check the parameters */
2251:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2252:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
2253:../src/stm32f30x_tim.c **** 
2254:../src/stm32f30x_tim.c ****   tmpccer = TIMx->CCER;
 4152              		.loc 1 2254 0
 4153 1486 7B68     		ldr	r3, [r7, #4]
 4154 1488 1B6A     		ldr	r3, [r3, #32]
 4155 148a FB60     		str	r3, [r7, #12]
2255:../src/stm32f30x_tim.c **** 
2256:../src/stm32f30x_tim.c ****   /* Set or Reset the CC6P Bit */
2257:../src/stm32f30x_tim.c ****   tmpccer &= (uint32_t)~TIM_CCER_CC6P;
 4156              		.loc 1 2257 0
 4157 148c FB68     		ldr	r3, [r7, #12]
 4158 148e 23F40013 		bic	r3, r3, #2097152
 4159 1492 FB60     		str	r3, [r7, #12]
2258:../src/stm32f30x_tim.c ****   tmpccer |= ((uint32_t)TIM_OCPolarity << 20);
 4160              		.loc 1 2258 0
 4161 1494 7B88     		ldrh	r3, [r7, #2]
 4162 1496 4FEA0353 		lsl	r3, r3, #20
 4163 149a FA68     		ldr	r2, [r7, #12]
 4164 149c 1343     		orrs	r3, r3, r2
 4165 149e FB60     		str	r3, [r7, #12]
2259:../src/stm32f30x_tim.c **** 
2260:../src/stm32f30x_tim.c ****   /* Write to TIMx CCER register */
2261:../src/stm32f30x_tim.c ****   TIMx->CCER = tmpccer;
 4166              		.loc 1 2261 0
 4167 14a0 7B68     		ldr	r3, [r7, #4]
 4168 14a2 FA68     		ldr	r2, [r7, #12]
 4169 14a4 1A62     		str	r2, [r3, #32]
2262:../src/stm32f30x_tim.c **** }
 4170              		.loc 1 2262 0
 4171 14a6 07F11407 		add	r7, r7, #20
 4172 14aa BD46     		mov	sp, r7
 4173 14ac 80BC     		pop	{r7}
 4174 14ae 7047     		bx	lr
 4175              		.cfi_endproc
 4176              	.LFE175:
 4178              		.align	2
 4179              		.global	TIM_CCxCmd
 4180              		.thumb
 4181              		.thumb_func
 4183              	TIM_CCxCmd:
 4184              	.LFB176:
2263:../src/stm32f30x_tim.c **** 
2264:../src/stm32f30x_tim.c **** /**
2265:../src/stm32f30x_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
2266:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8, 15, 16 or 17 to select the TIM peripheral.
2267:../src/stm32f30x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
2268:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
2269:../src/stm32f30x_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
2270:../src/stm32f30x_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
2271:../src/stm32f30x_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
2272:../src/stm32f30x_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
2273:../src/stm32f30x_tim.c ****   *            @arg TIM_Channel_5: TIM Channel 5
2274:../src/stm32f30x_tim.c ****   *            @arg TIM_Channel_6: TIM Channel 6    
2275:../src/stm32f30x_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
2276:../src/stm32f30x_tim.c ****   *          This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
2277:../src/stm32f30x_tim.c ****   * @retval None
2278:../src/stm32f30x_tim.c ****   */
2279:../src/stm32f30x_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
2280:../src/stm32f30x_tim.c **** {
 4185              		.loc 1 2280 0
 4186              		.cfi_startproc
 4187              		@ args = 0, pretend = 0, frame = 16
 4188              		@ frame_needed = 1, uses_anonymous_args = 0
 4189              		@ link register save eliminated.
 4190 14b0 80B4     		push	{r7}
 4191              	.LCFI195:
 4192              		.cfi_def_cfa_offset 4
 4193              		.cfi_offset 7, -4
 4194 14b2 85B0     		sub	sp, sp, #20
 4195              	.LCFI196:
 4196              		.cfi_def_cfa_offset 24
 4197 14b4 00AF     		add	r7, sp, #0
 4198              	.LCFI197:
 4199              		.cfi_def_cfa_register 7
 4200 14b6 7860     		str	r0, [r7, #4]
 4201 14b8 1346     		mov	r3, r2
 4202 14ba 0A46     		mov	r2, r1	@ movhi
 4203 14bc 7A80     		strh	r2, [r7, #2]	@ movhi
 4204 14be 3B80     		strh	r3, [r7, #0]	@ movhi
2281:../src/stm32f30x_tim.c ****   uint32_t tmp = 0;
 4205              		.loc 1 2281 0
 4206 14c0 4FF00003 		mov	r3, #0
 4207 14c4 FB60     		str	r3, [r7, #12]
2282:../src/stm32f30x_tim.c **** 
2283:../src/stm32f30x_tim.c ****   /* Check the parameters */
2284:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
2285:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
2286:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
2287:../src/stm32f30x_tim.c **** 
2288:../src/stm32f30x_tim.c ****   tmp = (uint32_t)CCER_CCE_SET << (uint32_t)TIM_Channel;
 4208              		.loc 1 2288 0
 4209 14c6 7B88     		ldrh	r3, [r7, #2]
 4210 14c8 4FF00102 		mov	r2, #1
 4211 14cc 02FA03F3 		lsl	r3, r2, r3
 4212 14d0 FB60     		str	r3, [r7, #12]
2289:../src/stm32f30x_tim.c **** 
2290:../src/stm32f30x_tim.c ****   /* Reset the CCxE Bit */
2291:../src/stm32f30x_tim.c ****   TIMx->CCER &= (uint32_t)(~tmp);
 4213              		.loc 1 2291 0
 4214 14d2 7B68     		ldr	r3, [r7, #4]
 4215 14d4 1A6A     		ldr	r2, [r3, #32]
 4216 14d6 FB68     		ldr	r3, [r7, #12]
 4217 14d8 6FEA0303 		mvn	r3, r3
 4218 14dc 1A40     		ands	r2, r2, r3
 4219 14de 7B68     		ldr	r3, [r7, #4]
 4220 14e0 1A62     		str	r2, [r3, #32]
2292:../src/stm32f30x_tim.c **** 
2293:../src/stm32f30x_tim.c ****   /* Set or reset the CCxE Bit */ 
2294:../src/stm32f30x_tim.c ****   TIMx->CCER |=  ((uint32_t)TIM_CCx << (uint32_t)TIM_Channel);
 4221              		.loc 1 2294 0
 4222 14e2 7B68     		ldr	r3, [r7, #4]
 4223 14e4 1A6A     		ldr	r2, [r3, #32]
 4224 14e6 3988     		ldrh	r1, [r7, #0]
 4225 14e8 7B88     		ldrh	r3, [r7, #2]
 4226 14ea 01FA03F3 		lsl	r3, r1, r3
 4227 14ee 1A43     		orrs	r2, r2, r3
 4228 14f0 7B68     		ldr	r3, [r7, #4]
 4229 14f2 1A62     		str	r2, [r3, #32]
2295:../src/stm32f30x_tim.c **** }
 4230              		.loc 1 2295 0
 4231 14f4 07F11407 		add	r7, r7, #20
 4232 14f8 BD46     		mov	sp, r7
 4233 14fa 80BC     		pop	{r7}
 4234 14fc 7047     		bx	lr
 4235              		.cfi_endproc
 4236              	.LFE176:
 4238 14fe 00BF     		.align	2
 4239              		.global	TIM_CCxNCmd
 4240              		.thumb
 4241              		.thumb_func
 4243              	TIM_CCxNCmd:
 4244              	.LFB177:
2296:../src/stm32f30x_tim.c **** 
2297:../src/stm32f30x_tim.c **** /**
2298:../src/stm32f30x_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
2299:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIM peripheral.
2300:../src/stm32f30x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
2301:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
2302:../src/stm32f30x_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
2303:../src/stm32f30x_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
2304:../src/stm32f30x_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
2305:../src/stm32f30x_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
2306:../src/stm32f30x_tim.c ****   *          This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
2307:../src/stm32f30x_tim.c ****   * @retval None
2308:../src/stm32f30x_tim.c ****   */
2309:../src/stm32f30x_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
2310:../src/stm32f30x_tim.c **** {
 4245              		.loc 1 2310 0
 4246              		.cfi_startproc
 4247              		@ args = 0, pretend = 0, frame = 16
 4248              		@ frame_needed = 1, uses_anonymous_args = 0
 4249              		@ link register save eliminated.
 4250 1500 80B4     		push	{r7}
 4251              	.LCFI198:
 4252              		.cfi_def_cfa_offset 4
 4253              		.cfi_offset 7, -4
 4254 1502 85B0     		sub	sp, sp, #20
 4255              	.LCFI199:
 4256              		.cfi_def_cfa_offset 24
 4257 1504 00AF     		add	r7, sp, #0
 4258              	.LCFI200:
 4259              		.cfi_def_cfa_register 7
 4260 1506 7860     		str	r0, [r7, #4]
 4261 1508 1346     		mov	r3, r2
 4262 150a 0A46     		mov	r2, r1	@ movhi
 4263 150c 7A80     		strh	r2, [r7, #2]	@ movhi
 4264 150e 3B80     		strh	r3, [r7, #0]	@ movhi
2311:../src/stm32f30x_tim.c ****   uint32_t tmp = 0;
 4265              		.loc 1 2311 0
 4266 1510 4FF00003 		mov	r3, #0
 4267 1514 FB60     		str	r3, [r7, #12]
2312:../src/stm32f30x_tim.c **** 
2313:../src/stm32f30x_tim.c ****   /* Check the parameters */
2314:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2315:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
2316:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
2317:../src/stm32f30x_tim.c **** 
2318:../src/stm32f30x_tim.c ****   tmp = (uint32_t)CCER_CCNE_SET << (uint32_t)TIM_Channel;
 4268              		.loc 1 2318 0
 4269 1516 7B88     		ldrh	r3, [r7, #2]
 4270 1518 4FF00402 		mov	r2, #4
 4271 151c 02FA03F3 		lsl	r3, r2, r3
 4272 1520 FB60     		str	r3, [r7, #12]
2319:../src/stm32f30x_tim.c **** 
2320:../src/stm32f30x_tim.c ****   /* Reset the CCxNE Bit */
2321:../src/stm32f30x_tim.c ****   TIMx->CCER &= (uint32_t) ~tmp;
 4273              		.loc 1 2321 0
 4274 1522 7B68     		ldr	r3, [r7, #4]
 4275 1524 1A6A     		ldr	r2, [r3, #32]
 4276 1526 FB68     		ldr	r3, [r7, #12]
 4277 1528 6FEA0303 		mvn	r3, r3
 4278 152c 1A40     		ands	r2, r2, r3
 4279 152e 7B68     		ldr	r3, [r7, #4]
 4280 1530 1A62     		str	r2, [r3, #32]
2322:../src/stm32f30x_tim.c **** 
2323:../src/stm32f30x_tim.c ****   /* Set or reset the CCxNE Bit */ 
2324:../src/stm32f30x_tim.c ****   TIMx->CCER |=  ((uint32_t)TIM_CCxN << (uint32_t)TIM_Channel);
 4281              		.loc 1 2324 0
 4282 1532 7B68     		ldr	r3, [r7, #4]
 4283 1534 1A6A     		ldr	r2, [r3, #32]
 4284 1536 3988     		ldrh	r1, [r7, #0]
 4285 1538 7B88     		ldrh	r3, [r7, #2]
 4286 153a 01FA03F3 		lsl	r3, r1, r3
 4287 153e 1A43     		orrs	r2, r2, r3
 4288 1540 7B68     		ldr	r3, [r7, #4]
 4289 1542 1A62     		str	r2, [r3, #32]
2325:../src/stm32f30x_tim.c **** }
 4290              		.loc 1 2325 0
 4291 1544 07F11407 		add	r7, r7, #20
 4292 1548 BD46     		mov	sp, r7
 4293 154a 80BC     		pop	{r7}
 4294 154c 7047     		bx	lr
 4295              		.cfi_endproc
 4296              	.LFE177:
 4298 154e 00BF     		.align	2
 4299              		.global	TIM_ICInit
 4300              		.thumb
 4301              		.thumb_func
 4303              	TIM_ICInit:
 4304              	.LFB178:
2326:../src/stm32f30x_tim.c **** /**
2327:../src/stm32f30x_tim.c ****   * @}
2328:../src/stm32f30x_tim.c ****   */
2329:../src/stm32f30x_tim.c **** 
2330:../src/stm32f30x_tim.c **** /** @defgroup TIM_Group3 Input Capture management functions
2331:../src/stm32f30x_tim.c ****  *  @brief    Input Capture management functions 
2332:../src/stm32f30x_tim.c ****  *
2333:../src/stm32f30x_tim.c **** @verbatim   
2334:../src/stm32f30x_tim.c ****  ===============================================================================
2335:../src/stm32f30x_tim.c ****                ##### Input Capture management functions #####
2336:../src/stm32f30x_tim.c ****  ===============================================================================  
2337:../src/stm32f30x_tim.c ****          
2338:../src/stm32f30x_tim.c ****   *** TIM Driver: how to use it in Input Capture Mode ***
2339:../src/stm32f30x_tim.c ****   =======================================================
2340:../src/stm32f30x_tim.c ****   [..] 
2341:../src/stm32f30x_tim.c ****   To use the Timer in Input Capture mode, the following steps are mandatory:
2342:../src/stm32f30x_tim.c ****        
2343:../src/stm32f30x_tim.c ****       (#) Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
2344:../src/stm32f30x_tim.c ****        
2345:../src/stm32f30x_tim.c ****       (#) Configure the TIM pins by configuring the corresponding GPIO pins
2346:../src/stm32f30x_tim.c ****        
2347:../src/stm32f30x_tim.c ****       (#) Configure the Time base unit as described in the first part of this driver,
2348:../src/stm32f30x_tim.c ****           if needed, else the Timer will run with the default configuration:
2349:../src/stm32f30x_tim.c ****           (++) Autoreload value = 0xFFFF
2350:../src/stm32f30x_tim.c ****           (++) Prescaler value = 0x0000
2351:../src/stm32f30x_tim.c ****           (++) Counter mode = Up counting
2352:../src/stm32f30x_tim.c ****           (++) Clock Division = TIM_CKD_DIV1
2353:../src/stm32f30x_tim.c ****           
2354:../src/stm32f30x_tim.c ****       (#) Fill the TIM_ICInitStruct with the desired parameters including:
2355:../src/stm32f30x_tim.c ****           (++) TIM Channel: TIM_Channel
2356:../src/stm32f30x_tim.c ****           (++) TIM Input Capture polarity: TIM_ICPolarity
2357:../src/stm32f30x_tim.c ****           (++) TIM Input Capture selection: TIM_ICSelection
2358:../src/stm32f30x_tim.c ****           (++) TIM Input Capture Prescaler: TIM_ICPrescaler
2359:../src/stm32f30x_tim.c ****           (++) TIM Input CApture filter value: TIM_ICFilter
2360:../src/stm32f30x_tim.c ****        
2361:../src/stm32f30x_tim.c ****       (#) Call TIM_ICInit(TIMx, &TIM_ICInitStruct) to configure the desired channel with the 
2362:../src/stm32f30x_tim.c ****           corresponding configuration and to measure only frequency or duty cycle of the input sign
2363:../src/stm32f30x_tim.c ****           or,
2364:../src/stm32f30x_tim.c ****           Call TIM_PWMIConfig(TIMx, &TIM_ICInitStruct) to configure the desired channels with the 
2365:../src/stm32f30x_tim.c ****           corresponding configuration and to measure the frequency and the duty cycle of the input 
2366:../src/stm32f30x_tim.c ****           
2367:../src/stm32f30x_tim.c ****       (#) Enable the NVIC or the DMA to read the measured frequency. 
2368:../src/stm32f30x_tim.c ****           
2369:../src/stm32f30x_tim.c ****       (#) Enable the corresponding interrupt (or DMA request) to read the Captured value,
2370:../src/stm32f30x_tim.c ****           using the function TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx)) 
2371:../src/stm32f30x_tim.c ****        
2372:../src/stm32f30x_tim.c ****       (#) Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
2373:../src/stm32f30x_tim.c ****        
2374:../src/stm32f30x_tim.c ****       (#) Use TIM_GetCapturex(TIMx); to read the captured value.
2375:../src/stm32f30x_tim.c ****   [..]        
2376:../src/stm32f30x_tim.c ****       (@) All other functions can be used separately to modify, if needed,
2377:../src/stm32f30x_tim.c ****           a specific feature of the Timer. 
2378:../src/stm32f30x_tim.c **** 
2379:../src/stm32f30x_tim.c **** @endverbatim
2380:../src/stm32f30x_tim.c ****   * @{
2381:../src/stm32f30x_tim.c ****   */
2382:../src/stm32f30x_tim.c **** 
2383:../src/stm32f30x_tim.c **** /**
2384:../src/stm32f30x_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified parameters
2385:../src/stm32f30x_tim.c ****   *         in the TIM_ICInitStruct.
2386:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8, 15, 16 or 17 to select the TIM peripheral.
2387:../src/stm32f30x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
2388:../src/stm32f30x_tim.c ****   *         the configuration information for the specified TIM peripheral.
2389:../src/stm32f30x_tim.c ****   * @retval None
2390:../src/stm32f30x_tim.c ****   */
2391:../src/stm32f30x_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
2392:../src/stm32f30x_tim.c **** {
 4305              		.loc 1 2392 0
 4306              		.cfi_startproc
 4307              		@ args = 0, pretend = 0, frame = 8
 4308              		@ frame_needed = 1, uses_anonymous_args = 0
 4309 1550 80B5     		push	{r7, lr}
 4310              	.LCFI201:
 4311              		.cfi_def_cfa_offset 8
 4312              		.cfi_offset 7, -8
 4313              		.cfi_offset 14, -4
 4314 1552 82B0     		sub	sp, sp, #8
 4315              	.LCFI202:
 4316              		.cfi_def_cfa_offset 16
 4317 1554 00AF     		add	r7, sp, #0
 4318              	.LCFI203:
 4319              		.cfi_def_cfa_register 7
 4320 1556 7860     		str	r0, [r7, #4]
 4321 1558 3960     		str	r1, [r7, #0]
2393:../src/stm32f30x_tim.c ****   /* Check the parameters */
2394:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2395:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
2396:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
2397:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
2398:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
2399:../src/stm32f30x_tim.c ****   
2400:../src/stm32f30x_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 4322              		.loc 1 2400 0
 4323 155a 3B68     		ldr	r3, [r7, #0]
 4324 155c 1B88     		ldrh	r3, [r3, #0]
 4325 155e 002B     		cmp	r3, #0
 4326 1560 0FD1     		bne	.L117
2401:../src/stm32f30x_tim.c ****   {
2402:../src/stm32f30x_tim.c ****     /* TI1 Configuration */
2403:../src/stm32f30x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 4327              		.loc 1 2403 0
 4328 1562 3B68     		ldr	r3, [r7, #0]
 4329 1564 5988     		ldrh	r1, [r3, #2]
2404:../src/stm32f30x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 4330              		.loc 1 2404 0
 4331 1566 3B68     		ldr	r3, [r7, #0]
2403:../src/stm32f30x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 4332              		.loc 1 2403 0
 4333 1568 9A88     		ldrh	r2, [r3, #4]
2405:../src/stm32f30x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 4334              		.loc 1 2405 0
 4335 156a 3B68     		ldr	r3, [r7, #0]
2403:../src/stm32f30x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 4336              		.loc 1 2403 0
 4337 156c 1B89     		ldrh	r3, [r3, #8]
 4338 156e 7868     		ldr	r0, [r7, #4]
 4339 1570 00F002FD 		bl	TI1_Config
2406:../src/stm32f30x_tim.c ****     /* Set the Input Capture Prescaler value */
2407:../src/stm32f30x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 4340              		.loc 1 2407 0
 4341 1574 3B68     		ldr	r3, [r7, #0]
 4342 1576 DB88     		ldrh	r3, [r3, #6]
 4343 1578 7868     		ldr	r0, [r7, #4]
 4344 157a 1946     		mov	r1, r3
 4345 157c FFF7FEFF 		bl	TIM_SetIC1Prescaler
 4346 1580 36E0     		b	.L116
 4347              	.L117:
2408:../src/stm32f30x_tim.c ****   }
2409:../src/stm32f30x_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 4348              		.loc 1 2409 0
 4349 1582 3B68     		ldr	r3, [r7, #0]
 4350 1584 1B88     		ldrh	r3, [r3, #0]
 4351 1586 042B     		cmp	r3, #4
 4352 1588 0FD1     		bne	.L119
2410:../src/stm32f30x_tim.c ****   {
2411:../src/stm32f30x_tim.c ****     /* TI2 Configuration */
2412:../src/stm32f30x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 4353              		.loc 1 2412 0
 4354 158a 3B68     		ldr	r3, [r7, #0]
 4355 158c 5988     		ldrh	r1, [r3, #2]
2413:../src/stm32f30x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 4356              		.loc 1 2413 0
 4357 158e 3B68     		ldr	r3, [r7, #0]
2412:../src/stm32f30x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 4358              		.loc 1 2412 0
 4359 1590 9A88     		ldrh	r2, [r3, #4]
2414:../src/stm32f30x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 4360              		.loc 1 2414 0
 4361 1592 3B68     		ldr	r3, [r7, #0]
2412:../src/stm32f30x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 4362              		.loc 1 2412 0
 4363 1594 1B89     		ldrh	r3, [r3, #8]
 4364 1596 7868     		ldr	r0, [r7, #4]
 4365 1598 00F02AFD 		bl	TI2_Config
2415:../src/stm32f30x_tim.c ****     /* Set the Input Capture Prescaler value */
2416:../src/stm32f30x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 4366              		.loc 1 2416 0
 4367 159c 3B68     		ldr	r3, [r7, #0]
 4368 159e DB88     		ldrh	r3, [r3, #6]
 4369 15a0 7868     		ldr	r0, [r7, #4]
 4370 15a2 1946     		mov	r1, r3
 4371 15a4 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 4372 15a8 22E0     		b	.L116
 4373              	.L119:
2417:../src/stm32f30x_tim.c ****   }
2418:../src/stm32f30x_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 4374              		.loc 1 2418 0
 4375 15aa 3B68     		ldr	r3, [r7, #0]
 4376 15ac 1B88     		ldrh	r3, [r3, #0]
 4377 15ae 082B     		cmp	r3, #8
 4378 15b0 0FD1     		bne	.L120
2419:../src/stm32f30x_tim.c ****   {
2420:../src/stm32f30x_tim.c ****     /* TI3 Configuration */
2421:../src/stm32f30x_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 4379              		.loc 1 2421 0
 4380 15b2 3B68     		ldr	r3, [r7, #0]
 4381 15b4 5988     		ldrh	r1, [r3, #2]
2422:../src/stm32f30x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 4382              		.loc 1 2422 0
 4383 15b6 3B68     		ldr	r3, [r7, #0]
2421:../src/stm32f30x_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 4384              		.loc 1 2421 0
 4385 15b8 9A88     		ldrh	r2, [r3, #4]
2423:../src/stm32f30x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 4386              		.loc 1 2423 0
 4387 15ba 3B68     		ldr	r3, [r7, #0]
2421:../src/stm32f30x_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 4388              		.loc 1 2421 0
 4389 15bc 1B89     		ldrh	r3, [r3, #8]
 4390 15be 7868     		ldr	r0, [r7, #4]
 4391 15c0 00F060FD 		bl	TI3_Config
2424:../src/stm32f30x_tim.c ****     /* Set the Input Capture Prescaler value */
2425:../src/stm32f30x_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 4392              		.loc 1 2425 0
 4393 15c4 3B68     		ldr	r3, [r7, #0]
 4394 15c6 DB88     		ldrh	r3, [r3, #6]
 4395 15c8 7868     		ldr	r0, [r7, #4]
 4396 15ca 1946     		mov	r1, r3
 4397 15cc FFF7FEFF 		bl	TIM_SetIC3Prescaler
 4398 15d0 0EE0     		b	.L116
 4399              	.L120:
2426:../src/stm32f30x_tim.c ****   }
2427:../src/stm32f30x_tim.c ****   else
2428:../src/stm32f30x_tim.c ****   {
2429:../src/stm32f30x_tim.c ****     /* TI4 Configuration */
2430:../src/stm32f30x_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 4400              		.loc 1 2430 0
 4401 15d2 3B68     		ldr	r3, [r7, #0]
 4402 15d4 5988     		ldrh	r1, [r3, #2]
2431:../src/stm32f30x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 4403              		.loc 1 2431 0
 4404 15d6 3B68     		ldr	r3, [r7, #0]
2430:../src/stm32f30x_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 4405              		.loc 1 2430 0
 4406 15d8 9A88     		ldrh	r2, [r3, #4]
2432:../src/stm32f30x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 4407              		.loc 1 2432 0
 4408 15da 3B68     		ldr	r3, [r7, #0]
2430:../src/stm32f30x_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 4409              		.loc 1 2430 0
 4410 15dc 1B89     		ldrh	r3, [r3, #8]
 4411 15de 7868     		ldr	r0, [r7, #4]
 4412 15e0 00F096FD 		bl	TI4_Config
2433:../src/stm32f30x_tim.c ****     /* Set the Input Capture Prescaler value */
2434:../src/stm32f30x_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 4413              		.loc 1 2434 0
 4414 15e4 3B68     		ldr	r3, [r7, #0]
 4415 15e6 DB88     		ldrh	r3, [r3, #6]
 4416 15e8 7868     		ldr	r0, [r7, #4]
 4417 15ea 1946     		mov	r1, r3
 4418 15ec FFF7FEFF 		bl	TIM_SetIC4Prescaler
 4419              	.L116:
2435:../src/stm32f30x_tim.c ****   }
2436:../src/stm32f30x_tim.c **** }
 4420              		.loc 1 2436 0
 4421 15f0 07F10807 		add	r7, r7, #8
 4422 15f4 BD46     		mov	sp, r7
 4423 15f6 80BD     		pop	{r7, pc}
 4424              		.cfi_endproc
 4425              	.LFE178:
 4427              		.align	2
 4428              		.global	TIM_ICStructInit
 4429              		.thumb
 4430              		.thumb_func
 4432              	TIM_ICStructInit:
 4433              	.LFB179:
2437:../src/stm32f30x_tim.c **** 
2438:../src/stm32f30x_tim.c **** /**
2439:../src/stm32f30x_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
2440:../src/stm32f30x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
2441:../src/stm32f30x_tim.c ****   *         be initialized.
2442:../src/stm32f30x_tim.c ****   * @retval None
2443:../src/stm32f30x_tim.c ****   */
2444:../src/stm32f30x_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
2445:../src/stm32f30x_tim.c **** {
 4434              		.loc 1 2445 0
 4435              		.cfi_startproc
 4436              		@ args = 0, pretend = 0, frame = 8
 4437              		@ frame_needed = 1, uses_anonymous_args = 0
 4438              		@ link register save eliminated.
 4439 15f8 80B4     		push	{r7}
 4440              	.LCFI204:
 4441              		.cfi_def_cfa_offset 4
 4442              		.cfi_offset 7, -4
 4443 15fa 83B0     		sub	sp, sp, #12
 4444              	.LCFI205:
 4445              		.cfi_def_cfa_offset 16
 4446 15fc 00AF     		add	r7, sp, #0
 4447              	.LCFI206:
 4448              		.cfi_def_cfa_register 7
 4449 15fe 7860     		str	r0, [r7, #4]
2446:../src/stm32f30x_tim.c ****   /* Set the default configuration */
2447:../src/stm32f30x_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 4450              		.loc 1 2447 0
 4451 1600 7B68     		ldr	r3, [r7, #4]
 4452 1602 4FF00002 		mov	r2, #0
 4453 1606 1A80     		strh	r2, [r3, #0]	@ movhi
2448:../src/stm32f30x_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 4454              		.loc 1 2448 0
 4455 1608 7B68     		ldr	r3, [r7, #4]
 4456 160a 4FF00002 		mov	r2, #0
 4457 160e 5A80     		strh	r2, [r3, #2]	@ movhi
2449:../src/stm32f30x_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 4458              		.loc 1 2449 0
 4459 1610 7B68     		ldr	r3, [r7, #4]
 4460 1612 4FF00102 		mov	r2, #1
 4461 1616 9A80     		strh	r2, [r3, #4]	@ movhi
2450:../src/stm32f30x_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 4462              		.loc 1 2450 0
 4463 1618 7B68     		ldr	r3, [r7, #4]
 4464 161a 4FF00002 		mov	r2, #0
 4465 161e DA80     		strh	r2, [r3, #6]	@ movhi
2451:../src/stm32f30x_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 4466              		.loc 1 2451 0
 4467 1620 7B68     		ldr	r3, [r7, #4]
 4468 1622 4FF00002 		mov	r2, #0
 4469 1626 1A81     		strh	r2, [r3, #8]	@ movhi
2452:../src/stm32f30x_tim.c **** }
 4470              		.loc 1 2452 0
 4471 1628 07F10C07 		add	r7, r7, #12
 4472 162c BD46     		mov	sp, r7
 4473 162e 80BC     		pop	{r7}
 4474 1630 7047     		bx	lr
 4475              		.cfi_endproc
 4476              	.LFE179:
 4478 1632 00BF     		.align	2
 4479              		.global	TIM_PWMIConfig
 4480              		.thumb
 4481              		.thumb_func
 4483              	TIM_PWMIConfig:
 4484              	.LFB180:
2453:../src/stm32f30x_tim.c **** 
2454:../src/stm32f30x_tim.c **** /**
2455:../src/stm32f30x_tim.c ****   * @brief  Configures the TIM peripheral according to the specified parameters
2456:../src/stm32f30x_tim.c ****   *         in the TIM_ICInitStruct to measure an external PWM signal.
2457:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 8 or 15 to select the TIM 
2458:../src/stm32f30x_tim.c ****   *         peripheral.
2459:../src/stm32f30x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
2460:../src/stm32f30x_tim.c ****   *         the configuration information for the specified TIM peripheral.
2461:../src/stm32f30x_tim.c ****   * @retval None
2462:../src/stm32f30x_tim.c ****   */
2463:../src/stm32f30x_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
2464:../src/stm32f30x_tim.c **** {
 4485              		.loc 1 2464 0
 4486              		.cfi_startproc
 4487              		@ args = 0, pretend = 0, frame = 16
 4488              		@ frame_needed = 1, uses_anonymous_args = 0
 4489 1634 80B5     		push	{r7, lr}
 4490              	.LCFI207:
 4491              		.cfi_def_cfa_offset 8
 4492              		.cfi_offset 7, -8
 4493              		.cfi_offset 14, -4
 4494 1636 84B0     		sub	sp, sp, #16
 4495              	.LCFI208:
 4496              		.cfi_def_cfa_offset 24
 4497 1638 00AF     		add	r7, sp, #0
 4498              	.LCFI209:
 4499              		.cfi_def_cfa_register 7
 4500 163a 7860     		str	r0, [r7, #4]
 4501 163c 3960     		str	r1, [r7, #0]
2465:../src/stm32f30x_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 4502              		.loc 1 2465 0
 4503 163e 4FF00003 		mov	r3, #0
 4504 1642 FB81     		strh	r3, [r7, #14]	@ movhi
2466:../src/stm32f30x_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
 4505              		.loc 1 2466 0
 4506 1644 4FF00103 		mov	r3, #1
 4507 1648 BB81     		strh	r3, [r7, #12]	@ movhi
2467:../src/stm32f30x_tim.c **** 
2468:../src/stm32f30x_tim.c ****   /* Check the parameters */
2469:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2470:../src/stm32f30x_tim.c **** 
2471:../src/stm32f30x_tim.c ****   /* Select the Opposite Input Polarity */
2472:../src/stm32f30x_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
 4508              		.loc 1 2472 0
 4509 164a 3B68     		ldr	r3, [r7, #0]
 4510 164c 5B88     		ldrh	r3, [r3, #2]
 4511 164e 002B     		cmp	r3, #0
 4512 1650 03D1     		bne	.L123
2473:../src/stm32f30x_tim.c ****   {
2474:../src/stm32f30x_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 4513              		.loc 1 2474 0
 4514 1652 4FF00203 		mov	r3, #2
 4515 1656 FB81     		strh	r3, [r7, #14]	@ movhi
 4516 1658 02E0     		b	.L124
 4517              	.L123:
2475:../src/stm32f30x_tim.c ****   }
2476:../src/stm32f30x_tim.c ****   else
2477:../src/stm32f30x_tim.c ****   {
2478:../src/stm32f30x_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
 4518              		.loc 1 2478 0
 4519 165a 4FF00003 		mov	r3, #0
 4520 165e FB81     		strh	r3, [r7, #14]	@ movhi
 4521              	.L124:
2479:../src/stm32f30x_tim.c ****   }
2480:../src/stm32f30x_tim.c ****   /* Select the Opposite Input */
2481:../src/stm32f30x_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 4522              		.loc 1 2481 0
 4523 1660 3B68     		ldr	r3, [r7, #0]
 4524 1662 9B88     		ldrh	r3, [r3, #4]
 4525 1664 012B     		cmp	r3, #1
 4526 1666 03D1     		bne	.L125
2482:../src/stm32f30x_tim.c ****   {
2483:../src/stm32f30x_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 4527              		.loc 1 2483 0
 4528 1668 4FF00203 		mov	r3, #2
 4529 166c BB81     		strh	r3, [r7, #12]	@ movhi
 4530 166e 02E0     		b	.L126
 4531              	.L125:
2484:../src/stm32f30x_tim.c ****   }
2485:../src/stm32f30x_tim.c ****   else
2486:../src/stm32f30x_tim.c ****   {
2487:../src/stm32f30x_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
 4532              		.loc 1 2487 0
 4533 1670 4FF00103 		mov	r3, #1
 4534 1674 BB81     		strh	r3, [r7, #12]	@ movhi
 4535              	.L126:
2488:../src/stm32f30x_tim.c ****   }
2489:../src/stm32f30x_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 4536              		.loc 1 2489 0
 4537 1676 3B68     		ldr	r3, [r7, #0]
 4538 1678 1B88     		ldrh	r3, [r3, #0]
 4539 167a 002B     		cmp	r3, #0
 4540 167c 1CD1     		bne	.L127
2490:../src/stm32f30x_tim.c ****   {
2491:../src/stm32f30x_tim.c ****     /* TI1 Configuration */
2492:../src/stm32f30x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 4541              		.loc 1 2492 0
 4542 167e 3B68     		ldr	r3, [r7, #0]
 4543 1680 5988     		ldrh	r1, [r3, #2]
 4544 1682 3B68     		ldr	r3, [r7, #0]
 4545 1684 9A88     		ldrh	r2, [r3, #4]
2493:../src/stm32f30x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 4546              		.loc 1 2493 0
 4547 1686 3B68     		ldr	r3, [r7, #0]
2492:../src/stm32f30x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 4548              		.loc 1 2492 0
 4549 1688 1B89     		ldrh	r3, [r3, #8]
 4550 168a 7868     		ldr	r0, [r7, #4]
 4551 168c 00F074FC 		bl	TI1_Config
2494:../src/stm32f30x_tim.c ****     /* Set the Input Capture Prescaler value */
2495:../src/stm32f30x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 4552              		.loc 1 2495 0
 4553 1690 3B68     		ldr	r3, [r7, #0]
 4554 1692 DB88     		ldrh	r3, [r3, #6]
 4555 1694 7868     		ldr	r0, [r7, #4]
 4556 1696 1946     		mov	r1, r3
 4557 1698 FFF7FEFF 		bl	TIM_SetIC1Prescaler
2496:../src/stm32f30x_tim.c ****     /* TI2 Configuration */
2497:../src/stm32f30x_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 4558              		.loc 1 2497 0
 4559 169c 3B68     		ldr	r3, [r7, #0]
 4560 169e 1B89     		ldrh	r3, [r3, #8]
 4561 16a0 F989     		ldrh	r1, [r7, #14]
 4562 16a2 BA89     		ldrh	r2, [r7, #12]
 4563 16a4 7868     		ldr	r0, [r7, #4]
 4564 16a6 00F0A3FC 		bl	TI2_Config
2498:../src/stm32f30x_tim.c ****     /* Set the Input Capture Prescaler value */
2499:../src/stm32f30x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 4565              		.loc 1 2499 0
 4566 16aa 3B68     		ldr	r3, [r7, #0]
 4567 16ac DB88     		ldrh	r3, [r3, #6]
 4568 16ae 7868     		ldr	r0, [r7, #4]
 4569 16b0 1946     		mov	r1, r3
 4570 16b2 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 4571 16b6 1BE0     		b	.L122
 4572              	.L127:
2500:../src/stm32f30x_tim.c ****   }
2501:../src/stm32f30x_tim.c ****   else
2502:../src/stm32f30x_tim.c ****   { 
2503:../src/stm32f30x_tim.c ****     /* TI2 Configuration */
2504:../src/stm32f30x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 4573              		.loc 1 2504 0
 4574 16b8 3B68     		ldr	r3, [r7, #0]
 4575 16ba 5988     		ldrh	r1, [r3, #2]
 4576 16bc 3B68     		ldr	r3, [r7, #0]
 4577 16be 9A88     		ldrh	r2, [r3, #4]
2505:../src/stm32f30x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 4578              		.loc 1 2505 0
 4579 16c0 3B68     		ldr	r3, [r7, #0]
2504:../src/stm32f30x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 4580              		.loc 1 2504 0
 4581 16c2 1B89     		ldrh	r3, [r3, #8]
 4582 16c4 7868     		ldr	r0, [r7, #4]
 4583 16c6 00F093FC 		bl	TI2_Config
2506:../src/stm32f30x_tim.c ****     /* Set the Input Capture Prescaler value */
2507:../src/stm32f30x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 4584              		.loc 1 2507 0
 4585 16ca 3B68     		ldr	r3, [r7, #0]
 4586 16cc DB88     		ldrh	r3, [r3, #6]
 4587 16ce 7868     		ldr	r0, [r7, #4]
 4588 16d0 1946     		mov	r1, r3
 4589 16d2 FFF7FEFF 		bl	TIM_SetIC2Prescaler
2508:../src/stm32f30x_tim.c ****     /* TI1 Configuration */
2509:../src/stm32f30x_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 4590              		.loc 1 2509 0
 4591 16d6 3B68     		ldr	r3, [r7, #0]
 4592 16d8 1B89     		ldrh	r3, [r3, #8]
 4593 16da F989     		ldrh	r1, [r7, #14]
 4594 16dc BA89     		ldrh	r2, [r7, #12]
 4595 16de 7868     		ldr	r0, [r7, #4]
 4596 16e0 00F04AFC 		bl	TI1_Config
2510:../src/stm32f30x_tim.c ****     /* Set the Input Capture Prescaler value */
2511:../src/stm32f30x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 4597              		.loc 1 2511 0
 4598 16e4 3B68     		ldr	r3, [r7, #0]
 4599 16e6 DB88     		ldrh	r3, [r3, #6]
 4600 16e8 7868     		ldr	r0, [r7, #4]
 4601 16ea 1946     		mov	r1, r3
 4602 16ec FFF7FEFF 		bl	TIM_SetIC1Prescaler
 4603              	.L122:
2512:../src/stm32f30x_tim.c ****   }
2513:../src/stm32f30x_tim.c **** }
 4604              		.loc 1 2513 0
 4605 16f0 07F11007 		add	r7, r7, #16
 4606 16f4 BD46     		mov	sp, r7
 4607 16f6 80BD     		pop	{r7, pc}
 4608              		.cfi_endproc
 4609              	.LFE180:
 4611              		.align	2
 4612              		.global	TIM_GetCapture1
 4613              		.thumb
 4614              		.thumb_func
 4616              	TIM_GetCapture1:
 4617              	.LFB181:
2514:../src/stm32f30x_tim.c **** 
2515:../src/stm32f30x_tim.c **** /**
2516:../src/stm32f30x_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2517:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8, 15, 16 or 17 to select the TIM peripheral.
2518:../src/stm32f30x_tim.c ****   * @retval Capture Compare 1 Register value.
2519:../src/stm32f30x_tim.c ****   */
2520:../src/stm32f30x_tim.c **** uint32_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2521:../src/stm32f30x_tim.c **** {
 4618              		.loc 1 2521 0
 4619              		.cfi_startproc
 4620              		@ args = 0, pretend = 0, frame = 8
 4621              		@ frame_needed = 1, uses_anonymous_args = 0
 4622              		@ link register save eliminated.
 4623 16f8 80B4     		push	{r7}
 4624              	.LCFI210:
 4625              		.cfi_def_cfa_offset 4
 4626              		.cfi_offset 7, -4
 4627 16fa 83B0     		sub	sp, sp, #12
 4628              	.LCFI211:
 4629              		.cfi_def_cfa_offset 16
 4630 16fc 00AF     		add	r7, sp, #0
 4631              	.LCFI212:
 4632              		.cfi_def_cfa_register 7
 4633 16fe 7860     		str	r0, [r7, #4]
2522:../src/stm32f30x_tim.c ****   /* Check the parameters */
2523:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2524:../src/stm32f30x_tim.c **** 
2525:../src/stm32f30x_tim.c ****   /* Get the Capture 1 Register value */
2526:../src/stm32f30x_tim.c ****   return TIMx->CCR1;
 4634              		.loc 1 2526 0
 4635 1700 7B68     		ldr	r3, [r7, #4]
 4636 1702 5B6B     		ldr	r3, [r3, #52]
2527:../src/stm32f30x_tim.c **** }
 4637              		.loc 1 2527 0
 4638 1704 1846     		mov	r0, r3
 4639 1706 07F10C07 		add	r7, r7, #12
 4640 170a BD46     		mov	sp, r7
 4641 170c 80BC     		pop	{r7}
 4642 170e 7047     		bx	lr
 4643              		.cfi_endproc
 4644              	.LFE181:
 4646              		.align	2
 4647              		.global	TIM_GetCapture2
 4648              		.thumb
 4649              		.thumb_func
 4651              	TIM_GetCapture2:
 4652              	.LFB182:
2528:../src/stm32f30x_tim.c **** 
2529:../src/stm32f30x_tim.c **** /**
2530:../src/stm32f30x_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2531:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8 or 15 to select the TIM 
2532:../src/stm32f30x_tim.c ****   *         peripheral.
2533:../src/stm32f30x_tim.c ****   * @retval Capture Compare 2 Register value.
2534:../src/stm32f30x_tim.c ****   */
2535:../src/stm32f30x_tim.c **** uint32_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2536:../src/stm32f30x_tim.c **** {
 4653              		.loc 1 2536 0
 4654              		.cfi_startproc
 4655              		@ args = 0, pretend = 0, frame = 8
 4656              		@ frame_needed = 1, uses_anonymous_args = 0
 4657              		@ link register save eliminated.
 4658 1710 80B4     		push	{r7}
 4659              	.LCFI213:
 4660              		.cfi_def_cfa_offset 4
 4661              		.cfi_offset 7, -4
 4662 1712 83B0     		sub	sp, sp, #12
 4663              	.LCFI214:
 4664              		.cfi_def_cfa_offset 16
 4665 1714 00AF     		add	r7, sp, #0
 4666              	.LCFI215:
 4667              		.cfi_def_cfa_register 7
 4668 1716 7860     		str	r0, [r7, #4]
2537:../src/stm32f30x_tim.c ****   /* Check the parameters */
2538:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2539:../src/stm32f30x_tim.c **** 
2540:../src/stm32f30x_tim.c ****   /* Get the Capture 2 Register value */
2541:../src/stm32f30x_tim.c ****   return TIMx->CCR2;
 4669              		.loc 1 2541 0
 4670 1718 7B68     		ldr	r3, [r7, #4]
 4671 171a 9B6B     		ldr	r3, [r3, #56]
2542:../src/stm32f30x_tim.c **** }
 4672              		.loc 1 2542 0
 4673 171c 1846     		mov	r0, r3
 4674 171e 07F10C07 		add	r7, r7, #12
 4675 1722 BD46     		mov	sp, r7
 4676 1724 80BC     		pop	{r7}
 4677 1726 7047     		bx	lr
 4678              		.cfi_endproc
 4679              	.LFE182:
 4681              		.align	2
 4682              		.global	TIM_GetCapture3
 4683              		.thumb
 4684              		.thumb_func
 4686              	TIM_GetCapture3:
 4687              	.LFB183:
2543:../src/stm32f30x_tim.c **** 
2544:../src/stm32f30x_tim.c **** /**
2545:../src/stm32f30x_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2546:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4 or 8 to select the TIM peripheral.
2547:../src/stm32f30x_tim.c ****   * @retval Capture Compare 3 Register value.
2548:../src/stm32f30x_tim.c ****   */
2549:../src/stm32f30x_tim.c **** uint32_t TIM_GetCapture3(TIM_TypeDef* TIMx)
2550:../src/stm32f30x_tim.c **** {
 4688              		.loc 1 2550 0
 4689              		.cfi_startproc
 4690              		@ args = 0, pretend = 0, frame = 8
 4691              		@ frame_needed = 1, uses_anonymous_args = 0
 4692              		@ link register save eliminated.
 4693 1728 80B4     		push	{r7}
 4694              	.LCFI216:
 4695              		.cfi_def_cfa_offset 4
 4696              		.cfi_offset 7, -4
 4697 172a 83B0     		sub	sp, sp, #12
 4698              	.LCFI217:
 4699              		.cfi_def_cfa_offset 16
 4700 172c 00AF     		add	r7, sp, #0
 4701              	.LCFI218:
 4702              		.cfi_def_cfa_register 7
 4703 172e 7860     		str	r0, [r7, #4]
2551:../src/stm32f30x_tim.c ****   /* Check the parameters */
2552:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
2553:../src/stm32f30x_tim.c **** 
2554:../src/stm32f30x_tim.c ****   /* Get the Capture 3 Register value */
2555:../src/stm32f30x_tim.c ****   return TIMx->CCR3;
 4704              		.loc 1 2555 0
 4705 1730 7B68     		ldr	r3, [r7, #4]
 4706 1732 DB6B     		ldr	r3, [r3, #60]
2556:../src/stm32f30x_tim.c **** }
 4707              		.loc 1 2556 0
 4708 1734 1846     		mov	r0, r3
 4709 1736 07F10C07 		add	r7, r7, #12
 4710 173a BD46     		mov	sp, r7
 4711 173c 80BC     		pop	{r7}
 4712 173e 7047     		bx	lr
 4713              		.cfi_endproc
 4714              	.LFE183:
 4716              		.align	2
 4717              		.global	TIM_GetCapture4
 4718              		.thumb
 4719              		.thumb_func
 4721              	TIM_GetCapture4:
 4722              	.LFB184:
2557:../src/stm32f30x_tim.c **** 
2558:../src/stm32f30x_tim.c **** /**
2559:../src/stm32f30x_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2560:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4 or 8 to select the TIM peripheral.
2561:../src/stm32f30x_tim.c ****   * @retval Capture Compare 4 Register value.
2562:../src/stm32f30x_tim.c ****   */
2563:../src/stm32f30x_tim.c **** uint32_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2564:../src/stm32f30x_tim.c **** {
 4723              		.loc 1 2564 0
 4724              		.cfi_startproc
 4725              		@ args = 0, pretend = 0, frame = 8
 4726              		@ frame_needed = 1, uses_anonymous_args = 0
 4727              		@ link register save eliminated.
 4728 1740 80B4     		push	{r7}
 4729              	.LCFI219:
 4730              		.cfi_def_cfa_offset 4
 4731              		.cfi_offset 7, -4
 4732 1742 83B0     		sub	sp, sp, #12
 4733              	.LCFI220:
 4734              		.cfi_def_cfa_offset 16
 4735 1744 00AF     		add	r7, sp, #0
 4736              	.LCFI221:
 4737              		.cfi_def_cfa_register 7
 4738 1746 7860     		str	r0, [r7, #4]
2565:../src/stm32f30x_tim.c ****   /* Check the parameters */
2566:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2567:../src/stm32f30x_tim.c **** 
2568:../src/stm32f30x_tim.c ****   /* Get the Capture 4 Register value */
2569:../src/stm32f30x_tim.c ****   return TIMx->CCR4;
 4739              		.loc 1 2569 0
 4740 1748 7B68     		ldr	r3, [r7, #4]
 4741 174a 1B6C     		ldr	r3, [r3, #64]
2570:../src/stm32f30x_tim.c **** }
 4742              		.loc 1 2570 0
 4743 174c 1846     		mov	r0, r3
 4744 174e 07F10C07 		add	r7, r7, #12
 4745 1752 BD46     		mov	sp, r7
 4746 1754 80BC     		pop	{r7}
 4747 1756 7047     		bx	lr
 4748              		.cfi_endproc
 4749              	.LFE184:
 4751              		.align	2
 4752              		.global	TIM_SetIC1Prescaler
 4753              		.thumb
 4754              		.thumb_func
 4756              	TIM_SetIC1Prescaler:
 4757              	.LFB185:
2571:../src/stm32f30x_tim.c **** 
2572:../src/stm32f30x_tim.c **** /**
2573:../src/stm32f30x_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2574:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8, 15, 16 or 17 to select the TIM peripheral.
2575:../src/stm32f30x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2576:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
2577:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2578:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2579:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2580:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2581:../src/stm32f30x_tim.c ****   * @retval None
2582:../src/stm32f30x_tim.c ****   */
2583:../src/stm32f30x_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2584:../src/stm32f30x_tim.c **** {
 4758              		.loc 1 2584 0
 4759              		.cfi_startproc
 4760              		@ args = 0, pretend = 0, frame = 8
 4761              		@ frame_needed = 1, uses_anonymous_args = 0
 4762              		@ link register save eliminated.
 4763 1758 80B4     		push	{r7}
 4764              	.LCFI222:
 4765              		.cfi_def_cfa_offset 4
 4766              		.cfi_offset 7, -4
 4767 175a 83B0     		sub	sp, sp, #12
 4768              	.LCFI223:
 4769              		.cfi_def_cfa_offset 16
 4770 175c 00AF     		add	r7, sp, #0
 4771              	.LCFI224:
 4772              		.cfi_def_cfa_register 7
 4773 175e 7860     		str	r0, [r7, #4]
 4774 1760 0B46     		mov	r3, r1
 4775 1762 7B80     		strh	r3, [r7, #2]	@ movhi
2585:../src/stm32f30x_tim.c ****   /* Check the parameters */
2586:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2587:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2588:../src/stm32f30x_tim.c **** 
2589:../src/stm32f30x_tim.c ****   /* Reset the IC1PSC Bits */
2590:../src/stm32f30x_tim.c ****   TIMx->CCMR1 &= (uint32_t)~TIM_CCMR1_IC1PSC;
 4776              		.loc 1 2590 0
 4777 1764 7B68     		ldr	r3, [r7, #4]
 4778 1766 9B69     		ldr	r3, [r3, #24]
 4779 1768 23F00C02 		bic	r2, r3, #12
 4780 176c 7B68     		ldr	r3, [r7, #4]
 4781 176e 9A61     		str	r2, [r3, #24]
2591:../src/stm32f30x_tim.c **** 
2592:../src/stm32f30x_tim.c ****   /* Set the IC1PSC value */
2593:../src/stm32f30x_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
 4782              		.loc 1 2593 0
 4783 1770 7B68     		ldr	r3, [r7, #4]
 4784 1772 9A69     		ldr	r2, [r3, #24]
 4785 1774 7B88     		ldrh	r3, [r7, #2]
 4786 1776 1A43     		orrs	r2, r2, r3
 4787 1778 7B68     		ldr	r3, [r7, #4]
 4788 177a 9A61     		str	r2, [r3, #24]
2594:../src/stm32f30x_tim.c **** }
 4789              		.loc 1 2594 0
 4790 177c 07F10C07 		add	r7, r7, #12
 4791 1780 BD46     		mov	sp, r7
 4792 1782 80BC     		pop	{r7}
 4793 1784 7047     		bx	lr
 4794              		.cfi_endproc
 4795              	.LFE185:
 4797 1786 00BF     		.align	2
 4798              		.global	TIM_SetIC2Prescaler
 4799              		.thumb
 4800              		.thumb_func
 4802              	TIM_SetIC2Prescaler:
 4803              	.LFB186:
2595:../src/stm32f30x_tim.c **** 
2596:../src/stm32f30x_tim.c **** /**
2597:../src/stm32f30x_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2598:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8 or 15 to select the TIM 
2599:../src/stm32f30x_tim.c ****   *         peripheral.
2600:../src/stm32f30x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2601:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
2602:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2603:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2604:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2605:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2606:../src/stm32f30x_tim.c ****   * @retval None
2607:../src/stm32f30x_tim.c ****   */
2608:../src/stm32f30x_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2609:../src/stm32f30x_tim.c **** {
 4804              		.loc 1 2609 0
 4805              		.cfi_startproc
 4806              		@ args = 0, pretend = 0, frame = 8
 4807              		@ frame_needed = 1, uses_anonymous_args = 0
 4808              		@ link register save eliminated.
 4809 1788 80B4     		push	{r7}
 4810              	.LCFI225:
 4811              		.cfi_def_cfa_offset 4
 4812              		.cfi_offset 7, -4
 4813 178a 83B0     		sub	sp, sp, #12
 4814              	.LCFI226:
 4815              		.cfi_def_cfa_offset 16
 4816 178c 00AF     		add	r7, sp, #0
 4817              	.LCFI227:
 4818              		.cfi_def_cfa_register 7
 4819 178e 7860     		str	r0, [r7, #4]
 4820 1790 0B46     		mov	r3, r1
 4821 1792 7B80     		strh	r3, [r7, #2]	@ movhi
2610:../src/stm32f30x_tim.c ****   /* Check the parameters */
2611:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2612:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2613:../src/stm32f30x_tim.c **** 
2614:../src/stm32f30x_tim.c ****   /* Reset the IC2PSC Bits */
2615:../src/stm32f30x_tim.c ****   TIMx->CCMR1 &= (uint32_t)~TIM_CCMR1_IC2PSC;
 4822              		.loc 1 2615 0
 4823 1794 7B68     		ldr	r3, [r7, #4]
 4824 1796 9B69     		ldr	r3, [r3, #24]
 4825 1798 23F44062 		bic	r2, r3, #3072
 4826 179c 7B68     		ldr	r3, [r7, #4]
 4827 179e 9A61     		str	r2, [r3, #24]
2616:../src/stm32f30x_tim.c **** 
2617:../src/stm32f30x_tim.c ****   /* Set the IC2PSC value */
2618:../src/stm32f30x_tim.c ****   TIMx->CCMR1 |= (uint32_t)((uint32_t)TIM_ICPSC << 8);
 4828              		.loc 1 2618 0
 4829 17a0 7B68     		ldr	r3, [r7, #4]
 4830 17a2 9A69     		ldr	r2, [r3, #24]
 4831 17a4 7B88     		ldrh	r3, [r7, #2]
 4832 17a6 4FEA0323 		lsl	r3, r3, #8
 4833 17aa 1A43     		orrs	r2, r2, r3
 4834 17ac 7B68     		ldr	r3, [r7, #4]
 4835 17ae 9A61     		str	r2, [r3, #24]
2619:../src/stm32f30x_tim.c **** }
 4836              		.loc 1 2619 0
 4837 17b0 07F10C07 		add	r7, r7, #12
 4838 17b4 BD46     		mov	sp, r7
 4839 17b6 80BC     		pop	{r7}
 4840 17b8 7047     		bx	lr
 4841              		.cfi_endproc
 4842              	.LFE186:
 4844 17ba 00BF     		.align	2
 4845              		.global	TIM_SetIC3Prescaler
 4846              		.thumb
 4847              		.thumb_func
 4849              	TIM_SetIC3Prescaler:
 4850              	.LFB187:
2620:../src/stm32f30x_tim.c **** 
2621:../src/stm32f30x_tim.c **** /**
2622:../src/stm32f30x_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2623:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4 or 8 to select the TIM peripheral.
2624:../src/stm32f30x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2625:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
2626:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2627:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2628:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2629:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2630:../src/stm32f30x_tim.c ****   * @retval None
2631:../src/stm32f30x_tim.c ****   */
2632:../src/stm32f30x_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2633:../src/stm32f30x_tim.c **** {
 4851              		.loc 1 2633 0
 4852              		.cfi_startproc
 4853              		@ args = 0, pretend = 0, frame = 8
 4854              		@ frame_needed = 1, uses_anonymous_args = 0
 4855              		@ link register save eliminated.
 4856 17bc 80B4     		push	{r7}
 4857              	.LCFI228:
 4858              		.cfi_def_cfa_offset 4
 4859              		.cfi_offset 7, -4
 4860 17be 83B0     		sub	sp, sp, #12
 4861              	.LCFI229:
 4862              		.cfi_def_cfa_offset 16
 4863 17c0 00AF     		add	r7, sp, #0
 4864              	.LCFI230:
 4865              		.cfi_def_cfa_register 7
 4866 17c2 7860     		str	r0, [r7, #4]
 4867 17c4 0B46     		mov	r3, r1
 4868 17c6 7B80     		strh	r3, [r7, #2]	@ movhi
2634:../src/stm32f30x_tim.c ****   /* Check the parameters */
2635:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2636:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2637:../src/stm32f30x_tim.c **** 
2638:../src/stm32f30x_tim.c ****   /* Reset the IC3PSC Bits */
2639:../src/stm32f30x_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC3PSC;
 4869              		.loc 1 2639 0
 4870 17c8 7B68     		ldr	r3, [r7, #4]
 4871 17ca DA69     		ldr	r2, [r3, #28]
 4872 17cc 4FF6F373 		movw	r3, #65523
 4873 17d0 1340     		ands	r3, r3, r2
 4874 17d2 7A68     		ldr	r2, [r7, #4]
 4875 17d4 D361     		str	r3, [r2, #28]
2640:../src/stm32f30x_tim.c **** 
2641:../src/stm32f30x_tim.c ****   /* Set the IC3PSC value */
2642:../src/stm32f30x_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
 4876              		.loc 1 2642 0
 4877 17d6 7B68     		ldr	r3, [r7, #4]
 4878 17d8 DA69     		ldr	r2, [r3, #28]
 4879 17da 7B88     		ldrh	r3, [r7, #2]
 4880 17dc 1A43     		orrs	r2, r2, r3
 4881 17de 7B68     		ldr	r3, [r7, #4]
 4882 17e0 DA61     		str	r2, [r3, #28]
2643:../src/stm32f30x_tim.c **** }
 4883              		.loc 1 2643 0
 4884 17e2 07F10C07 		add	r7, r7, #12
 4885 17e6 BD46     		mov	sp, r7
 4886 17e8 80BC     		pop	{r7}
 4887 17ea 7047     		bx	lr
 4888              		.cfi_endproc
 4889              	.LFE187:
 4891              		.align	2
 4892              		.global	TIM_SetIC4Prescaler
 4893              		.thumb
 4894              		.thumb_func
 4896              	TIM_SetIC4Prescaler:
 4897              	.LFB188:
2644:../src/stm32f30x_tim.c **** 
2645:../src/stm32f30x_tim.c **** /**
2646:../src/stm32f30x_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2647:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4 or 8 to select the TIM peripheral.
2648:../src/stm32f30x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2649:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
2650:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2651:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2652:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2653:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2654:../src/stm32f30x_tim.c ****   * @retval None
2655:../src/stm32f30x_tim.c ****   */
2656:../src/stm32f30x_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2657:../src/stm32f30x_tim.c **** {  
 4898              		.loc 1 2657 0
 4899              		.cfi_startproc
 4900              		@ args = 0, pretend = 0, frame = 8
 4901              		@ frame_needed = 1, uses_anonymous_args = 0
 4902              		@ link register save eliminated.
 4903 17ec 80B4     		push	{r7}
 4904              	.LCFI231:
 4905              		.cfi_def_cfa_offset 4
 4906              		.cfi_offset 7, -4
 4907 17ee 83B0     		sub	sp, sp, #12
 4908              	.LCFI232:
 4909              		.cfi_def_cfa_offset 16
 4910 17f0 00AF     		add	r7, sp, #0
 4911              	.LCFI233:
 4912              		.cfi_def_cfa_register 7
 4913 17f2 7860     		str	r0, [r7, #4]
 4914 17f4 0B46     		mov	r3, r1
 4915 17f6 7B80     		strh	r3, [r7, #2]	@ movhi
2658:../src/stm32f30x_tim.c ****   /* Check the parameters */
2659:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2660:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2661:../src/stm32f30x_tim.c **** 
2662:../src/stm32f30x_tim.c ****   /* Reset the IC4PSC Bits */
2663:../src/stm32f30x_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC4PSC;
 4916              		.loc 1 2663 0
 4917 17f8 7B68     		ldr	r3, [r7, #4]
 4918 17fa DA69     		ldr	r2, [r3, #28]
 4919 17fc 4FF2FF33 		movw	r3, #62463
 4920 1800 1340     		ands	r3, r3, r2
 4921 1802 7A68     		ldr	r2, [r7, #4]
 4922 1804 D361     		str	r3, [r2, #28]
2664:../src/stm32f30x_tim.c **** 
2665:../src/stm32f30x_tim.c ****   /* Set the IC4PSC value */
2666:../src/stm32f30x_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
 4923              		.loc 1 2666 0
 4924 1806 7B68     		ldr	r3, [r7, #4]
 4925 1808 DA69     		ldr	r2, [r3, #28]
 4926 180a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4927 180c 4FEA0323 		lsl	r3, r3, #8
 4928 1810 9BB2     		uxth	r3, r3
 4929 1812 1A43     		orrs	r2, r2, r3
 4930 1814 7B68     		ldr	r3, [r7, #4]
 4931 1816 DA61     		str	r2, [r3, #28]
2667:../src/stm32f30x_tim.c **** }
 4932              		.loc 1 2667 0
 4933 1818 07F10C07 		add	r7, r7, #12
 4934 181c BD46     		mov	sp, r7
 4935 181e 80BC     		pop	{r7}
 4936 1820 7047     		bx	lr
 4937              		.cfi_endproc
 4938              	.LFE188:
 4940 1822 00BF     		.align	2
 4941              		.global	TIM_BDTRConfig
 4942              		.thumb
 4943              		.thumb_func
 4945              	TIM_BDTRConfig:
 4946              	.LFB189:
2668:../src/stm32f30x_tim.c **** /**
2669:../src/stm32f30x_tim.c ****   * @}
2670:../src/stm32f30x_tim.c ****   */
2671:../src/stm32f30x_tim.c **** 
2672:../src/stm32f30x_tim.c **** /** @defgroup TIM_Group4 Advanced-control timers (TIM1 and TIM8) specific features
2673:../src/stm32f30x_tim.c ****  *  @brief   Advanced-control timers (TIM1 and TIM8) specific features
2674:../src/stm32f30x_tim.c ****  *
2675:../src/stm32f30x_tim.c **** @verbatim   
2676:../src/stm32f30x_tim.c ****  ===============================================================================
2677:../src/stm32f30x_tim.c ****      ##### Advanced-control timers (TIM1 and TIM8) specific features #####
2678:../src/stm32f30x_tim.c ****  ===============================================================================  
2679:../src/stm32f30x_tim.c ****        
2680:../src/stm32f30x_tim.c ****   *** TIM Driver: how to use the Break feature ***
2681:../src/stm32f30x_tim.c ****   ================================================ 
2682:../src/stm32f30x_tim.c ****   [..]
2683:../src/stm32f30x_tim.c ****   After configuring the Timer channel(s) in the appropriate Output Compare mode: 
2684:../src/stm32f30x_tim.c ****                          
2685:../src/stm32f30x_tim.c ****        (#) Fill the TIM_BDTRInitStruct with the desired parameters for the Timer
2686:../src/stm32f30x_tim.c ****            Break Polarity, dead time, Lock level, the OSSI/OSSR State and the 
2687:../src/stm32f30x_tim.c ****            AOE(automatic output enable).
2688:../src/stm32f30x_tim.c ****                
2689:../src/stm32f30x_tim.c ****        (#) Call TIM_BDTRConfig(TIMx, &TIM_BDTRInitStruct) to configure the Timer
2690:../src/stm32f30x_tim.c ****           
2691:../src/stm32f30x_tim.c ****        (#) Enable the Main Output using TIM_CtrlPWMOutputs(TIM1, ENABLE) 
2692:../src/stm32f30x_tim.c ****           
2693:../src/stm32f30x_tim.c ****        (#) Once the break even occurs, the Timer's output signals are put in reset
2694:../src/stm32f30x_tim.c ****            state or in a known state (according to the configuration made in
2695:../src/stm32f30x_tim.c ****            TIM_BDTRConfig() function).
2696:../src/stm32f30x_tim.c **** 
2697:../src/stm32f30x_tim.c **** @endverbatim
2698:../src/stm32f30x_tim.c ****   * @{
2699:../src/stm32f30x_tim.c ****   */
2700:../src/stm32f30x_tim.c **** 
2701:../src/stm32f30x_tim.c **** /**
2702:../src/stm32f30x_tim.c ****   * @brief  Configures the Break feature, dead time, Lock level, OSSI/OSSR State
2703:../src/stm32f30x_tim.c ****   *         and the AOE(automatic output enable).
2704:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1, 8, 15, 16 or 17 to select the TIM 
2705:../src/stm32f30x_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
2706:../src/stm32f30x_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
2707:../src/stm32f30x_tim.c ****   * @retval None
2708:../src/stm32f30x_tim.c ****   */
2709:../src/stm32f30x_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
2710:../src/stm32f30x_tim.c **** {
 4947              		.loc 1 2710 0
 4948              		.cfi_startproc
 4949              		@ args = 0, pretend = 0, frame = 8
 4950              		@ frame_needed = 1, uses_anonymous_args = 0
 4951              		@ link register save eliminated.
 4952 1824 80B4     		push	{r7}
 4953              	.LCFI234:
 4954              		.cfi_def_cfa_offset 4
 4955              		.cfi_offset 7, -4
 4956 1826 83B0     		sub	sp, sp, #12
 4957              	.LCFI235:
 4958              		.cfi_def_cfa_offset 16
 4959 1828 00AF     		add	r7, sp, #0
 4960              	.LCFI236:
 4961              		.cfi_def_cfa_register 7
 4962 182a 7860     		str	r0, [r7, #4]
 4963 182c 3960     		str	r1, [r7, #0]
2711:../src/stm32f30x_tim.c ****   /* Check the parameters */
2712:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2713:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
2714:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
2715:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
2716:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
2717:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
2718:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
2719:../src/stm32f30x_tim.c **** 
2720:../src/stm32f30x_tim.c ****   /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
2721:../src/stm32f30x_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
2722:../src/stm32f30x_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4964              		.loc 1 2722 0
 4965 182e 3B68     		ldr	r3, [r7, #0]
 4966 1830 1A88     		ldrh	r2, [r3, #0]
 4967 1832 3B68     		ldr	r3, [r7, #0]
 4968 1834 5B88     		ldrh	r3, [r3, #2]
2723:../src/stm32f30x_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
2724:../src/stm32f30x_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 4969              		.loc 1 2724 0
 4970 1836 1343     		orrs	r3, r3, r2
 4971 1838 9AB2     		uxth	r2, r3
2723:../src/stm32f30x_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 4972              		.loc 1 2723 0
 4973 183a 3B68     		ldr	r3, [r7, #0]
 4974 183c 9B88     		ldrh	r3, [r3, #4]
 4975              		.loc 1 2724 0
 4976 183e 1343     		orrs	r3, r3, r2
 4977 1840 9AB2     		uxth	r2, r3
2723:../src/stm32f30x_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 4978              		.loc 1 2723 0
 4979 1842 3B68     		ldr	r3, [r7, #0]
 4980 1844 DB88     		ldrh	r3, [r3, #6]
 4981              		.loc 1 2724 0
 4982 1846 1343     		orrs	r3, r3, r2
 4983 1848 9AB2     		uxth	r2, r3
 4984 184a 3B68     		ldr	r3, [r7, #0]
 4985 184c 1B89     		ldrh	r3, [r3, #8]
 4986 184e 1343     		orrs	r3, r3, r2
 4987 1850 9AB2     		uxth	r2, r3
 4988 1852 3B68     		ldr	r3, [r7, #0]
 4989 1854 5B89     		ldrh	r3, [r3, #10]
 4990 1856 1343     		orrs	r3, r3, r2
 4991 1858 9AB2     		uxth	r2, r3
2725:../src/stm32f30x_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 4992              		.loc 1 2725 0
 4993 185a 3B68     		ldr	r3, [r7, #0]
 4994 185c 9B89     		ldrh	r3, [r3, #12]
2724:../src/stm32f30x_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 4995              		.loc 1 2724 0
 4996 185e 1343     		orrs	r3, r3, r2
 4997 1860 9BB2     		uxth	r3, r3
 4998 1862 1A46     		mov	r2, r3
2722:../src/stm32f30x_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4999              		.loc 1 2722 0
 5000 1864 7B68     		ldr	r3, [r7, #4]
 5001 1866 5A64     		str	r2, [r3, #68]
2726:../src/stm32f30x_tim.c **** }
 5002              		.loc 1 2726 0
 5003 1868 07F10C07 		add	r7, r7, #12
 5004 186c BD46     		mov	sp, r7
 5005 186e 80BC     		pop	{r7}
 5006 1870 7047     		bx	lr
 5007              		.cfi_endproc
 5008              	.LFE189:
 5010 1872 00BF     		.align	2
 5011              		.global	TIM_Break1Config
 5012              		.thumb
 5013              		.thumb_func
 5015              	TIM_Break1Config:
 5016              	.LFB190:
2727:../src/stm32f30x_tim.c **** 
2728:../src/stm32f30x_tim.c **** /**
2729:../src/stm32f30x_tim.c ****   * @brief  Configures the Break1 feature.
2730:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
2731:../src/stm32f30x_tim.c ****   * @param  TIM_Break1Polarity: specifies the Break1 polarity.
2732:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
2733:../src/stm32f30x_tim.c ****   *            @arg TIM_Break1Polarity_Low: Break1 input is active low
2734:../src/stm32f30x_tim.c ****   *            @arg TIM_Break1Polarity_High: Break1 input is active high
2735:../src/stm32f30x_tim.c ****   * @param  TIM_Break1Filter: specifies the Break1 filter value.
2736:../src/stm32f30x_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2737:../src/stm32f30x_tim.c ****   * @retval None
2738:../src/stm32f30x_tim.c ****   */
2739:../src/stm32f30x_tim.c **** void TIM_Break1Config(TIM_TypeDef* TIMx, uint32_t TIM_Break1Polarity, uint8_t TIM_Break1Filter)
2740:../src/stm32f30x_tim.c **** {   /* Check the parameters */
 5017              		.loc 1 2740 0
 5018              		.cfi_startproc
 5019              		@ args = 0, pretend = 0, frame = 16
 5020              		@ frame_needed = 1, uses_anonymous_args = 0
 5021              		@ link register save eliminated.
 5022 1874 80B4     		push	{r7}
 5023              	.LCFI237:
 5024              		.cfi_def_cfa_offset 4
 5025              		.cfi_offset 7, -4
 5026 1876 85B0     		sub	sp, sp, #20
 5027              	.LCFI238:
 5028              		.cfi_def_cfa_offset 24
 5029 1878 00AF     		add	r7, sp, #0
 5030              	.LCFI239:
 5031              		.cfi_def_cfa_register 7
 5032 187a F860     		str	r0, [r7, #12]
 5033 187c B960     		str	r1, [r7, #8]
 5034 187e 1346     		mov	r3, r2
 5035 1880 FB71     		strb	r3, [r7, #7]
2741:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2742:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_BREAK1_FILTER(TIM_Break1Filter));
2743:../src/stm32f30x_tim.c **** 
2744:../src/stm32f30x_tim.c ****   /* Reset the BKP and BKF Bits */
2745:../src/stm32f30x_tim.c ****   TIMx->BDTR &= (uint32_t)~ (TIM_BDTR_BKP | TIM_BDTR_BKF);
 5036              		.loc 1 2745 0
 5037 1882 FB68     		ldr	r3, [r7, #12]
 5038 1884 5B6C     		ldr	r3, [r3, #68]
 5039 1886 23F47222 		bic	r2, r3, #991232
 5040 188a FB68     		ldr	r3, [r7, #12]
 5041 188c 5A64     		str	r2, [r3, #68]
2746:../src/stm32f30x_tim.c ****   /* Configure the Break1 polarity and filter */
2747:../src/stm32f30x_tim.c ****   TIMx->BDTR |=	TIM_Break1Polarity |((uint32_t)TIM_Break1Filter << 16);
 5042              		.loc 1 2747 0
 5043 188e FB68     		ldr	r3, [r7, #12]
 5044 1890 5A6C     		ldr	r2, [r3, #68]
 5045 1892 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5046 1894 4FEA0341 		lsl	r1, r3, #16
 5047 1898 BB68     		ldr	r3, [r7, #8]
 5048 189a 0B43     		orrs	r3, r3, r1
 5049 189c 1A43     		orrs	r2, r2, r3
 5050 189e FB68     		ldr	r3, [r7, #12]
 5051 18a0 5A64     		str	r2, [r3, #68]
2748:../src/stm32f30x_tim.c **** }
 5052              		.loc 1 2748 0
 5053 18a2 07F11407 		add	r7, r7, #20
 5054 18a6 BD46     		mov	sp, r7
 5055 18a8 80BC     		pop	{r7}
 5056 18aa 7047     		bx	lr
 5057              		.cfi_endproc
 5058              	.LFE190:
 5060              		.align	2
 5061              		.global	TIM_Break2Config
 5062              		.thumb
 5063              		.thumb_func
 5065              	TIM_Break2Config:
 5066              	.LFB191:
2749:../src/stm32f30x_tim.c **** 
2750:../src/stm32f30x_tim.c **** /**
2751:../src/stm32f30x_tim.c ****   * @brief  Configures the Break2 feature.
2752:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
2753:../src/stm32f30x_tim.c ****   * @param  TIM_Break2Polarity: specifies the Break2 polarity.
2754:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
2755:../src/stm32f30x_tim.c ****   *            @arg TIM_Break2Polarity_Low: Break2 input is active low
2756:../src/stm32f30x_tim.c ****   *            @arg TIM_Break2Polarity_High: Break2 input is active high
2757:../src/stm32f30x_tim.c ****   * @param  TIM_Break2Filter: specifies the Break2 filter value.
2758:../src/stm32f30x_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2759:../src/stm32f30x_tim.c ****   * @retval None
2760:../src/stm32f30x_tim.c ****   */
2761:../src/stm32f30x_tim.c **** void TIM_Break2Config(TIM_TypeDef* TIMx, uint32_t TIM_Break2Polarity, uint8_t TIM_Break2Filter)
2762:../src/stm32f30x_tim.c **** {
 5067              		.loc 1 2762 0
 5068              		.cfi_startproc
 5069              		@ args = 0, pretend = 0, frame = 16
 5070              		@ frame_needed = 1, uses_anonymous_args = 0
 5071              		@ link register save eliminated.
 5072 18ac 80B4     		push	{r7}
 5073              	.LCFI240:
 5074              		.cfi_def_cfa_offset 4
 5075              		.cfi_offset 7, -4
 5076 18ae 85B0     		sub	sp, sp, #20
 5077              	.LCFI241:
 5078              		.cfi_def_cfa_offset 24
 5079 18b0 00AF     		add	r7, sp, #0
 5080              	.LCFI242:
 5081              		.cfi_def_cfa_register 7
 5082 18b2 F860     		str	r0, [r7, #12]
 5083 18b4 B960     		str	r1, [r7, #8]
 5084 18b6 1346     		mov	r3, r2
 5085 18b8 FB71     		strb	r3, [r7, #7]
2763:../src/stm32f30x_tim.c ****   /* Check the parameters */
2764:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2765:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_BREAK2_FILTER(TIM_Break2Filter));
2766:../src/stm32f30x_tim.c **** 
2767:../src/stm32f30x_tim.c ****   /* Reset the BKP and BKF Bits */
2768:../src/stm32f30x_tim.c ****   TIMx->BDTR &= (uint32_t)~ (TIM_BDTR_BK2P | TIM_BDTR_BK2F);
 5086              		.loc 1 2768 0
 5087 18ba FB68     		ldr	r3, [r7, #12]
 5088 18bc 5B6C     		ldr	r3, [r3, #68]
 5089 18be 23F03C72 		bic	r2, r3, #49283072
 5090 18c2 FB68     		ldr	r3, [r7, #12]
 5091 18c4 5A64     		str	r2, [r3, #68]
2769:../src/stm32f30x_tim.c **** 
2770:../src/stm32f30x_tim.c ****   /* Configure the Break1 polarity and filter */
2771:../src/stm32f30x_tim.c ****   TIMx->BDTR |=	TIM_Break2Polarity |((uint32_t)TIM_Break2Filter << 20);
 5092              		.loc 1 2771 0
 5093 18c6 FB68     		ldr	r3, [r7, #12]
 5094 18c8 5A6C     		ldr	r2, [r3, #68]
 5095 18ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5096 18cc 4FEA0351 		lsl	r1, r3, #20
 5097 18d0 BB68     		ldr	r3, [r7, #8]
 5098 18d2 0B43     		orrs	r3, r3, r1
 5099 18d4 1A43     		orrs	r2, r2, r3
 5100 18d6 FB68     		ldr	r3, [r7, #12]
 5101 18d8 5A64     		str	r2, [r3, #68]
2772:../src/stm32f30x_tim.c **** }
 5102              		.loc 1 2772 0
 5103 18da 07F11407 		add	r7, r7, #20
 5104 18de BD46     		mov	sp, r7
 5105 18e0 80BC     		pop	{r7}
 5106 18e2 7047     		bx	lr
 5107              		.cfi_endproc
 5108              	.LFE191:
 5110              		.align	2
 5111              		.global	TIM_Break1Cmd
 5112              		.thumb
 5113              		.thumb_func
 5115              	TIM_Break1Cmd:
 5116              	.LFB192:
2773:../src/stm32f30x_tim.c **** 
2774:../src/stm32f30x_tim.c **** /**
2775:../src/stm32f30x_tim.c ****   * @brief  Enables or disables the TIM Break1 input.
2776:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 8, 1, 16 or 17 to select the TIMx peripheral.
2777:../src/stm32f30x_tim.c ****   * @param  NewState: new state of the TIM Break1 input.
2778:../src/stm32f30x_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2779:../src/stm32f30x_tim.c ****   * @retval None
2780:../src/stm32f30x_tim.c ****   */
2781:../src/stm32f30x_tim.c **** void TIM_Break1Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
2782:../src/stm32f30x_tim.c **** {
 5117              		.loc 1 2782 0
 5118              		.cfi_startproc
 5119              		@ args = 0, pretend = 0, frame = 8
 5120              		@ frame_needed = 1, uses_anonymous_args = 0
 5121              		@ link register save eliminated.
 5122 18e4 80B4     		push	{r7}
 5123              	.LCFI243:
 5124              		.cfi_def_cfa_offset 4
 5125              		.cfi_offset 7, -4
 5126 18e6 83B0     		sub	sp, sp, #12
 5127              	.LCFI244:
 5128              		.cfi_def_cfa_offset 16
 5129 18e8 00AF     		add	r7, sp, #0
 5130              	.LCFI245:
 5131              		.cfi_def_cfa_register 7
 5132 18ea 7860     		str	r0, [r7, #4]
 5133 18ec 0B46     		mov	r3, r1
 5134 18ee FB70     		strb	r3, [r7, #3]
2783:../src/stm32f30x_tim.c ****   /* Check the parameters */
2784:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2785:../src/stm32f30x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2786:../src/stm32f30x_tim.c **** 
2787:../src/stm32f30x_tim.c ****   if (NewState != DISABLE)
 5135              		.loc 1 2787 0
 5136 18f0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5137 18f2 002B     		cmp	r3, #0
 5138 18f4 06D0     		beq	.L145
2788:../src/stm32f30x_tim.c ****   {
2789:../src/stm32f30x_tim.c ****     /* Enable the Break1 */
2790:../src/stm32f30x_tim.c ****     TIMx->BDTR |= TIM_BDTR_BKE;
 5139              		.loc 1 2790 0
 5140 18f6 7B68     		ldr	r3, [r7, #4]
 5141 18f8 5B6C     		ldr	r3, [r3, #68]
 5142 18fa 43F48052 		orr	r2, r3, #4096
 5143 18fe 7B68     		ldr	r3, [r7, #4]
 5144 1900 5A64     		str	r2, [r3, #68]
 5145 1902 05E0     		b	.L144
 5146              	.L145:
2791:../src/stm32f30x_tim.c ****   }
2792:../src/stm32f30x_tim.c ****   else
2793:../src/stm32f30x_tim.c ****   {
2794:../src/stm32f30x_tim.c ****     /* Disable the Break1 */
2795:../src/stm32f30x_tim.c ****     TIMx->BDTR &= (uint32_t)~TIM_BDTR_BKE;
 5147              		.loc 1 2795 0
 5148 1904 7B68     		ldr	r3, [r7, #4]
 5149 1906 5B6C     		ldr	r3, [r3, #68]
 5150 1908 23F48052 		bic	r2, r3, #4096
 5151 190c 7B68     		ldr	r3, [r7, #4]
 5152 190e 5A64     		str	r2, [r3, #68]
 5153              	.L144:
2796:../src/stm32f30x_tim.c ****   } 
2797:../src/stm32f30x_tim.c **** }
 5154              		.loc 1 2797 0
 5155 1910 07F10C07 		add	r7, r7, #12
 5156 1914 BD46     		mov	sp, r7
 5157 1916 80BC     		pop	{r7}
 5158 1918 7047     		bx	lr
 5159              		.cfi_endproc
 5160              	.LFE192:
 5162 191a 00BF     		.align	2
 5163              		.global	TIM_Break2Cmd
 5164              		.thumb
 5165              		.thumb_func
 5167              	TIM_Break2Cmd:
 5168              	.LFB193:
2798:../src/stm32f30x_tim.c **** 
2799:../src/stm32f30x_tim.c **** /**
2800:../src/stm32f30x_tim.c ****   * @brief  Enables or disables the TIM Break2 input.
2801:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIMx peripheral.
2802:../src/stm32f30x_tim.c ****   * @param  NewState: new state of the TIM Break2 input.
2803:../src/stm32f30x_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2804:../src/stm32f30x_tim.c ****   * @retval None
2805:../src/stm32f30x_tim.c ****   */
2806:../src/stm32f30x_tim.c **** void TIM_Break2Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
2807:../src/stm32f30x_tim.c **** {
 5169              		.loc 1 2807 0
 5170              		.cfi_startproc
 5171              		@ args = 0, pretend = 0, frame = 8
 5172              		@ frame_needed = 1, uses_anonymous_args = 0
 5173              		@ link register save eliminated.
 5174 191c 80B4     		push	{r7}
 5175              	.LCFI246:
 5176              		.cfi_def_cfa_offset 4
 5177              		.cfi_offset 7, -4
 5178 191e 83B0     		sub	sp, sp, #12
 5179              	.LCFI247:
 5180              		.cfi_def_cfa_offset 16
 5181 1920 00AF     		add	r7, sp, #0
 5182              	.LCFI248:
 5183              		.cfi_def_cfa_register 7
 5184 1922 7860     		str	r0, [r7, #4]
 5185 1924 0B46     		mov	r3, r1
 5186 1926 FB70     		strb	r3, [r7, #3]
2808:../src/stm32f30x_tim.c ****   /* Check the parameters */
2809:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2810:../src/stm32f30x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2811:../src/stm32f30x_tim.c **** 
2812:../src/stm32f30x_tim.c ****   if (NewState != DISABLE)
 5187              		.loc 1 2812 0
 5188 1928 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5189 192a 002B     		cmp	r3, #0
 5190 192c 06D0     		beq	.L148
2813:../src/stm32f30x_tim.c ****   {
2814:../src/stm32f30x_tim.c ****     /* Enable the Break1 */
2815:../src/stm32f30x_tim.c ****     TIMx->BDTR |= TIM_BDTR_BK2E;
 5191              		.loc 1 2815 0
 5192 192e 7B68     		ldr	r3, [r7, #4]
 5193 1930 5B6C     		ldr	r3, [r3, #68]
 5194 1932 43F08072 		orr	r2, r3, #16777216
 5195 1936 7B68     		ldr	r3, [r7, #4]
 5196 1938 5A64     		str	r2, [r3, #68]
 5197 193a 05E0     		b	.L147
 5198              	.L148:
2816:../src/stm32f30x_tim.c ****   }
2817:../src/stm32f30x_tim.c ****   else
2818:../src/stm32f30x_tim.c ****   {
2819:../src/stm32f30x_tim.c ****     /* Disable the Break1 */
2820:../src/stm32f30x_tim.c ****     TIMx->BDTR &= (uint32_t)~TIM_BDTR_BK2E;
 5199              		.loc 1 2820 0
 5200 193c 7B68     		ldr	r3, [r7, #4]
 5201 193e 5B6C     		ldr	r3, [r3, #68]
 5202 1940 23F08072 		bic	r2, r3, #16777216
 5203 1944 7B68     		ldr	r3, [r7, #4]
 5204 1946 5A64     		str	r2, [r3, #68]
 5205              	.L147:
2821:../src/stm32f30x_tim.c ****   }
2822:../src/stm32f30x_tim.c **** }
 5206              		.loc 1 2822 0
 5207 1948 07F10C07 		add	r7, r7, #12
 5208 194c BD46     		mov	sp, r7
 5209 194e 80BC     		pop	{r7}
 5210 1950 7047     		bx	lr
 5211              		.cfi_endproc
 5212              	.LFE193:
 5214 1952 00BF     		.align	2
 5215              		.global	TIM_BDTRStructInit
 5216              		.thumb
 5217              		.thumb_func
 5219              	TIM_BDTRStructInit:
 5220              	.LFB194:
2823:../src/stm32f30x_tim.c **** 
2824:../src/stm32f30x_tim.c **** /**
2825:../src/stm32f30x_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
2826:../src/stm32f30x_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
2827:../src/stm32f30x_tim.c ****   *         will be initialized.
2828:../src/stm32f30x_tim.c ****   * @retval None
2829:../src/stm32f30x_tim.c ****   */
2830:../src/stm32f30x_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
2831:../src/stm32f30x_tim.c **** {
 5221              		.loc 1 2831 0
 5222              		.cfi_startproc
 5223              		@ args = 0, pretend = 0, frame = 8
 5224              		@ frame_needed = 1, uses_anonymous_args = 0
 5225              		@ link register save eliminated.
 5226 1954 80B4     		push	{r7}
 5227              	.LCFI249:
 5228              		.cfi_def_cfa_offset 4
 5229              		.cfi_offset 7, -4
 5230 1956 83B0     		sub	sp, sp, #12
 5231              	.LCFI250:
 5232              		.cfi_def_cfa_offset 16
 5233 1958 00AF     		add	r7, sp, #0
 5234              	.LCFI251:
 5235              		.cfi_def_cfa_register 7
 5236 195a 7860     		str	r0, [r7, #4]
2832:../src/stm32f30x_tim.c ****   /* Set the default configuration */
2833:../src/stm32f30x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 5237              		.loc 1 2833 0
 5238 195c 7B68     		ldr	r3, [r7, #4]
 5239 195e 4FF00002 		mov	r2, #0
 5240 1962 1A80     		strh	r2, [r3, #0]	@ movhi
2834:../src/stm32f30x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 5241              		.loc 1 2834 0
 5242 1964 7B68     		ldr	r3, [r7, #4]
 5243 1966 4FF00002 		mov	r2, #0
 5244 196a 5A80     		strh	r2, [r3, #2]	@ movhi
2835:../src/stm32f30x_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 5245              		.loc 1 2835 0
 5246 196c 7B68     		ldr	r3, [r7, #4]
 5247 196e 4FF00002 		mov	r2, #0
 5248 1972 9A80     		strh	r2, [r3, #4]	@ movhi
2836:../src/stm32f30x_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 5249              		.loc 1 2836 0
 5250 1974 7B68     		ldr	r3, [r7, #4]
 5251 1976 4FF00002 		mov	r2, #0
 5252 197a DA80     		strh	r2, [r3, #6]	@ movhi
2837:../src/stm32f30x_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 5253              		.loc 1 2837 0
 5254 197c 7B68     		ldr	r3, [r7, #4]
 5255 197e 4FF00002 		mov	r2, #0
 5256 1982 1A81     		strh	r2, [r3, #8]	@ movhi
2838:../src/stm32f30x_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 5257              		.loc 1 2838 0
 5258 1984 7B68     		ldr	r3, [r7, #4]
 5259 1986 4FF00002 		mov	r2, #0
 5260 198a 5A81     		strh	r2, [r3, #10]	@ movhi
2839:../src/stm32f30x_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 5261              		.loc 1 2839 0
 5262 198c 7B68     		ldr	r3, [r7, #4]
 5263 198e 4FF00002 		mov	r2, #0
 5264 1992 9A81     		strh	r2, [r3, #12]	@ movhi
2840:../src/stm32f30x_tim.c **** }
 5265              		.loc 1 2840 0
 5266 1994 07F10C07 		add	r7, r7, #12
 5267 1998 BD46     		mov	sp, r7
 5268 199a 80BC     		pop	{r7}
 5269 199c 7047     		bx	lr
 5270              		.cfi_endproc
 5271              	.LFE194:
 5273 199e 00BF     		.align	2
 5274              		.global	TIM_CtrlPWMOutputs
 5275              		.thumb
 5276              		.thumb_func
 5278              	TIM_CtrlPWMOutputs:
 5279              	.LFB195:
2841:../src/stm32f30x_tim.c **** 
2842:../src/stm32f30x_tim.c **** /**
2843:../src/stm32f30x_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
2844:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIMx peripheral.
2845:../src/stm32f30x_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
2846:../src/stm32f30x_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2847:../src/stm32f30x_tim.c ****   * @retval None
2848:../src/stm32f30x_tim.c ****   */
2849:../src/stm32f30x_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
2850:../src/stm32f30x_tim.c **** {
 5280              		.loc 1 2850 0
 5281              		.cfi_startproc
 5282              		@ args = 0, pretend = 0, frame = 8
 5283              		@ frame_needed = 1, uses_anonymous_args = 0
 5284              		@ link register save eliminated.
 5285 19a0 80B4     		push	{r7}
 5286              	.LCFI252:
 5287              		.cfi_def_cfa_offset 4
 5288              		.cfi_offset 7, -4
 5289 19a2 83B0     		sub	sp, sp, #12
 5290              	.LCFI253:
 5291              		.cfi_def_cfa_offset 16
 5292 19a4 00AF     		add	r7, sp, #0
 5293              	.LCFI254:
 5294              		.cfi_def_cfa_register 7
 5295 19a6 7860     		str	r0, [r7, #4]
 5296 19a8 0B46     		mov	r3, r1
 5297 19aa FB70     		strb	r3, [r7, #3]
2851:../src/stm32f30x_tim.c ****   /* Check the parameters */
2852:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2853:../src/stm32f30x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2854:../src/stm32f30x_tim.c **** 
2855:../src/stm32f30x_tim.c ****   if (NewState != DISABLE)
 5298              		.loc 1 2855 0
 5299 19ac FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5300 19ae 002B     		cmp	r3, #0
 5301 19b0 06D0     		beq	.L152
2856:../src/stm32f30x_tim.c ****   {
2857:../src/stm32f30x_tim.c ****     /* Enable the TIM Main Output */
2858:../src/stm32f30x_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 5302              		.loc 1 2858 0
 5303 19b2 7B68     		ldr	r3, [r7, #4]
 5304 19b4 5B6C     		ldr	r3, [r3, #68]
 5305 19b6 43F40042 		orr	r2, r3, #32768
 5306 19ba 7B68     		ldr	r3, [r7, #4]
 5307 19bc 5A64     		str	r2, [r3, #68]
 5308 19be 07E0     		b	.L151
 5309              	.L152:
2859:../src/stm32f30x_tim.c ****   }
2860:../src/stm32f30x_tim.c ****   else
2861:../src/stm32f30x_tim.c ****   {
2862:../src/stm32f30x_tim.c ****     /* Disable the TIM Main Output */
2863:../src/stm32f30x_tim.c ****     TIMx->BDTR &= (uint16_t)~TIM_BDTR_MOE;
 5310              		.loc 1 2863 0
 5311 19c0 7B68     		ldr	r3, [r7, #4]
 5312 19c2 5B6C     		ldr	r3, [r3, #68]
 5313 19c4 4FEA4343 		lsl	r3, r3, #17
 5314 19c8 4FEA5343 		lsr	r3, r3, #17
 5315 19cc 7A68     		ldr	r2, [r7, #4]
 5316 19ce 5364     		str	r3, [r2, #68]
 5317              	.L151:
2864:../src/stm32f30x_tim.c ****   }  
2865:../src/stm32f30x_tim.c **** }
 5318              		.loc 1 2865 0
 5319 19d0 07F10C07 		add	r7, r7, #12
 5320 19d4 BD46     		mov	sp, r7
 5321 19d6 80BC     		pop	{r7}
 5322 19d8 7047     		bx	lr
 5323              		.cfi_endproc
 5324              	.LFE195:
 5326 19da 00BF     		.align	2
 5327              		.global	TIM_SelectCOM
 5328              		.thumb
 5329              		.thumb_func
 5331              	TIM_SelectCOM:
 5332              	.LFB196:
2866:../src/stm32f30x_tim.c **** 
2867:../src/stm32f30x_tim.c **** /**
2868:../src/stm32f30x_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
2869:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1, 8, 15, 16 or 17 to select the TIMx peripheral
2870:../src/stm32f30x_tim.c ****   * @param  NewState: new state of the Commutation event.
2871:../src/stm32f30x_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2872:../src/stm32f30x_tim.c ****   * @retval None
2873:../src/stm32f30x_tim.c ****   */
2874:../src/stm32f30x_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
2875:../src/stm32f30x_tim.c **** {
 5333              		.loc 1 2875 0
 5334              		.cfi_startproc
 5335              		@ args = 0, pretend = 0, frame = 8
 5336              		@ frame_needed = 1, uses_anonymous_args = 0
 5337              		@ link register save eliminated.
 5338 19dc 80B4     		push	{r7}
 5339              	.LCFI255:
 5340              		.cfi_def_cfa_offset 4
 5341              		.cfi_offset 7, -4
 5342 19de 83B0     		sub	sp, sp, #12
 5343              	.LCFI256:
 5344              		.cfi_def_cfa_offset 16
 5345 19e0 00AF     		add	r7, sp, #0
 5346              	.LCFI257:
 5347              		.cfi_def_cfa_register 7
 5348 19e2 7860     		str	r0, [r7, #4]
 5349 19e4 0B46     		mov	r3, r1
 5350 19e6 FB70     		strb	r3, [r7, #3]
2876:../src/stm32f30x_tim.c ****   /* Check the parameters */
2877:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2878:../src/stm32f30x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2879:../src/stm32f30x_tim.c **** 
2880:../src/stm32f30x_tim.c ****   if (NewState != DISABLE)
 5351              		.loc 1 2880 0
 5352 19e8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5353 19ea 002B     		cmp	r3, #0
 5354 19ec 06D0     		beq	.L155
2881:../src/stm32f30x_tim.c ****   {
2882:../src/stm32f30x_tim.c ****     /* Set the COM Bit */
2883:../src/stm32f30x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
 5355              		.loc 1 2883 0
 5356 19ee 7B68     		ldr	r3, [r7, #4]
 5357 19f0 5B68     		ldr	r3, [r3, #4]
 5358 19f2 43F00402 		orr	r2, r3, #4
 5359 19f6 7B68     		ldr	r3, [r7, #4]
 5360 19f8 5A60     		str	r2, [r3, #4]
 5361 19fa 06E0     		b	.L154
 5362              	.L155:
2884:../src/stm32f30x_tim.c ****   }
2885:../src/stm32f30x_tim.c ****   else
2886:../src/stm32f30x_tim.c ****   {
2887:../src/stm32f30x_tim.c ****     /* Reset the COM Bit */
2888:../src/stm32f30x_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCUS;
 5363              		.loc 1 2888 0
 5364 19fc 7B68     		ldr	r3, [r7, #4]
 5365 19fe 5A68     		ldr	r2, [r3, #4]
 5366 1a00 4FF6FB73 		movw	r3, #65531
 5367 1a04 1340     		ands	r3, r3, r2
 5368 1a06 7A68     		ldr	r2, [r7, #4]
 5369 1a08 5360     		str	r3, [r2, #4]
 5370              	.L154:
2889:../src/stm32f30x_tim.c ****   }
2890:../src/stm32f30x_tim.c **** }
 5371              		.loc 1 2890 0
 5372 1a0a 07F10C07 		add	r7, r7, #12
 5373 1a0e BD46     		mov	sp, r7
 5374 1a10 80BC     		pop	{r7}
 5375 1a12 7047     		bx	lr
 5376              		.cfi_endproc
 5377              	.LFE196:
 5379              		.align	2
 5380              		.global	TIM_CCPreloadControl
 5381              		.thumb
 5382              		.thumb_func
 5384              	TIM_CCPreloadControl:
 5385              	.LFB197:
2891:../src/stm32f30x_tim.c **** 
2892:../src/stm32f30x_tim.c **** /**
2893:../src/stm32f30x_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
2894:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2895:../src/stm32f30x_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
2896:../src/stm32f30x_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2897:../src/stm32f30x_tim.c ****   * @retval None
2898:../src/stm32f30x_tim.c ****   */
2899:../src/stm32f30x_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
2900:../src/stm32f30x_tim.c **** { 
 5386              		.loc 1 2900 0
 5387              		.cfi_startproc
 5388              		@ args = 0, pretend = 0, frame = 8
 5389              		@ frame_needed = 1, uses_anonymous_args = 0
 5390              		@ link register save eliminated.
 5391 1a14 80B4     		push	{r7}
 5392              	.LCFI258:
 5393              		.cfi_def_cfa_offset 4
 5394              		.cfi_offset 7, -4
 5395 1a16 83B0     		sub	sp, sp, #12
 5396              	.LCFI259:
 5397              		.cfi_def_cfa_offset 16
 5398 1a18 00AF     		add	r7, sp, #0
 5399              	.LCFI260:
 5400              		.cfi_def_cfa_register 7
 5401 1a1a 7860     		str	r0, [r7, #4]
 5402 1a1c 0B46     		mov	r3, r1
 5403 1a1e FB70     		strb	r3, [r7, #3]
2901:../src/stm32f30x_tim.c ****   /* Check the parameters */
2902:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2903:../src/stm32f30x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2904:../src/stm32f30x_tim.c ****   if (NewState != DISABLE)
 5404              		.loc 1 2904 0
 5405 1a20 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5406 1a22 002B     		cmp	r3, #0
 5407 1a24 06D0     		beq	.L158
2905:../src/stm32f30x_tim.c ****   {
2906:../src/stm32f30x_tim.c ****     /* Set the CCPC Bit */
2907:../src/stm32f30x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
 5408              		.loc 1 2907 0
 5409 1a26 7B68     		ldr	r3, [r7, #4]
 5410 1a28 5B68     		ldr	r3, [r3, #4]
 5411 1a2a 43F00102 		orr	r2, r3, #1
 5412 1a2e 7B68     		ldr	r3, [r7, #4]
 5413 1a30 5A60     		str	r2, [r3, #4]
 5414 1a32 06E0     		b	.L157
 5415              	.L158:
2908:../src/stm32f30x_tim.c ****   }
2909:../src/stm32f30x_tim.c ****   else
2910:../src/stm32f30x_tim.c ****   {
2911:../src/stm32f30x_tim.c ****     /* Reset the CCPC Bit */
2912:../src/stm32f30x_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCPC;
 5416              		.loc 1 2912 0
 5417 1a34 7B68     		ldr	r3, [r7, #4]
 5418 1a36 5A68     		ldr	r2, [r3, #4]
 5419 1a38 4FF6FE73 		movw	r3, #65534
 5420 1a3c 1340     		ands	r3, r3, r2
 5421 1a3e 7A68     		ldr	r2, [r7, #4]
 5422 1a40 5360     		str	r3, [r2, #4]
 5423              	.L157:
2913:../src/stm32f30x_tim.c ****   }
2914:../src/stm32f30x_tim.c **** }
 5424              		.loc 1 2914 0
 5425 1a42 07F10C07 		add	r7, r7, #12
 5426 1a46 BD46     		mov	sp, r7
 5427 1a48 80BC     		pop	{r7}
 5428 1a4a 7047     		bx	lr
 5429              		.cfi_endproc
 5430              	.LFE197:
 5432              		.align	2
 5433              		.global	TIM_ITConfig
 5434              		.thumb
 5435              		.thumb_func
 5437              	TIM_ITConfig:
 5438              	.LFB198:
2915:../src/stm32f30x_tim.c **** /**
2916:../src/stm32f30x_tim.c ****   * @}
2917:../src/stm32f30x_tim.c ****   */
2918:../src/stm32f30x_tim.c **** 
2919:../src/stm32f30x_tim.c **** /** @defgroup TIM_Group5 Interrupts DMA and flags management functions
2920:../src/stm32f30x_tim.c ****  *  @brief    Interrupts, DMA and flags management functions 
2921:../src/stm32f30x_tim.c ****  *
2922:../src/stm32f30x_tim.c **** @verbatim   
2923:../src/stm32f30x_tim.c ****  ===============================================================================
2924:../src/stm32f30x_tim.c ****          ##### Interrupts, DMA and flags management functions #####
2925:../src/stm32f30x_tim.c ****  ===============================================================================  
2926:../src/stm32f30x_tim.c **** 
2927:../src/stm32f30x_tim.c **** @endverbatim
2928:../src/stm32f30x_tim.c ****   * @{
2929:../src/stm32f30x_tim.c ****   */
2930:../src/stm32f30x_tim.c **** 
2931:../src/stm32f30x_tim.c **** /**
2932:../src/stm32f30x_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
2933:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 6, 7, 8, 15, 16 or 17 to select the TIMx peripheral.
2934:../src/stm32f30x_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
2935:../src/stm32f30x_tim.c ****   *          This parameter can be any combination of the following values:
2936:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2937:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2938:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2939:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2940:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2941:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2942:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2943:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2944:../src/stm32f30x_tim.c ****   *  
2945:../src/stm32f30x_tim.c ****   * @note   For TIM6 and TIM7 only the parameter TIM_IT_Update can be used
2946:../src/stm32f30x_tim.c ****   * @note   For TIM9 and TIM12 only one of the following parameters can be used: TIM_IT_Update,
2947:../src/stm32f30x_tim.c ****   *          TIM_IT_CC1, TIM_IT_CC2 or TIM_IT_Trigger. 
2948:../src/stm32f30x_tim.c ****   * @note   For TIM10, TIM11, TIM13 and TIM14 only one of the following parameters can
2949:../src/stm32f30x_tim.c ****   *          be used: TIM_IT_Update or TIM_IT_CC1   
2950:../src/stm32f30x_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break can be used only with TIM1 and TIM8 
2951:../src/stm32f30x_tim.c ****   *        
2952:../src/stm32f30x_tim.c ****   * @param  NewState: new state of the TIM interrupts.
2953:../src/stm32f30x_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2954:../src/stm32f30x_tim.c ****   * @retval None
2955:../src/stm32f30x_tim.c ****   */
2956:../src/stm32f30x_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
2957:../src/stm32f30x_tim.c **** {  
 5439              		.loc 1 2957 0
 5440              		.cfi_startproc
 5441              		@ args = 0, pretend = 0, frame = 8
 5442              		@ frame_needed = 1, uses_anonymous_args = 0
 5443              		@ link register save eliminated.
 5444 1a4c 80B4     		push	{r7}
 5445              	.LCFI261:
 5446              		.cfi_def_cfa_offset 4
 5447              		.cfi_offset 7, -4
 5448 1a4e 83B0     		sub	sp, sp, #12
 5449              	.LCFI262:
 5450              		.cfi_def_cfa_offset 16
 5451 1a50 00AF     		add	r7, sp, #0
 5452              	.LCFI263:
 5453              		.cfi_def_cfa_register 7
 5454 1a52 7860     		str	r0, [r7, #4]
 5455 1a54 1346     		mov	r3, r2
 5456 1a56 0A46     		mov	r2, r1	@ movhi
 5457 1a58 7A80     		strh	r2, [r7, #2]	@ movhi
 5458 1a5a 7B70     		strb	r3, [r7, #1]
2958:../src/stm32f30x_tim.c ****   /* Check the parameters */
2959:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2960:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
2961:../src/stm32f30x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2962:../src/stm32f30x_tim.c ****   
2963:../src/stm32f30x_tim.c ****   if (NewState != DISABLE)
 5459              		.loc 1 2963 0
 5460 1a5c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 5461 1a5e 002B     		cmp	r3, #0
 5462 1a60 06D0     		beq	.L161
2964:../src/stm32f30x_tim.c ****   {
2965:../src/stm32f30x_tim.c ****     /* Enable the Interrupt sources */
2966:../src/stm32f30x_tim.c ****     TIMx->DIER |= TIM_IT;
 5463              		.loc 1 2966 0
 5464 1a62 7B68     		ldr	r3, [r7, #4]
 5465 1a64 DA68     		ldr	r2, [r3, #12]
 5466 1a66 7B88     		ldrh	r3, [r7, #2]
 5467 1a68 1A43     		orrs	r2, r2, r3
 5468 1a6a 7B68     		ldr	r3, [r7, #4]
 5469 1a6c DA60     		str	r2, [r3, #12]
 5470 1a6e 08E0     		b	.L160
 5471              	.L161:
2967:../src/stm32f30x_tim.c ****   }
2968:../src/stm32f30x_tim.c ****   else
2969:../src/stm32f30x_tim.c ****   {
2970:../src/stm32f30x_tim.c ****     /* Disable the Interrupt sources */
2971:../src/stm32f30x_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
 5472              		.loc 1 2971 0
 5473 1a70 7B68     		ldr	r3, [r7, #4]
 5474 1a72 DA68     		ldr	r2, [r3, #12]
 5475 1a74 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5476 1a76 6FEA0303 		mvn	r3, r3
 5477 1a7a 9BB2     		uxth	r3, r3
 5478 1a7c 1A40     		ands	r2, r2, r3
 5479 1a7e 7B68     		ldr	r3, [r7, #4]
 5480 1a80 DA60     		str	r2, [r3, #12]
 5481              	.L160:
2972:../src/stm32f30x_tim.c ****   }
2973:../src/stm32f30x_tim.c **** }
 5482              		.loc 1 2973 0
 5483 1a82 07F10C07 		add	r7, r7, #12
 5484 1a86 BD46     		mov	sp, r7
 5485 1a88 80BC     		pop	{r7}
 5486 1a8a 7047     		bx	lr
 5487              		.cfi_endproc
 5488              	.LFE198:
 5490              		.align	2
 5491              		.global	TIM_GenerateEvent
 5492              		.thumb
 5493              		.thumb_func
 5495              	TIM_GenerateEvent:
 5496              	.LFB199:
2974:../src/stm32f30x_tim.c **** 
2975:../src/stm32f30x_tim.c **** /**
2976:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
2977:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 6, 7, 8, 15, 16 or 17 to select the TIM peripheral.
2978:../src/stm32f30x_tim.c ****   * @param  TIM_EventSource: specifies the event source.
2979:../src/stm32f30x_tim.c ****   *          This parameter can be one or more of the following values:	   
2980:../src/stm32f30x_tim.c ****   *            @arg TIM_EventSource_Update: Timer update Event source
2981:../src/stm32f30x_tim.c ****   *            @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
2982:../src/stm32f30x_tim.c ****   *            @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
2983:../src/stm32f30x_tim.c ****   *            @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
2984:../src/stm32f30x_tim.c ****   *            @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
2985:../src/stm32f30x_tim.c ****   *            @arg TIM_EventSource_COM: Timer COM event source  
2986:../src/stm32f30x_tim.c ****   *            @arg TIM_EventSource_Trigger: Timer Trigger Event source
2987:../src/stm32f30x_tim.c ****   *            @arg TIM_EventSource_Break: Timer Break event source
2988:../src/stm32f30x_tim.c ****   * 
2989:../src/stm32f30x_tim.c ****   * @note   TIM6 and TIM7 can only generate an update event. 
2990:../src/stm32f30x_tim.c ****   * @note   TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.
2991:../src/stm32f30x_tim.c ****   *        
2992:../src/stm32f30x_tim.c ****   * @retval None
2993:../src/stm32f30x_tim.c ****   */
2994:../src/stm32f30x_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
2995:../src/stm32f30x_tim.c **** { 
 5497              		.loc 1 2995 0
 5498              		.cfi_startproc
 5499              		@ args = 0, pretend = 0, frame = 8
 5500              		@ frame_needed = 1, uses_anonymous_args = 0
 5501              		@ link register save eliminated.
 5502 1a8c 80B4     		push	{r7}
 5503              	.LCFI264:
 5504              		.cfi_def_cfa_offset 4
 5505              		.cfi_offset 7, -4
 5506 1a8e 83B0     		sub	sp, sp, #12
 5507              	.LCFI265:
 5508              		.cfi_def_cfa_offset 16
 5509 1a90 00AF     		add	r7, sp, #0
 5510              	.LCFI266:
 5511              		.cfi_def_cfa_register 7
 5512 1a92 7860     		str	r0, [r7, #4]
 5513 1a94 0B46     		mov	r3, r1
 5514 1a96 7B80     		strh	r3, [r7, #2]	@ movhi
2996:../src/stm32f30x_tim.c ****   /* Check the parameters */
2997:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2998:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
2999:../src/stm32f30x_tim.c ****  
3000:../src/stm32f30x_tim.c ****   /* Set the event sources */
3001:../src/stm32f30x_tim.c ****   TIMx->EGR = TIM_EventSource;
 5515              		.loc 1 3001 0
 5516 1a98 7A88     		ldrh	r2, [r7, #2]
 5517 1a9a 7B68     		ldr	r3, [r7, #4]
 5518 1a9c 5A61     		str	r2, [r3, #20]
3002:../src/stm32f30x_tim.c **** }
 5519              		.loc 1 3002 0
 5520 1a9e 07F10C07 		add	r7, r7, #12
 5521 1aa2 BD46     		mov	sp, r7
 5522 1aa4 80BC     		pop	{r7}
 5523 1aa6 7047     		bx	lr
 5524              		.cfi_endproc
 5525              	.LFE199:
 5527              		.align	2
 5528              		.global	TIM_GetFlagStatus
 5529              		.thumb
 5530              		.thumb_func
 5532              	TIM_GetFlagStatus:
 5533              	.LFB200:
3003:../src/stm32f30x_tim.c **** 
3004:../src/stm32f30x_tim.c **** /**
3005:../src/stm32f30x_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
3006:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 6, 7, 8, 15, 16 or 17 to select the TIM peripheral.
3007:../src/stm32f30x_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
3008:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3009:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
3010:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
3011:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
3012:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
3013:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
3014:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_CC5: TIM Capture Compare 5 Flag
3015:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_CC6: TIM Capture Compare 6 Flag  
3016:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
3017:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
3018:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
3019:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
3020:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
3021:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
3022:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
3023:../src/stm32f30x_tim.c ****   *
3024:../src/stm32f30x_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
3025:../src/stm32f30x_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.    
3026:../src/stm32f30x_tim.c ****   *
3027:../src/stm32f30x_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
3028:../src/stm32f30x_tim.c ****   */
3029:../src/stm32f30x_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint32_t TIM_FLAG)
3030:../src/stm32f30x_tim.c **** { 
 5534              		.loc 1 3030 0
 5535              		.cfi_startproc
 5536              		@ args = 0, pretend = 0, frame = 16
 5537              		@ frame_needed = 1, uses_anonymous_args = 0
 5538              		@ link register save eliminated.
 5539 1aa8 80B4     		push	{r7}
 5540              	.LCFI267:
 5541              		.cfi_def_cfa_offset 4
 5542              		.cfi_offset 7, -4
 5543 1aaa 85B0     		sub	sp, sp, #20
 5544              	.LCFI268:
 5545              		.cfi_def_cfa_offset 24
 5546 1aac 00AF     		add	r7, sp, #0
 5547              	.LCFI269:
 5548              		.cfi_def_cfa_register 7
 5549 1aae 7860     		str	r0, [r7, #4]
 5550 1ab0 3960     		str	r1, [r7, #0]
3031:../src/stm32f30x_tim.c ****   ITStatus bitstatus = RESET;  
 5551              		.loc 1 3031 0
 5552 1ab2 4FF00003 		mov	r3, #0
 5553 1ab6 FB73     		strb	r3, [r7, #15]
3032:../src/stm32f30x_tim.c ****   /* Check the parameters */
3033:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
3034:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
3035:../src/stm32f30x_tim.c **** 
3036:../src/stm32f30x_tim.c ****   
3037:../src/stm32f30x_tim.c ****   if ((TIMx->SR & TIM_FLAG) != RESET)
 5554              		.loc 1 3037 0
 5555 1ab8 7B68     		ldr	r3, [r7, #4]
 5556 1aba 1A69     		ldr	r2, [r3, #16]
 5557 1abc 3B68     		ldr	r3, [r7, #0]
 5558 1abe 1340     		ands	r3, r3, r2
 5559 1ac0 002B     		cmp	r3, #0
 5560 1ac2 03D0     		beq	.L165
3038:../src/stm32f30x_tim.c ****   {
3039:../src/stm32f30x_tim.c ****     bitstatus = SET;
 5561              		.loc 1 3039 0
 5562 1ac4 4FF00103 		mov	r3, #1
 5563 1ac8 FB73     		strb	r3, [r7, #15]
 5564 1aca 02E0     		b	.L166
 5565              	.L165:
3040:../src/stm32f30x_tim.c ****   }
3041:../src/stm32f30x_tim.c ****   else
3042:../src/stm32f30x_tim.c ****   {
3043:../src/stm32f30x_tim.c ****     bitstatus = RESET;
 5566              		.loc 1 3043 0
 5567 1acc 4FF00003 		mov	r3, #0
 5568 1ad0 FB73     		strb	r3, [r7, #15]
 5569              	.L166:
3044:../src/stm32f30x_tim.c ****   }
3045:../src/stm32f30x_tim.c ****   return bitstatus;
 5570              		.loc 1 3045 0
 5571 1ad2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
3046:../src/stm32f30x_tim.c **** }
 5572              		.loc 1 3046 0
 5573 1ad4 1846     		mov	r0, r3
 5574 1ad6 07F11407 		add	r7, r7, #20
 5575 1ada BD46     		mov	sp, r7
 5576 1adc 80BC     		pop	{r7}
 5577 1ade 7047     		bx	lr
 5578              		.cfi_endproc
 5579              	.LFE200:
 5581              		.align	2
 5582              		.global	TIM_ClearFlag
 5583              		.thumb
 5584              		.thumb_func
 5586              	TIM_ClearFlag:
 5587              	.LFB201:
3047:../src/stm32f30x_tim.c **** 
3048:../src/stm32f30x_tim.c **** /**
3049:../src/stm32f30x_tim.c ****   * @brief  Clears the TIMx's pending flags.
3050:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 6, 7, 8, 15, 16 or 17 to select the TIM peripheral.
3051:../src/stm32f30x_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
3052:../src/stm32f30x_tim.c ****   *          This parameter can be any combination of the following values:
3053:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
3054:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
3055:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
3056:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
3057:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
3058:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_CC5: TIM Capture Compare 5 Flag
3059:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_CC6: TIM Capture Compare 6 Flag               
3060:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
3061:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
3062:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
3063:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
3064:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
3065:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
3066:../src/stm32f30x_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
3067:../src/stm32f30x_tim.c ****   *
3068:../src/stm32f30x_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
3069:../src/stm32f30x_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.
3070:../src/stm32f30x_tim.c ****   *    
3071:../src/stm32f30x_tim.c ****   * @retval None
3072:../src/stm32f30x_tim.c ****   */
3073:../src/stm32f30x_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
3074:../src/stm32f30x_tim.c **** {  
 5588              		.loc 1 3074 0
 5589              		.cfi_startproc
 5590              		@ args = 0, pretend = 0, frame = 8
 5591              		@ frame_needed = 1, uses_anonymous_args = 0
 5592              		@ link register save eliminated.
 5593 1ae0 80B4     		push	{r7}
 5594              	.LCFI270:
 5595              		.cfi_def_cfa_offset 4
 5596              		.cfi_offset 7, -4
 5597 1ae2 83B0     		sub	sp, sp, #12
 5598              	.LCFI271:
 5599              		.cfi_def_cfa_offset 16
 5600 1ae4 00AF     		add	r7, sp, #0
 5601              	.LCFI272:
 5602              		.cfi_def_cfa_register 7
 5603 1ae6 7860     		str	r0, [r7, #4]
 5604 1ae8 0B46     		mov	r3, r1
 5605 1aea 7B80     		strh	r3, [r7, #2]	@ movhi
3075:../src/stm32f30x_tim.c ****   /* Check the parameters */
3076:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
3077:../src/stm32f30x_tim.c ****    
3078:../src/stm32f30x_tim.c ****   /* Clear the flags */
3079:../src/stm32f30x_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
 5606              		.loc 1 3079 0
 5607 1aec 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5608 1aee 6FEA0303 		mvn	r3, r3
 5609 1af2 9BB2     		uxth	r3, r3
 5610 1af4 1A46     		mov	r2, r3
 5611 1af6 7B68     		ldr	r3, [r7, #4]
 5612 1af8 1A61     		str	r2, [r3, #16]
3080:../src/stm32f30x_tim.c **** }
 5613              		.loc 1 3080 0
 5614 1afa 07F10C07 		add	r7, r7, #12
 5615 1afe BD46     		mov	sp, r7
 5616 1b00 80BC     		pop	{r7}
 5617 1b02 7047     		bx	lr
 5618              		.cfi_endproc
 5619              	.LFE201:
 5621              		.align	2
 5622              		.global	TIM_GetITStatus
 5623              		.thumb
 5624              		.thumb_func
 5626              	TIM_GetITStatus:
 5627              	.LFB202:
3081:../src/stm32f30x_tim.c **** 
3082:../src/stm32f30x_tim.c **** /**
3083:../src/stm32f30x_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
3084:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 6, 7, 8, 15, 16 or 17 to select the TIM peripheral.
3085:../src/stm32f30x_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
3086:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3087:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
3088:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
3089:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
3090:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
3091:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
3092:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
3093:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
3094:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
3095:../src/stm32f30x_tim.c ****   *
3096:../src/stm32f30x_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
3097:../src/stm32f30x_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
3098:../src/stm32f30x_tim.c ****   *     
3099:../src/stm32f30x_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
3100:../src/stm32f30x_tim.c ****   */
3101:../src/stm32f30x_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
3102:../src/stm32f30x_tim.c **** {
 5628              		.loc 1 3102 0
 5629              		.cfi_startproc
 5630              		@ args = 0, pretend = 0, frame = 16
 5631              		@ frame_needed = 1, uses_anonymous_args = 0
 5632              		@ link register save eliminated.
 5633 1b04 80B4     		push	{r7}
 5634              	.LCFI273:
 5635              		.cfi_def_cfa_offset 4
 5636              		.cfi_offset 7, -4
 5637 1b06 85B0     		sub	sp, sp, #20
 5638              	.LCFI274:
 5639              		.cfi_def_cfa_offset 24
 5640 1b08 00AF     		add	r7, sp, #0
 5641              	.LCFI275:
 5642              		.cfi_def_cfa_register 7
 5643 1b0a 7860     		str	r0, [r7, #4]
 5644 1b0c 0B46     		mov	r3, r1
 5645 1b0e 7B80     		strh	r3, [r7, #2]	@ movhi
3103:../src/stm32f30x_tim.c ****   ITStatus bitstatus = RESET;  
 5646              		.loc 1 3103 0
 5647 1b10 4FF00003 		mov	r3, #0
 5648 1b14 FB73     		strb	r3, [r7, #15]
3104:../src/stm32f30x_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
 5649              		.loc 1 3104 0
 5650 1b16 4FF00003 		mov	r3, #0
 5651 1b1a BB81     		strh	r3, [r7, #12]	@ movhi
 5652 1b1c 4FF00003 		mov	r3, #0
 5653 1b20 7B81     		strh	r3, [r7, #10]	@ movhi
3105:../src/stm32f30x_tim.c ****   /* Check the parameters */
3106:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
3107:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
3108:../src/stm32f30x_tim.c ****    
3109:../src/stm32f30x_tim.c ****   itstatus = TIMx->SR & TIM_IT;
 5654              		.loc 1 3109 0
 5655 1b22 7B68     		ldr	r3, [r7, #4]
 5656 1b24 1B69     		ldr	r3, [r3, #16]
 5657 1b26 9AB2     		uxth	r2, r3
 5658 1b28 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5659 1b2a 1340     		ands	r3, r3, r2
 5660 1b2c BB81     		strh	r3, [r7, #12]	@ movhi
3110:../src/stm32f30x_tim.c ****   
3111:../src/stm32f30x_tim.c ****   itenable = TIMx->DIER & TIM_IT;
 5661              		.loc 1 3111 0
 5662 1b2e 7B68     		ldr	r3, [r7, #4]
 5663 1b30 DB68     		ldr	r3, [r3, #12]
 5664 1b32 9AB2     		uxth	r2, r3
 5665 1b34 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5666 1b36 1340     		ands	r3, r3, r2
 5667 1b38 7B81     		strh	r3, [r7, #10]	@ movhi
3112:../src/stm32f30x_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 5668              		.loc 1 3112 0
 5669 1b3a BB89     		ldrh	r3, [r7, #12]
 5670 1b3c 002B     		cmp	r3, #0
 5671 1b3e 06D0     		beq	.L170
 5672              		.loc 1 3112 0 is_stmt 0 discriminator 1
 5673 1b40 7B89     		ldrh	r3, [r7, #10]
 5674 1b42 002B     		cmp	r3, #0
 5675 1b44 03D0     		beq	.L170
3113:../src/stm32f30x_tim.c ****   {
3114:../src/stm32f30x_tim.c ****     bitstatus = SET;
 5676              		.loc 1 3114 0 is_stmt 1
 5677 1b46 4FF00103 		mov	r3, #1
 5678 1b4a FB73     		strb	r3, [r7, #15]
 5679 1b4c 02E0     		b	.L171
 5680              	.L170:
3115:../src/stm32f30x_tim.c ****   }
3116:../src/stm32f30x_tim.c ****   else
3117:../src/stm32f30x_tim.c ****   {
3118:../src/stm32f30x_tim.c ****     bitstatus = RESET;
 5681              		.loc 1 3118 0
 5682 1b4e 4FF00003 		mov	r3, #0
 5683 1b52 FB73     		strb	r3, [r7, #15]
 5684              	.L171:
3119:../src/stm32f30x_tim.c ****   }
3120:../src/stm32f30x_tim.c ****   return bitstatus;
 5685              		.loc 1 3120 0
 5686 1b54 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
3121:../src/stm32f30x_tim.c **** }
 5687              		.loc 1 3121 0
 5688 1b56 1846     		mov	r0, r3
 5689 1b58 07F11407 		add	r7, r7, #20
 5690 1b5c BD46     		mov	sp, r7
 5691 1b5e 80BC     		pop	{r7}
 5692 1b60 7047     		bx	lr
 5693              		.cfi_endproc
 5694              	.LFE202:
 5696 1b62 00BF     		.align	2
 5697              		.global	TIM_ClearITPendingBit
 5698              		.thumb
 5699              		.thumb_func
 5701              	TIM_ClearITPendingBit:
 5702              	.LFB203:
3122:../src/stm32f30x_tim.c **** 
3123:../src/stm32f30x_tim.c **** /**
3124:../src/stm32f30x_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
3125:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 6, 7, 8, 15, 16 or 17 to select the TIM peripheral.
3126:../src/stm32f30x_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
3127:../src/stm32f30x_tim.c ****   *          This parameter can be any combination of the following values:
3128:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_Update: TIM1 update Interrupt source
3129:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
3130:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
3131:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
3132:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
3133:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
3134:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
3135:../src/stm32f30x_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
3136:../src/stm32f30x_tim.c ****   *
3137:../src/stm32f30x_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
3138:../src/stm32f30x_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
3139:../src/stm32f30x_tim.c ****   *      
3140:../src/stm32f30x_tim.c ****   * @retval None
3141:../src/stm32f30x_tim.c ****   */
3142:../src/stm32f30x_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
3143:../src/stm32f30x_tim.c **** {
 5703              		.loc 1 3143 0
 5704              		.cfi_startproc
 5705              		@ args = 0, pretend = 0, frame = 8
 5706              		@ frame_needed = 1, uses_anonymous_args = 0
 5707              		@ link register save eliminated.
 5708 1b64 80B4     		push	{r7}
 5709              	.LCFI276:
 5710              		.cfi_def_cfa_offset 4
 5711              		.cfi_offset 7, -4
 5712 1b66 83B0     		sub	sp, sp, #12
 5713              	.LCFI277:
 5714              		.cfi_def_cfa_offset 16
 5715 1b68 00AF     		add	r7, sp, #0
 5716              	.LCFI278:
 5717              		.cfi_def_cfa_register 7
 5718 1b6a 7860     		str	r0, [r7, #4]
 5719 1b6c 0B46     		mov	r3, r1
 5720 1b6e 7B80     		strh	r3, [r7, #2]	@ movhi
3144:../src/stm32f30x_tim.c ****   /* Check the parameters */
3145:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
3146:../src/stm32f30x_tim.c **** 
3147:../src/stm32f30x_tim.c ****   /* Clear the IT pending Bit */
3148:../src/stm32f30x_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
 5721              		.loc 1 3148 0
 5722 1b70 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5723 1b72 6FEA0303 		mvn	r3, r3
 5724 1b76 9BB2     		uxth	r3, r3
 5725 1b78 1A46     		mov	r2, r3
 5726 1b7a 7B68     		ldr	r3, [r7, #4]
 5727 1b7c 1A61     		str	r2, [r3, #16]
3149:../src/stm32f30x_tim.c **** }
 5728              		.loc 1 3149 0
 5729 1b7e 07F10C07 		add	r7, r7, #12
 5730 1b82 BD46     		mov	sp, r7
 5731 1b84 80BC     		pop	{r7}
 5732 1b86 7047     		bx	lr
 5733              		.cfi_endproc
 5734              	.LFE203:
 5736              		.align	2
 5737              		.global	TIM_DMAConfig
 5738              		.thumb
 5739              		.thumb_func
 5741              	TIM_DMAConfig:
 5742              	.LFB204:
3150:../src/stm32f30x_tim.c **** 
3151:../src/stm32f30x_tim.c **** /**
3152:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx's DMA interface.
3153:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4 or 8 to select the TIM peripheral.
3154:../src/stm32f30x_tim.c ****   * @param  TIM_DMABase: DMA Base address.
3155:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3156:../src/stm32f30x_tim.c ****   *            @arg TIM_DMABase_CR1  
3157:../src/stm32f30x_tim.c ****   *            @arg TIM_DMABase_CR2
3158:../src/stm32f30x_tim.c ****   *            @arg TIM_DMABase_SMCR
3159:../src/stm32f30x_tim.c ****   *            @arg TIM_DMABase_DIER
3160:../src/stm32f30x_tim.c ****   *            @arg TIM1_DMABase_SR
3161:../src/stm32f30x_tim.c ****   *            @arg TIM_DMABase_EGR
3162:../src/stm32f30x_tim.c ****   *            @arg TIM_DMABase_CCMR1
3163:../src/stm32f30x_tim.c ****   *            @arg TIM_DMABase_CCMR2
3164:../src/stm32f30x_tim.c ****   *            @arg TIM_DMABase_CCER
3165:../src/stm32f30x_tim.c ****   *            @arg TIM_DMABase_CNT   
3166:../src/stm32f30x_tim.c ****   *            @arg TIM_DMABase_PSC   
3167:../src/stm32f30x_tim.c ****   *            @arg TIM_DMABase_ARR
3168:../src/stm32f30x_tim.c ****   *            @arg TIM_DMABase_RCR
3169:../src/stm32f30x_tim.c ****   *            @arg TIM_DMABase_CCR1
3170:../src/stm32f30x_tim.c ****   *            @arg TIM_DMABase_CCR2
3171:../src/stm32f30x_tim.c ****   *            @arg TIM_DMABase_CCR3  
3172:../src/stm32f30x_tim.c ****   *            @arg TIM_DMABase_CCR4
3173:../src/stm32f30x_tim.c ****   *            @arg TIM_DMABase_BDTR
3174:../src/stm32f30x_tim.c ****   *            @arg TIM_DMABase_DCR
3175:../src/stm32f30x_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length. This parameter can be one value
3176:../src/stm32f30x_tim.c ****   *         between: TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
3177:../src/stm32f30x_tim.c ****   * @retval None
3178:../src/stm32f30x_tim.c ****   */
3179:../src/stm32f30x_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
3180:../src/stm32f30x_tim.c **** {
 5743              		.loc 1 3180 0
 5744              		.cfi_startproc
 5745              		@ args = 0, pretend = 0, frame = 8
 5746              		@ frame_needed = 1, uses_anonymous_args = 0
 5747              		@ link register save eliminated.
 5748 1b88 80B4     		push	{r7}
 5749              	.LCFI279:
 5750              		.cfi_def_cfa_offset 4
 5751              		.cfi_offset 7, -4
 5752 1b8a 83B0     		sub	sp, sp, #12
 5753              	.LCFI280:
 5754              		.cfi_def_cfa_offset 16
 5755 1b8c 00AF     		add	r7, sp, #0
 5756              	.LCFI281:
 5757              		.cfi_def_cfa_register 7
 5758 1b8e 7860     		str	r0, [r7, #4]
 5759 1b90 1346     		mov	r3, r2
 5760 1b92 0A46     		mov	r2, r1	@ movhi
 5761 1b94 7A80     		strh	r2, [r7, #2]	@ movhi
 5762 1b96 3B80     		strh	r3, [r7, #0]	@ movhi
3181:../src/stm32f30x_tim.c ****   /* Check the parameters */
3182:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
3183:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase)); 
3184:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
3185:../src/stm32f30x_tim.c **** 
3186:../src/stm32f30x_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
3187:../src/stm32f30x_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
 5763              		.loc 1 3187 0
 5764 1b98 7A88     		ldrh	r2, [r7, #2]	@ movhi
 5765 1b9a 3B88     		ldrh	r3, [r7, #0]	@ movhi
 5766 1b9c 1343     		orrs	r3, r3, r2
 5767 1b9e 9AB2     		uxth	r2, r3
 5768 1ba0 7B68     		ldr	r3, [r7, #4]
 5769 1ba2 A3F84820 		strh	r2, [r3, #72]	@ movhi
3188:../src/stm32f30x_tim.c **** }
 5770              		.loc 1 3188 0
 5771 1ba6 07F10C07 		add	r7, r7, #12
 5772 1baa BD46     		mov	sp, r7
 5773 1bac 80BC     		pop	{r7}
 5774 1bae 7047     		bx	lr
 5775              		.cfi_endproc
 5776              	.LFE204:
 5778              		.align	2
 5779              		.global	TIM_DMACmd
 5780              		.thumb
 5781              		.thumb_func
 5783              	TIM_DMACmd:
 5784              	.LFB205:
3189:../src/stm32f30x_tim.c **** 
3190:../src/stm32f30x_tim.c **** /**
3191:../src/stm32f30x_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
3192:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 6, 7, 8, 15, 16 or 17 to select the TIM peripheral.
3193:../src/stm32f30x_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
3194:../src/stm32f30x_tim.c ****   *          This parameter can be any combination of the following values:
3195:../src/stm32f30x_tim.c ****   *            @arg TIM_DMA_Update: TIM update Interrupt source
3196:../src/stm32f30x_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
3197:../src/stm32f30x_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
3198:../src/stm32f30x_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
3199:../src/stm32f30x_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
3200:../src/stm32f30x_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
3201:../src/stm32f30x_tim.c ****   *            @arg TIM_DMA_Trigger: TIM Trigger DMA source
3202:../src/stm32f30x_tim.c ****   * @param  NewState: new state of the DMA Request sources.
3203:../src/stm32f30x_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
3204:../src/stm32f30x_tim.c ****   * @retval None
3205:../src/stm32f30x_tim.c ****   */
3206:../src/stm32f30x_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
3207:../src/stm32f30x_tim.c **** { 
 5785              		.loc 1 3207 0
 5786              		.cfi_startproc
 5787              		@ args = 0, pretend = 0, frame = 8
 5788              		@ frame_needed = 1, uses_anonymous_args = 0
 5789              		@ link register save eliminated.
 5790 1bb0 80B4     		push	{r7}
 5791              	.LCFI282:
 5792              		.cfi_def_cfa_offset 4
 5793              		.cfi_offset 7, -4
 5794 1bb2 83B0     		sub	sp, sp, #12
 5795              	.LCFI283:
 5796              		.cfi_def_cfa_offset 16
 5797 1bb4 00AF     		add	r7, sp, #0
 5798              	.LCFI284:
 5799              		.cfi_def_cfa_register 7
 5800 1bb6 7860     		str	r0, [r7, #4]
 5801 1bb8 1346     		mov	r3, r2
 5802 1bba 0A46     		mov	r2, r1	@ movhi
 5803 1bbc 7A80     		strh	r2, [r7, #2]	@ movhi
 5804 1bbe 7B70     		strb	r3, [r7, #1]
3208:../src/stm32f30x_tim.c ****   /* Check the parameters */
3209:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
3210:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
3211:../src/stm32f30x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
3212:../src/stm32f30x_tim.c ****   
3213:../src/stm32f30x_tim.c ****   if (NewState != DISABLE)
 5805              		.loc 1 3213 0
 5806 1bc0 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 5807 1bc2 002B     		cmp	r3, #0
 5808 1bc4 06D0     		beq	.L176
3214:../src/stm32f30x_tim.c ****   {
3215:../src/stm32f30x_tim.c ****     /* Enable the DMA sources */
3216:../src/stm32f30x_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 5809              		.loc 1 3216 0
 5810 1bc6 7B68     		ldr	r3, [r7, #4]
 5811 1bc8 DA68     		ldr	r2, [r3, #12]
 5812 1bca 7B88     		ldrh	r3, [r7, #2]
 5813 1bcc 1A43     		orrs	r2, r2, r3
 5814 1bce 7B68     		ldr	r3, [r7, #4]
 5815 1bd0 DA60     		str	r2, [r3, #12]
 5816 1bd2 08E0     		b	.L175
 5817              	.L176:
3217:../src/stm32f30x_tim.c ****   }
3218:../src/stm32f30x_tim.c ****   else
3219:../src/stm32f30x_tim.c ****   {
3220:../src/stm32f30x_tim.c ****     /* Disable the DMA sources */
3221:../src/stm32f30x_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 5818              		.loc 1 3221 0
 5819 1bd4 7B68     		ldr	r3, [r7, #4]
 5820 1bd6 DA68     		ldr	r2, [r3, #12]
 5821 1bd8 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5822 1bda 6FEA0303 		mvn	r3, r3
 5823 1bde 9BB2     		uxth	r3, r3
 5824 1be0 1A40     		ands	r2, r2, r3
 5825 1be2 7B68     		ldr	r3, [r7, #4]
 5826 1be4 DA60     		str	r2, [r3, #12]
 5827              	.L175:
3222:../src/stm32f30x_tim.c ****   }
3223:../src/stm32f30x_tim.c **** }
 5828              		.loc 1 3223 0
 5829 1be6 07F10C07 		add	r7, r7, #12
 5830 1bea BD46     		mov	sp, r7
 5831 1bec 80BC     		pop	{r7}
 5832 1bee 7047     		bx	lr
 5833              		.cfi_endproc
 5834              	.LFE205:
 5836              		.align	2
 5837              		.global	TIM_SelectCCDMA
 5838              		.thumb
 5839              		.thumb_func
 5841              	TIM_SelectCCDMA:
 5842              	.LFB206:
3224:../src/stm32f30x_tim.c **** 
3225:../src/stm32f30x_tim.c **** /**
3226:../src/stm32f30x_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
3227:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 8, 15, 16 or 17 to select the TIM peripheral.
3228:../src/stm32f30x_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
3229:../src/stm32f30x_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
3230:../src/stm32f30x_tim.c ****   * @retval None
3231:../src/stm32f30x_tim.c ****   */
3232:../src/stm32f30x_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
3233:../src/stm32f30x_tim.c **** {
 5843              		.loc 1 3233 0
 5844              		.cfi_startproc
 5845              		@ args = 0, pretend = 0, frame = 8
 5846              		@ frame_needed = 1, uses_anonymous_args = 0
 5847              		@ link register save eliminated.
 5848 1bf0 80B4     		push	{r7}
 5849              	.LCFI285:
 5850              		.cfi_def_cfa_offset 4
 5851              		.cfi_offset 7, -4
 5852 1bf2 83B0     		sub	sp, sp, #12
 5853              	.LCFI286:
 5854              		.cfi_def_cfa_offset 16
 5855 1bf4 00AF     		add	r7, sp, #0
 5856              	.LCFI287:
 5857              		.cfi_def_cfa_register 7
 5858 1bf6 7860     		str	r0, [r7, #4]
 5859 1bf8 0B46     		mov	r3, r1
 5860 1bfa FB70     		strb	r3, [r7, #3]
3234:../src/stm32f30x_tim.c ****   /* Check the parameters */
3235:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
3236:../src/stm32f30x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
3237:../src/stm32f30x_tim.c **** 
3238:../src/stm32f30x_tim.c ****   if (NewState != DISABLE)
 5861              		.loc 1 3238 0
 5862 1bfc FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5863 1bfe 002B     		cmp	r3, #0
 5864 1c00 06D0     		beq	.L179
3239:../src/stm32f30x_tim.c ****   {
3240:../src/stm32f30x_tim.c ****     /* Set the CCDS Bit */
3241:../src/stm32f30x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
 5865              		.loc 1 3241 0
 5866 1c02 7B68     		ldr	r3, [r7, #4]
 5867 1c04 5B68     		ldr	r3, [r3, #4]
 5868 1c06 43F00802 		orr	r2, r3, #8
 5869 1c0a 7B68     		ldr	r3, [r7, #4]
 5870 1c0c 5A60     		str	r2, [r3, #4]
 5871 1c0e 06E0     		b	.L178
 5872              	.L179:
3242:../src/stm32f30x_tim.c ****   }
3243:../src/stm32f30x_tim.c ****   else
3244:../src/stm32f30x_tim.c ****   {
3245:../src/stm32f30x_tim.c ****     /* Reset the CCDS Bit */
3246:../src/stm32f30x_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCDS;
 5873              		.loc 1 3246 0
 5874 1c10 7B68     		ldr	r3, [r7, #4]
 5875 1c12 5A68     		ldr	r2, [r3, #4]
 5876 1c14 4FF6F773 		movw	r3, #65527
 5877 1c18 1340     		ands	r3, r3, r2
 5878 1c1a 7A68     		ldr	r2, [r7, #4]
 5879 1c1c 5360     		str	r3, [r2, #4]
 5880              	.L178:
3247:../src/stm32f30x_tim.c ****   }
3248:../src/stm32f30x_tim.c **** }
 5881              		.loc 1 3248 0
 5882 1c1e 07F10C07 		add	r7, r7, #12
 5883 1c22 BD46     		mov	sp, r7
 5884 1c24 80BC     		pop	{r7}
 5885 1c26 7047     		bx	lr
 5886              		.cfi_endproc
 5887              	.LFE206:
 5889              		.align	2
 5890              		.global	TIM_InternalClockConfig
 5891              		.thumb
 5892              		.thumb_func
 5894              	TIM_InternalClockConfig:
 5895              	.LFB207:
3249:../src/stm32f30x_tim.c **** /**
3250:../src/stm32f30x_tim.c ****   * @}
3251:../src/stm32f30x_tim.c ****   */
3252:../src/stm32f30x_tim.c **** 
3253:../src/stm32f30x_tim.c **** /** @defgroup TIM_Group6 Clocks management functions
3254:../src/stm32f30x_tim.c ****  *  @brief    Clocks management functions
3255:../src/stm32f30x_tim.c ****  *
3256:../src/stm32f30x_tim.c **** @verbatim   
3257:../src/stm32f30x_tim.c ****  ===============================================================================
3258:../src/stm32f30x_tim.c ****                    ##### Clocks management functions #####
3259:../src/stm32f30x_tim.c ****  ===============================================================================  
3260:../src/stm32f30x_tim.c **** 
3261:../src/stm32f30x_tim.c **** @endverbatim
3262:../src/stm32f30x_tim.c ****   * @{
3263:../src/stm32f30x_tim.c ****   */
3264:../src/stm32f30x_tim.c **** 
3265:../src/stm32f30x_tim.c **** /**
3266:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx internal Clock
3267:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8 or 15 to select the TIM 
3268:../src/stm32f30x_tim.c ****   *         peripheral.
3269:../src/stm32f30x_tim.c ****   * @retval None
3270:../src/stm32f30x_tim.c ****   */
3271:../src/stm32f30x_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
3272:../src/stm32f30x_tim.c **** {
 5896              		.loc 1 3272 0
 5897              		.cfi_startproc
 5898              		@ args = 0, pretend = 0, frame = 8
 5899              		@ frame_needed = 1, uses_anonymous_args = 0
 5900              		@ link register save eliminated.
 5901 1c28 80B4     		push	{r7}
 5902              	.LCFI288:
 5903              		.cfi_def_cfa_offset 4
 5904              		.cfi_offset 7, -4
 5905 1c2a 83B0     		sub	sp, sp, #12
 5906              	.LCFI289:
 5907              		.cfi_def_cfa_offset 16
 5908 1c2c 00AF     		add	r7, sp, #0
 5909              	.LCFI290:
 5910              		.cfi_def_cfa_register 7
 5911 1c2e 7860     		str	r0, [r7, #4]
3273:../src/stm32f30x_tim.c ****   /* Check the parameters */
3274:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3275:../src/stm32f30x_tim.c **** 
3276:../src/stm32f30x_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
3277:../src/stm32f30x_tim.c ****   TIMx->SMCR &=  (uint16_t)~TIM_SMCR_SMS;
 5912              		.loc 1 3277 0
 5913 1c30 7B68     		ldr	r3, [r7, #4]
 5914 1c32 9A68     		ldr	r2, [r3, #8]
 5915 1c34 4FF6F873 		movw	r3, #65528
 5916 1c38 1340     		ands	r3, r3, r2
 5917 1c3a 7A68     		ldr	r2, [r7, #4]
 5918 1c3c 9360     		str	r3, [r2, #8]
3278:../src/stm32f30x_tim.c **** }
 5919              		.loc 1 3278 0
 5920 1c3e 07F10C07 		add	r7, r7, #12
 5921 1c42 BD46     		mov	sp, r7
 5922 1c44 80BC     		pop	{r7}
 5923 1c46 7047     		bx	lr
 5924              		.cfi_endproc
 5925              	.LFE207:
 5927              		.align	2
 5928              		.global	TIM_ITRxExternalClockConfig
 5929              		.thumb
 5930              		.thumb_func
 5932              	TIM_ITRxExternalClockConfig:
 5933              	.LFB208:
3279:../src/stm32f30x_tim.c **** 
3280:../src/stm32f30x_tim.c **** /**
3281:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
3282:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8 or 15 to select the TIM 
3283:../src/stm32f30x_tim.c ****   *         peripheral.
3284:../src/stm32f30x_tim.c ****   * @param  TIM_InputTriggerSource: Trigger source.
3285:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3286:../src/stm32f30x_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
3287:../src/stm32f30x_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
3288:../src/stm32f30x_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
3289:../src/stm32f30x_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
3290:../src/stm32f30x_tim.c ****   * @retval None
3291:../src/stm32f30x_tim.c ****   */
3292:../src/stm32f30x_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
3293:../src/stm32f30x_tim.c **** {
 5934              		.loc 1 3293 0
 5935              		.cfi_startproc
 5936              		@ args = 0, pretend = 0, frame = 8
 5937              		@ frame_needed = 1, uses_anonymous_args = 0
 5938 1c48 80B5     		push	{r7, lr}
 5939              	.LCFI291:
 5940              		.cfi_def_cfa_offset 8
 5941              		.cfi_offset 7, -8
 5942              		.cfi_offset 14, -4
 5943 1c4a 82B0     		sub	sp, sp, #8
 5944              	.LCFI292:
 5945              		.cfi_def_cfa_offset 16
 5946 1c4c 00AF     		add	r7, sp, #0
 5947              	.LCFI293:
 5948              		.cfi_def_cfa_register 7
 5949 1c4e 7860     		str	r0, [r7, #4]
 5950 1c50 0B46     		mov	r3, r1
 5951 1c52 7B80     		strh	r3, [r7, #2]	@ movhi
3294:../src/stm32f30x_tim.c ****   /* Check the parameters */
3295:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3296:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
3297:../src/stm32f30x_tim.c **** 
3298:../src/stm32f30x_tim.c ****   /* Select the Internal Trigger */
3299:../src/stm32f30x_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
 5952              		.loc 1 3299 0
 5953 1c54 7B88     		ldrh	r3, [r7, #2]
 5954 1c56 7868     		ldr	r0, [r7, #4]
 5955 1c58 1946     		mov	r1, r3
 5956 1c5a FFF7FEFF 		bl	TIM_SelectInputTrigger
3300:../src/stm32f30x_tim.c **** 
3301:../src/stm32f30x_tim.c ****   /* Select the External clock mode1 */
3302:../src/stm32f30x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 5957              		.loc 1 3302 0
 5958 1c5e 7B68     		ldr	r3, [r7, #4]
 5959 1c60 9B68     		ldr	r3, [r3, #8]
 5960 1c62 43F00702 		orr	r2, r3, #7
 5961 1c66 7B68     		ldr	r3, [r7, #4]
 5962 1c68 9A60     		str	r2, [r3, #8]
3303:../src/stm32f30x_tim.c **** }
 5963              		.loc 1 3303 0
 5964 1c6a 07F10807 		add	r7, r7, #8
 5965 1c6e BD46     		mov	sp, r7
 5966 1c70 80BD     		pop	{r7, pc}
 5967              		.cfi_endproc
 5968              	.LFE208:
 5970 1c72 00BF     		.align	2
 5971              		.global	TIM_TIxExternalClockConfig
 5972              		.thumb
 5973              		.thumb_func
 5975              	TIM_TIxExternalClockConfig:
 5976              	.LFB209:
3304:../src/stm32f30x_tim.c **** 
3305:../src/stm32f30x_tim.c **** /**
3306:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
3307:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8 or 15  
3308:../src/stm32f30x_tim.c ****   *         to select the TIM peripheral.
3309:../src/stm32f30x_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
3310:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3311:../src/stm32f30x_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
3312:../src/stm32f30x_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
3313:../src/stm32f30x_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
3314:../src/stm32f30x_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
3315:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3316:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPolarity_Rising
3317:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPolarity_Falling
3318:../src/stm32f30x_tim.c ****   * @param  ICFilter: specifies the filter value.
3319:../src/stm32f30x_tim.c ****   *          This parameter must be a value between 0x0 and 0xF.
3320:../src/stm32f30x_tim.c ****   * @retval None
3321:../src/stm32f30x_tim.c ****   */
3322:../src/stm32f30x_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
3323:../src/stm32f30x_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
3324:../src/stm32f30x_tim.c **** {
 5977              		.loc 1 3324 0
 5978              		.cfi_startproc
 5979              		@ args = 0, pretend = 0, frame = 16
 5980              		@ frame_needed = 1, uses_anonymous_args = 0
 5981 1c74 80B5     		push	{r7, lr}
 5982              	.LCFI294:
 5983              		.cfi_def_cfa_offset 8
 5984              		.cfi_offset 7, -8
 5985              		.cfi_offset 14, -4
 5986 1c76 84B0     		sub	sp, sp, #16
 5987              	.LCFI295:
 5988              		.cfi_def_cfa_offset 24
 5989 1c78 00AF     		add	r7, sp, #0
 5990              	.LCFI296:
 5991              		.cfi_def_cfa_register 7
 5992 1c7a F860     		str	r0, [r7, #12]
 5993 1c7c 7981     		strh	r1, [r7, #10]	@ movhi
 5994 1c7e 3A81     		strh	r2, [r7, #8]	@ movhi
 5995 1c80 FB80     		strh	r3, [r7, #6]	@ movhi
3325:../src/stm32f30x_tim.c ****   /* Check the parameters */
3326:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3327:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
3328:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
3329:../src/stm32f30x_tim.c **** 
3330:../src/stm32f30x_tim.c ****   /* Configure the Timer Input Clock Source */
3331:../src/stm32f30x_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
 5996              		.loc 1 3331 0
 5997 1c82 7B89     		ldrh	r3, [r7, #10]
 5998 1c84 602B     		cmp	r3, #96
 5999 1c86 08D1     		bne	.L184
3332:../src/stm32f30x_tim.c ****   {
3333:../src/stm32f30x_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 6000              		.loc 1 3333 0
 6001 1c88 3A89     		ldrh	r2, [r7, #8]
 6002 1c8a FB88     		ldrh	r3, [r7, #6]
 6003 1c8c F868     		ldr	r0, [r7, #12]
 6004 1c8e 1146     		mov	r1, r2
 6005 1c90 4FF00102 		mov	r2, #1
 6006 1c94 00F0ACF9 		bl	TI2_Config
 6007 1c98 07E0     		b	.L185
 6008              	.L184:
3334:../src/stm32f30x_tim.c ****   }
3335:../src/stm32f30x_tim.c ****   else
3336:../src/stm32f30x_tim.c ****   {
3337:../src/stm32f30x_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 6009              		.loc 1 3337 0
 6010 1c9a 3A89     		ldrh	r2, [r7, #8]
 6011 1c9c FB88     		ldrh	r3, [r7, #6]
 6012 1c9e F868     		ldr	r0, [r7, #12]
 6013 1ca0 1146     		mov	r1, r2
 6014 1ca2 4FF00102 		mov	r2, #1
 6015 1ca6 00F067F9 		bl	TI1_Config
 6016              	.L185:
3338:../src/stm32f30x_tim.c ****   }
3339:../src/stm32f30x_tim.c ****   /* Select the Trigger source */
3340:../src/stm32f30x_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
 6017              		.loc 1 3340 0
 6018 1caa 7B89     		ldrh	r3, [r7, #10]
 6019 1cac F868     		ldr	r0, [r7, #12]
 6020 1cae 1946     		mov	r1, r3
 6021 1cb0 FFF7FEFF 		bl	TIM_SelectInputTrigger
3341:../src/stm32f30x_tim.c ****   /* Select the External clock mode1 */
3342:../src/stm32f30x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 6022              		.loc 1 3342 0
 6023 1cb4 FB68     		ldr	r3, [r7, #12]
 6024 1cb6 9B68     		ldr	r3, [r3, #8]
 6025 1cb8 43F00702 		orr	r2, r3, #7
 6026 1cbc FB68     		ldr	r3, [r7, #12]
 6027 1cbe 9A60     		str	r2, [r3, #8]
3343:../src/stm32f30x_tim.c **** }
 6028              		.loc 1 3343 0
 6029 1cc0 07F11007 		add	r7, r7, #16
 6030 1cc4 BD46     		mov	sp, r7
 6031 1cc6 80BD     		pop	{r7, pc}
 6032              		.cfi_endproc
 6033              	.LFE209:
 6035              		.align	2
 6036              		.global	TIM_ETRClockMode1Config
 6037              		.thumb
 6038              		.thumb_func
 6040              	TIM_ETRClockMode1Config:
 6041              	.LFB210:
3344:../src/stm32f30x_tim.c **** 
3345:../src/stm32f30x_tim.c **** /**
3346:../src/stm32f30x_tim.c ****   * @brief  Configures the External clock Mode1
3347:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4 or 8 to select the TIM peripheral.
3348:../src/stm32f30x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
3349:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3350:../src/stm32f30x_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
3351:../src/stm32f30x_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
3352:../src/stm32f30x_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
3353:../src/stm32f30x_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
3354:../src/stm32f30x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
3355:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3356:../src/stm32f30x_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
3357:../src/stm32f30x_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
3358:../src/stm32f30x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
3359:../src/stm32f30x_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
3360:../src/stm32f30x_tim.c ****   * @retval None
3361:../src/stm32f30x_tim.c ****   */
3362:../src/stm32f30x_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
3363:../src/stm32f30x_tim.c ****                             uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
3364:../src/stm32f30x_tim.c **** {
 6042              		.loc 1 3364 0
 6043              		.cfi_startproc
 6044              		@ args = 0, pretend = 0, frame = 24
 6045              		@ frame_needed = 1, uses_anonymous_args = 0
 6046 1cc8 80B5     		push	{r7, lr}
 6047              	.LCFI297:
 6048              		.cfi_def_cfa_offset 8
 6049              		.cfi_offset 7, -8
 6050              		.cfi_offset 14, -4
 6051 1cca 86B0     		sub	sp, sp, #24
 6052              	.LCFI298:
 6053              		.cfi_def_cfa_offset 32
 6054 1ccc 00AF     		add	r7, sp, #0
 6055              	.LCFI299:
 6056              		.cfi_def_cfa_register 7
 6057 1cce F860     		str	r0, [r7, #12]
 6058 1cd0 7981     		strh	r1, [r7, #10]	@ movhi
 6059 1cd2 3A81     		strh	r2, [r7, #8]	@ movhi
 6060 1cd4 FB80     		strh	r3, [r7, #6]	@ movhi
3365:../src/stm32f30x_tim.c ****   uint16_t tmpsmcr = 0;
 6061              		.loc 1 3365 0
 6062 1cd6 4FF00003 		mov	r3, #0
 6063 1cda FB82     		strh	r3, [r7, #22]	@ movhi
3366:../src/stm32f30x_tim.c **** 
3367:../src/stm32f30x_tim.c ****   /* Check the parameters */
3368:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
3369:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
3370:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
3371:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
3372:../src/stm32f30x_tim.c ****   /* Configure the ETR Clock source */
3373:../src/stm32f30x_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 6064              		.loc 1 3373 0
 6065 1cdc 7989     		ldrh	r1, [r7, #10]
 6066 1cde 3A89     		ldrh	r2, [r7, #8]
 6067 1ce0 FB88     		ldrh	r3, [r7, #6]
 6068 1ce2 F868     		ldr	r0, [r7, #12]
 6069 1ce4 FFF7FEFF 		bl	TIM_ETRConfig
3374:../src/stm32f30x_tim.c ****   
3375:../src/stm32f30x_tim.c ****   /* Get the TIMx SMCR register value */
3376:../src/stm32f30x_tim.c ****   tmpsmcr = TIMx->SMCR;
 6070              		.loc 1 3376 0
 6071 1ce8 FB68     		ldr	r3, [r7, #12]
 6072 1cea 9B68     		ldr	r3, [r3, #8]
 6073 1cec FB82     		strh	r3, [r7, #22]	@ movhi
3377:../src/stm32f30x_tim.c **** 
3378:../src/stm32f30x_tim.c ****   /* Reset the SMS Bits */
3379:../src/stm32f30x_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 6074              		.loc 1 3379 0
 6075 1cee FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6076 1cf0 23F00703 		bic	r3, r3, #7
 6077 1cf4 FB82     		strh	r3, [r7, #22]	@ movhi
3380:../src/stm32f30x_tim.c **** 
3381:../src/stm32f30x_tim.c ****   /* Select the External clock mode1 */
3382:../src/stm32f30x_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
 6078              		.loc 1 3382 0
 6079 1cf6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6080 1cf8 43F00703 		orr	r3, r3, #7
 6081 1cfc FB82     		strh	r3, [r7, #22]	@ movhi
3383:../src/stm32f30x_tim.c **** 
3384:../src/stm32f30x_tim.c ****   /* Select the Trigger selection : ETRF */
3385:../src/stm32f30x_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 6082              		.loc 1 3385 0
 6083 1cfe FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6084 1d00 23F07003 		bic	r3, r3, #112
 6085 1d04 FB82     		strh	r3, [r7, #22]	@ movhi
3386:../src/stm32f30x_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
 6086              		.loc 1 3386 0
 6087 1d06 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6088 1d08 43F07003 		orr	r3, r3, #112
 6089 1d0c FB82     		strh	r3, [r7, #22]	@ movhi
3387:../src/stm32f30x_tim.c **** 
3388:../src/stm32f30x_tim.c ****   /* Write to TIMx SMCR */
3389:../src/stm32f30x_tim.c ****   TIMx->SMCR = tmpsmcr;
 6090              		.loc 1 3389 0
 6091 1d0e FA8A     		ldrh	r2, [r7, #22]
 6092 1d10 FB68     		ldr	r3, [r7, #12]
 6093 1d12 9A60     		str	r2, [r3, #8]
3390:../src/stm32f30x_tim.c **** }
 6094              		.loc 1 3390 0
 6095 1d14 07F11807 		add	r7, r7, #24
 6096 1d18 BD46     		mov	sp, r7
 6097 1d1a 80BD     		pop	{r7, pc}
 6098              		.cfi_endproc
 6099              	.LFE210:
 6101              		.align	2
 6102              		.global	TIM_ETRClockMode2Config
 6103              		.thumb
 6104              		.thumb_func
 6106              	TIM_ETRClockMode2Config:
 6107              	.LFB211:
3391:../src/stm32f30x_tim.c **** 
3392:../src/stm32f30x_tim.c **** /**
3393:../src/stm32f30x_tim.c ****   * @brief  Configures the External clock Mode2
3394:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4 or 8 to select the TIM peripheral.
3395:../src/stm32f30x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
3396:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3397:../src/stm32f30x_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
3398:../src/stm32f30x_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
3399:../src/stm32f30x_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
3400:../src/stm32f30x_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
3401:../src/stm32f30x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
3402:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3403:../src/stm32f30x_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
3404:../src/stm32f30x_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
3405:../src/stm32f30x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
3406:../src/stm32f30x_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
3407:../src/stm32f30x_tim.c ****   * @retval None
3408:../src/stm32f30x_tim.c ****   */
3409:../src/stm32f30x_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
3410:../src/stm32f30x_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
3411:../src/stm32f30x_tim.c **** {
 6108              		.loc 1 3411 0
 6109              		.cfi_startproc
 6110              		@ args = 0, pretend = 0, frame = 16
 6111              		@ frame_needed = 1, uses_anonymous_args = 0
 6112 1d1c 80B5     		push	{r7, lr}
 6113              	.LCFI300:
 6114              		.cfi_def_cfa_offset 8
 6115              		.cfi_offset 7, -8
 6116              		.cfi_offset 14, -4
 6117 1d1e 84B0     		sub	sp, sp, #16
 6118              	.LCFI301:
 6119              		.cfi_def_cfa_offset 24
 6120 1d20 00AF     		add	r7, sp, #0
 6121              	.LCFI302:
 6122              		.cfi_def_cfa_register 7
 6123 1d22 F860     		str	r0, [r7, #12]
 6124 1d24 7981     		strh	r1, [r7, #10]	@ movhi
 6125 1d26 3A81     		strh	r2, [r7, #8]	@ movhi
 6126 1d28 FB80     		strh	r3, [r7, #6]	@ movhi
3412:../src/stm32f30x_tim.c ****   /* Check the parameters */
3413:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
3414:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
3415:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
3416:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
3417:../src/stm32f30x_tim.c **** 
3418:../src/stm32f30x_tim.c ****   /* Configure the ETR Clock source */
3419:../src/stm32f30x_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 6127              		.loc 1 3419 0
 6128 1d2a 7989     		ldrh	r1, [r7, #10]
 6129 1d2c 3A89     		ldrh	r2, [r7, #8]
 6130 1d2e FB88     		ldrh	r3, [r7, #6]
 6131 1d30 F868     		ldr	r0, [r7, #12]
 6132 1d32 FFF7FEFF 		bl	TIM_ETRConfig
3420:../src/stm32f30x_tim.c **** 
3421:../src/stm32f30x_tim.c ****   /* Enable the External clock mode2 */
3422:../src/stm32f30x_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
 6133              		.loc 1 3422 0
 6134 1d36 FB68     		ldr	r3, [r7, #12]
 6135 1d38 9B68     		ldr	r3, [r3, #8]
 6136 1d3a 43F48042 		orr	r2, r3, #16384
 6137 1d3e FB68     		ldr	r3, [r7, #12]
 6138 1d40 9A60     		str	r2, [r3, #8]
3423:../src/stm32f30x_tim.c **** }
 6139              		.loc 1 3423 0
 6140 1d42 07F11007 		add	r7, r7, #16
 6141 1d46 BD46     		mov	sp, r7
 6142 1d48 80BD     		pop	{r7, pc}
 6143              		.cfi_endproc
 6144              	.LFE211:
 6146 1d4a 00BF     		.align	2
 6147              		.global	TIM_SelectInputTrigger
 6148              		.thumb
 6149              		.thumb_func
 6151              	TIM_SelectInputTrigger:
 6152              	.LFB212:
3424:../src/stm32f30x_tim.c **** /**
3425:../src/stm32f30x_tim.c ****   * @}
3426:../src/stm32f30x_tim.c ****   */
3427:../src/stm32f30x_tim.c **** 
3428:../src/stm32f30x_tim.c **** /** @defgroup TIM_Group7 Synchronization management functions
3429:../src/stm32f30x_tim.c ****  *  @brief    Synchronization management functions 
3430:../src/stm32f30x_tim.c ****  *
3431:../src/stm32f30x_tim.c **** @verbatim   
3432:../src/stm32f30x_tim.c ****  ===============================================================================
3433:../src/stm32f30x_tim.c ****                  ##### Synchronization management functions #####
3434:../src/stm32f30x_tim.c ****  ===============================================================================  
3435:../src/stm32f30x_tim.c ****                          
3436:../src/stm32f30x_tim.c ****   *** TIM Driver: how to use it in synchronization Mode ***
3437:../src/stm32f30x_tim.c ****   ========================================================= 
3438:../src/stm32f30x_tim.c ****   [..] Case of two/several Timers
3439:../src/stm32f30x_tim.c ****        
3440:../src/stm32f30x_tim.c ****        (#) Configure the Master Timers using the following functions:
3441:../src/stm32f30x_tim.c ****            (++) void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource); 
3442:../src/stm32f30x_tim.c ****            (++) void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);  
3443:../src/stm32f30x_tim.c ****        (#) Configure the Slave Timers using the following functions: 
3444:../src/stm32f30x_tim.c ****            (++) void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
3445:../src/stm32f30x_tim.c ****            (++) void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
3446:../src/stm32f30x_tim.c ****           
3447:../src/stm32f30x_tim.c ****   [..] Case of Timers and external trigger(ETR pin)
3448:../src/stm32f30x_tim.c ****            
3449:../src/stm32f30x_tim.c ****        (#) Configure the External trigger using this function:
3450:../src/stm32f30x_tim.c ****            (++) void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_Ex
3451:../src/stm32f30x_tim.c ****                                    uint16_t ExtTRGFilter);
3452:../src/stm32f30x_tim.c ****        (#) Configure the Slave Timers using the following functions: 
3453:../src/stm32f30x_tim.c ****            (++) void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
3454:../src/stm32f30x_tim.c ****            (++) void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
3455:../src/stm32f30x_tim.c **** 
3456:../src/stm32f30x_tim.c **** @endverbatim
3457:../src/stm32f30x_tim.c ****   * @{
3458:../src/stm32f30x_tim.c ****   */
3459:../src/stm32f30x_tim.c **** 
3460:../src/stm32f30x_tim.c **** /**
3461:../src/stm32f30x_tim.c ****   * @brief  Selects the Input Trigger source
3462:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 8 or 15  
3463:../src/stm32f30x_tim.c ****   *         to select the TIM peripheral.
3464:../src/stm32f30x_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
3465:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3466:../src/stm32f30x_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
3467:../src/stm32f30x_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
3468:../src/stm32f30x_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
3469:../src/stm32f30x_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
3470:../src/stm32f30x_tim.c ****   *            @arg TIM_TS_TI1F_ED: TI1 Edge Detector
3471:../src/stm32f30x_tim.c ****   *            @arg TIM_TS_TI1FP1: Filtered Timer Input 1
3472:../src/stm32f30x_tim.c ****   *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
3473:../src/stm32f30x_tim.c ****   *            @arg TIM_TS_ETRF: External Trigger input
3474:../src/stm32f30x_tim.c ****   * @retval None
3475:../src/stm32f30x_tim.c ****   */
3476:../src/stm32f30x_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
3477:../src/stm32f30x_tim.c **** {
 6153              		.loc 1 3477 0
 6154              		.cfi_startproc
 6155              		@ args = 0, pretend = 0, frame = 16
 6156              		@ frame_needed = 1, uses_anonymous_args = 0
 6157              		@ link register save eliminated.
 6158 1d4c 80B4     		push	{r7}
 6159              	.LCFI303:
 6160              		.cfi_def_cfa_offset 4
 6161              		.cfi_offset 7, -4
 6162 1d4e 85B0     		sub	sp, sp, #20
 6163              	.LCFI304:
 6164              		.cfi_def_cfa_offset 24
 6165 1d50 00AF     		add	r7, sp, #0
 6166              	.LCFI305:
 6167              		.cfi_def_cfa_register 7
 6168 1d52 7860     		str	r0, [r7, #4]
 6169 1d54 0B46     		mov	r3, r1
 6170 1d56 7B80     		strh	r3, [r7, #2]	@ movhi
3478:../src/stm32f30x_tim.c ****   uint16_t tmpsmcr = 0;
 6171              		.loc 1 3478 0
 6172 1d58 4FF00003 		mov	r3, #0
 6173 1d5c FB81     		strh	r3, [r7, #14]	@ movhi
3479:../src/stm32f30x_tim.c **** 
3480:../src/stm32f30x_tim.c ****   /* Check the parameters */
3481:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx)); 
3482:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
3483:../src/stm32f30x_tim.c **** 
3484:../src/stm32f30x_tim.c ****   /* Get the TIMx SMCR register value */
3485:../src/stm32f30x_tim.c ****   tmpsmcr = TIMx->SMCR;
 6174              		.loc 1 3485 0
 6175 1d5e 7B68     		ldr	r3, [r7, #4]
 6176 1d60 9B68     		ldr	r3, [r3, #8]
 6177 1d62 FB81     		strh	r3, [r7, #14]	@ movhi
3486:../src/stm32f30x_tim.c **** 
3487:../src/stm32f30x_tim.c ****   /* Reset the TS Bits */
3488:../src/stm32f30x_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 6178              		.loc 1 3488 0
 6179 1d64 FB89     		ldrh	r3, [r7, #14]	@ movhi
 6180 1d66 23F07003 		bic	r3, r3, #112
 6181 1d6a FB81     		strh	r3, [r7, #14]	@ movhi
3489:../src/stm32f30x_tim.c **** 
3490:../src/stm32f30x_tim.c ****   /* Set the Input Trigger source */
3491:../src/stm32f30x_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
 6182              		.loc 1 3491 0
 6183 1d6c FA89     		ldrh	r2, [r7, #14]	@ movhi
 6184 1d6e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 6185 1d70 1343     		orrs	r3, r3, r2
 6186 1d72 FB81     		strh	r3, [r7, #14]	@ movhi
3492:../src/stm32f30x_tim.c **** 
3493:../src/stm32f30x_tim.c ****   /* Write to TIMx SMCR */
3494:../src/stm32f30x_tim.c ****   TIMx->SMCR = tmpsmcr;
 6187              		.loc 1 3494 0
 6188 1d74 FA89     		ldrh	r2, [r7, #14]
 6189 1d76 7B68     		ldr	r3, [r7, #4]
 6190 1d78 9A60     		str	r2, [r3, #8]
3495:../src/stm32f30x_tim.c **** }
 6191              		.loc 1 3495 0
 6192 1d7a 07F11407 		add	r7, r7, #20
 6193 1d7e BD46     		mov	sp, r7
 6194 1d80 80BC     		pop	{r7}
 6195 1d82 7047     		bx	lr
 6196              		.cfi_endproc
 6197              	.LFE212:
 6199              		.align	2
 6200              		.global	TIM_SelectOutputTrigger
 6201              		.thumb
 6202              		.thumb_func
 6204              	TIM_SelectOutputTrigger:
 6205              	.LFB213:
3496:../src/stm32f30x_tim.c **** 
3497:../src/stm32f30x_tim.c **** /**
3498:../src/stm32f30x_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
3499:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7, 8 or 15 to select the TIM peripheral.
3500:../src/stm32f30x_tim.c ****   *     
3501:../src/stm32f30x_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
3502:../src/stm32f30x_tim.c ****   *   This parameter can be one of the following values:
3503:../src/stm32f30x_tim.c ****   *
3504:../src/stm32f30x_tim.c ****   *  - For all TIMx
3505:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigge
3506:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output(TRG
3507:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGOSource_Update: The update event is selected as the trigger output(TRGO)
3508:../src/stm32f30x_tim.c ****   *
3509:../src/stm32f30x_tim.c ****   *  - For all TIMx except TIM6 and TIM7
3510:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF fl
3511:../src/stm32f30x_tim.c ****   *                                     is to be set, as soon as a capture or compare match occurs(
3512:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output(TRGO)
3513:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output(TRGO)
3514:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output(TRGO)
3515:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output(TRGO)
3516:../src/stm32f30x_tim.c ****   *
3517:../src/stm32f30x_tim.c ****   * @retval None
3518:../src/stm32f30x_tim.c ****   */
3519:../src/stm32f30x_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
3520:../src/stm32f30x_tim.c **** {
 6206              		.loc 1 3520 0
 6207              		.cfi_startproc
 6208              		@ args = 0, pretend = 0, frame = 8
 6209              		@ frame_needed = 1, uses_anonymous_args = 0
 6210              		@ link register save eliminated.
 6211 1d84 80B4     		push	{r7}
 6212              	.LCFI306:
 6213              		.cfi_def_cfa_offset 4
 6214              		.cfi_offset 7, -4
 6215 1d86 83B0     		sub	sp, sp, #12
 6216              	.LCFI307:
 6217              		.cfi_def_cfa_offset 16
 6218 1d88 00AF     		add	r7, sp, #0
 6219              	.LCFI308:
 6220              		.cfi_def_cfa_register 7
 6221 1d8a 7860     		str	r0, [r7, #4]
 6222 1d8c 0B46     		mov	r3, r1
 6223 1d8e 7B80     		strh	r3, [r7, #2]	@ movhi
3521:../src/stm32f30x_tim.c ****   /* Check the parameters */
3522:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST7_PERIPH(TIMx));
3523:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
3524:../src/stm32f30x_tim.c **** 
3525:../src/stm32f30x_tim.c ****   /* Reset the MMS Bits */
3526:../src/stm32f30x_tim.c ****   TIMx->CR2 &= (uint16_t)~TIM_CR2_MMS;
 6224              		.loc 1 3526 0
 6225 1d90 7B68     		ldr	r3, [r7, #4]
 6226 1d92 5A68     		ldr	r2, [r3, #4]
 6227 1d94 4FF68F73 		movw	r3, #65423
 6228 1d98 1340     		ands	r3, r3, r2
 6229 1d9a 7A68     		ldr	r2, [r7, #4]
 6230 1d9c 5360     		str	r3, [r2, #4]
3527:../src/stm32f30x_tim.c ****   /* Select the TRGO source */
3528:../src/stm32f30x_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
 6231              		.loc 1 3528 0
 6232 1d9e 7B68     		ldr	r3, [r7, #4]
 6233 1da0 5A68     		ldr	r2, [r3, #4]
 6234 1da2 7B88     		ldrh	r3, [r7, #2]
 6235 1da4 1A43     		orrs	r2, r2, r3
 6236 1da6 7B68     		ldr	r3, [r7, #4]
 6237 1da8 5A60     		str	r2, [r3, #4]
3529:../src/stm32f30x_tim.c **** }
 6238              		.loc 1 3529 0
 6239 1daa 07F10C07 		add	r7, r7, #12
 6240 1dae BD46     		mov	sp, r7
 6241 1db0 80BC     		pop	{r7}
 6242 1db2 7047     		bx	lr
 6243              		.cfi_endproc
 6244              	.LFE213:
 6246              		.align	2
 6247              		.global	TIM_SelectOutputTrigger2
 6248              		.thumb
 6249              		.thumb_func
 6251              	TIM_SelectOutputTrigger2:
 6252              	.LFB214:
3530:../src/stm32f30x_tim.c **** 
3531:../src/stm32f30x_tim.c **** /**
3532:../src/stm32f30x_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode2 (TRGO2).
3533:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
3534:../src/stm32f30x_tim.c ****   *     
3535:../src/stm32f30x_tim.c ****   * @param  TIM_TRGO2Source: specifies the Trigger Output source.
3536:../src/stm32f30x_tim.c ****   *   This parameter can be one of the following values:
3537:../src/stm32f30x_tim.c ****   *
3538:../src/stm32f30x_tim.c ****   *  - For all TIMx
3539:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigge
3540:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output(TRG
3541:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGOSource_Update: The update event is selected as the trigger output(TRGO2
3542:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF fl
3543:../src/stm32f30x_tim.c ****   *                                     is to be set, as soon as a capture or compare match occurs(
3544:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output(TRGO2)
3545:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output(TRGO2)
3546:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output(TRGO2)
3547:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output(TRGO2)
3548:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGO2Source_OC4Ref_RisingFalling: OC4Ref Rising and Falling are used as the
3549:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGO2Source_OC6Ref_RisingFalling: OC6Ref Rising and Falling are used as the
3550:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGO2Source_OC4RefRising_OC6RefRising: OC4Ref Rising and OC6Ref Rising  are
3551:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGO2Source_OC4RefRising_OC6RefFalling: OC4Ref Rising and OC6Ref Falling ar
3552:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGO2Source_OC5RefRising_OC6RefRising: OC5Ref Rising and OC6Ref Rising are 
3553:../src/stm32f30x_tim.c ****   *            @arg TIM_TRGO2Source_OC5RefRising_OC6RefFalling: OC5Ref Rising and OC6Ref Falling ar
3554:../src/stm32f30x_tim.c ****   *
3555:../src/stm32f30x_tim.c ****   * @retval None
3556:../src/stm32f30x_tim.c ****   */
3557:../src/stm32f30x_tim.c **** void TIM_SelectOutputTrigger2(TIM_TypeDef* TIMx, uint32_t TIM_TRGO2Source)
3558:../src/stm32f30x_tim.c **** {
 6253              		.loc 1 3558 0
 6254              		.cfi_startproc
 6255              		@ args = 0, pretend = 0, frame = 8
 6256              		@ frame_needed = 1, uses_anonymous_args = 0
 6257              		@ link register save eliminated.
 6258 1db4 80B4     		push	{r7}
 6259              	.LCFI309:
 6260              		.cfi_def_cfa_offset 4
 6261              		.cfi_offset 7, -4
 6262 1db6 83B0     		sub	sp, sp, #12
 6263              	.LCFI310:
 6264              		.cfi_def_cfa_offset 16
 6265 1db8 00AF     		add	r7, sp, #0
 6266              	.LCFI311:
 6267              		.cfi_def_cfa_register 7
 6268 1dba 7860     		str	r0, [r7, #4]
 6269 1dbc 3960     		str	r1, [r7, #0]
3559:../src/stm32f30x_tim.c ****   /* Check the parameters */
3560:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
3561:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_TRGO2_SOURCE(TIM_TRGO2Source));
3562:../src/stm32f30x_tim.c **** 
3563:../src/stm32f30x_tim.c ****   /* Reset the MMS Bits */
3564:../src/stm32f30x_tim.c ****   TIMx->CR2 &= (uint32_t)~TIM_CR2_MMS2;
 6270              		.loc 1 3564 0
 6271 1dbe 7B68     		ldr	r3, [r7, #4]
 6272 1dc0 5B68     		ldr	r3, [r3, #4]
 6273 1dc2 23F47002 		bic	r2, r3, #15728640
 6274 1dc6 7B68     		ldr	r3, [r7, #4]
 6275 1dc8 5A60     		str	r2, [r3, #4]
3565:../src/stm32f30x_tim.c ****   /* Select the TRGO source */
3566:../src/stm32f30x_tim.c ****   TIMx->CR2 |=  TIM_TRGO2Source;
 6276              		.loc 1 3566 0
 6277 1dca 7B68     		ldr	r3, [r7, #4]
 6278 1dcc 5A68     		ldr	r2, [r3, #4]
 6279 1dce 3B68     		ldr	r3, [r7, #0]
 6280 1dd0 1A43     		orrs	r2, r2, r3
 6281 1dd2 7B68     		ldr	r3, [r7, #4]
 6282 1dd4 5A60     		str	r2, [r3, #4]
3567:../src/stm32f30x_tim.c **** }
 6283              		.loc 1 3567 0
 6284 1dd6 07F10C07 		add	r7, r7, #12
 6285 1dda BD46     		mov	sp, r7
 6286 1ddc 80BC     		pop	{r7}
 6287 1dde 7047     		bx	lr
 6288              		.cfi_endproc
 6289              	.LFE214:
 6291              		.align	2
 6292              		.global	TIM_SelectSlaveMode
 6293              		.thumb
 6294              		.thumb_func
 6296              	TIM_SelectSlaveMode:
 6297              	.LFB215:
3568:../src/stm32f30x_tim.c **** 
3569:../src/stm32f30x_tim.c **** /**
3570:../src/stm32f30x_tim.c ****   * @brief  Selects the TIMx Slave Mode.
3571:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8 or 15 to select the TIM peripheral.
3572:../src/stm32f30x_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
3573:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3574:../src/stm32f30x_tim.c ****   *            @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal(TRGI) reinitial
3575:../src/stm32f30x_tim.c ****   *                                      the counter and triggers an update of the registers
3576:../src/stm32f30x_tim.c ****   *            @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (
3577:../src/stm32f30x_tim.c ****   *            @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRG
3578:../src/stm32f30x_tim.c ****   *            @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the 
3579:../src/stm32f30x_tim.c ****   *            @arg TIM_SlaveMode_Combined_ResetTrigger: Rising edge of the selected trigger input 
3580:../src/stm32f30x_tim.c ****   *                                                      reinitializes the counter, generates an up
3581:../src/stm32f30x_tim.c ****   *                                                      of the registers and starts the counter.
3582:../src/stm32f30x_tim.c ****   * @retval None
3583:../src/stm32f30x_tim.c ****   */
3584:../src/stm32f30x_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint32_t TIM_SlaveMode)
3585:../src/stm32f30x_tim.c **** {
 6298              		.loc 1 3585 0
 6299              		.cfi_startproc
 6300              		@ args = 0, pretend = 0, frame = 8
 6301              		@ frame_needed = 1, uses_anonymous_args = 0
 6302              		@ link register save eliminated.
 6303 1de0 80B4     		push	{r7}
 6304              	.LCFI312:
 6305              		.cfi_def_cfa_offset 4
 6306              		.cfi_offset 7, -4
 6307 1de2 83B0     		sub	sp, sp, #12
 6308              	.LCFI313:
 6309              		.cfi_def_cfa_offset 16
 6310 1de4 00AF     		add	r7, sp, #0
 6311              	.LCFI314:
 6312              		.cfi_def_cfa_register 7
 6313 1de6 7860     		str	r0, [r7, #4]
 6314 1de8 3960     		str	r1, [r7, #0]
3586:../src/stm32f30x_tim.c ****   /* Check the parameters */
3587:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3588:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
3589:../src/stm32f30x_tim.c **** 
3590:../src/stm32f30x_tim.c ****   /* Reset the SMS Bits */
3591:../src/stm32f30x_tim.c ****   TIMx->SMCR &= (uint32_t)~TIM_SMCR_SMS;
 6315              		.loc 1 3591 0
 6316 1dea 7B68     		ldr	r3, [r7, #4]
 6317 1dec 9B68     		ldr	r3, [r3, #8]
 6318 1dee 23F48033 		bic	r3, r3, #65536
 6319 1df2 23F00703 		bic	r3, r3, #7
 6320 1df6 7A68     		ldr	r2, [r7, #4]
 6321 1df8 9360     		str	r3, [r2, #8]
3592:../src/stm32f30x_tim.c **** 
3593:../src/stm32f30x_tim.c ****   /* Select the Slave Mode */
3594:../src/stm32f30x_tim.c ****   TIMx->SMCR |= (uint32_t)TIM_SlaveMode;
 6322              		.loc 1 3594 0
 6323 1dfa 7B68     		ldr	r3, [r7, #4]
 6324 1dfc 9A68     		ldr	r2, [r3, #8]
 6325 1dfe 3B68     		ldr	r3, [r7, #0]
 6326 1e00 1A43     		orrs	r2, r2, r3
 6327 1e02 7B68     		ldr	r3, [r7, #4]
 6328 1e04 9A60     		str	r2, [r3, #8]
3595:../src/stm32f30x_tim.c **** }
 6329              		.loc 1 3595 0
 6330 1e06 07F10C07 		add	r7, r7, #12
 6331 1e0a BD46     		mov	sp, r7
 6332 1e0c 80BC     		pop	{r7}
 6333 1e0e 7047     		bx	lr
 6334              		.cfi_endproc
 6335              	.LFE215:
 6337              		.align	2
 6338              		.global	TIM_SelectMasterSlaveMode
 6339              		.thumb
 6340              		.thumb_func
 6342              	TIM_SelectMasterSlaveMode:
 6343              	.LFB216:
3596:../src/stm32f30x_tim.c **** 
3597:../src/stm32f30x_tim.c **** /**
3598:../src/stm32f30x_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
3599:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8 or 15 to select the TIM peripheral.
3600:../src/stm32f30x_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
3601:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3602:../src/stm32f30x_tim.c ****   *            @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
3603:../src/stm32f30x_tim.c ****   *                                             and its slaves (through TRGO)
3604:../src/stm32f30x_tim.c ****   *            @arg TIM_MasterSlaveMode_Disable: No action
3605:../src/stm32f30x_tim.c ****   * @retval None
3606:../src/stm32f30x_tim.c ****   */
3607:../src/stm32f30x_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
3608:../src/stm32f30x_tim.c **** {
 6344              		.loc 1 3608 0
 6345              		.cfi_startproc
 6346              		@ args = 0, pretend = 0, frame = 8
 6347              		@ frame_needed = 1, uses_anonymous_args = 0
 6348              		@ link register save eliminated.
 6349 1e10 80B4     		push	{r7}
 6350              	.LCFI315:
 6351              		.cfi_def_cfa_offset 4
 6352              		.cfi_offset 7, -4
 6353 1e12 83B0     		sub	sp, sp, #12
 6354              	.LCFI316:
 6355              		.cfi_def_cfa_offset 16
 6356 1e14 00AF     		add	r7, sp, #0
 6357              	.LCFI317:
 6358              		.cfi_def_cfa_register 7
 6359 1e16 7860     		str	r0, [r7, #4]
 6360 1e18 0B46     		mov	r3, r1
 6361 1e1a 7B80     		strh	r3, [r7, #2]	@ movhi
3609:../src/stm32f30x_tim.c ****   /* Check the parameters */
3610:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3611:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
3612:../src/stm32f30x_tim.c **** 
3613:../src/stm32f30x_tim.c ****   /* Reset the MSM Bit */
3614:../src/stm32f30x_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_MSM;
 6362              		.loc 1 3614 0
 6363 1e1c 7B68     		ldr	r3, [r7, #4]
 6364 1e1e 9A68     		ldr	r2, [r3, #8]
 6365 1e20 4FF67F73 		movw	r3, #65407
 6366 1e24 1340     		ands	r3, r3, r2
 6367 1e26 7A68     		ldr	r2, [r7, #4]
 6368 1e28 9360     		str	r3, [r2, #8]
3615:../src/stm32f30x_tim.c ****   
3616:../src/stm32f30x_tim.c ****   /* Set or Reset the MSM Bit */
3617:../src/stm32f30x_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
 6369              		.loc 1 3617 0
 6370 1e2a 7B68     		ldr	r3, [r7, #4]
 6371 1e2c 9A68     		ldr	r2, [r3, #8]
 6372 1e2e 7B88     		ldrh	r3, [r7, #2]
 6373 1e30 1A43     		orrs	r2, r2, r3
 6374 1e32 7B68     		ldr	r3, [r7, #4]
 6375 1e34 9A60     		str	r2, [r3, #8]
3618:../src/stm32f30x_tim.c **** }
 6376              		.loc 1 3618 0
 6377 1e36 07F10C07 		add	r7, r7, #12
 6378 1e3a BD46     		mov	sp, r7
 6379 1e3c 80BC     		pop	{r7}
 6380 1e3e 7047     		bx	lr
 6381              		.cfi_endproc
 6382              	.LFE216:
 6384              		.align	2
 6385              		.global	TIM_ETRConfig
 6386              		.thumb
 6387              		.thumb_func
 6389              	TIM_ETRConfig:
 6390              	.LFB217:
3619:../src/stm32f30x_tim.c **** 
3620:../src/stm32f30x_tim.c **** /**
3621:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
3622:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4 or 8 to select the TIM peripheral.
3623:../src/stm32f30x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
3624:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3625:../src/stm32f30x_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
3626:../src/stm32f30x_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
3627:../src/stm32f30x_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
3628:../src/stm32f30x_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
3629:../src/stm32f30x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
3630:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3631:../src/stm32f30x_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
3632:../src/stm32f30x_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
3633:../src/stm32f30x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
3634:../src/stm32f30x_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
3635:../src/stm32f30x_tim.c ****   * @retval None
3636:../src/stm32f30x_tim.c ****   */
3637:../src/stm32f30x_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
3638:../src/stm32f30x_tim.c ****                    uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
3639:../src/stm32f30x_tim.c **** {
 6391              		.loc 1 3639 0
 6392              		.cfi_startproc
 6393              		@ args = 0, pretend = 0, frame = 24
 6394              		@ frame_needed = 1, uses_anonymous_args = 0
 6395              		@ link register save eliminated.
 6396 1e40 80B4     		push	{r7}
 6397              	.LCFI318:
 6398              		.cfi_def_cfa_offset 4
 6399              		.cfi_offset 7, -4
 6400 1e42 87B0     		sub	sp, sp, #28
 6401              	.LCFI319:
 6402              		.cfi_def_cfa_offset 32
 6403 1e44 00AF     		add	r7, sp, #0
 6404              	.LCFI320:
 6405              		.cfi_def_cfa_register 7
 6406 1e46 F860     		str	r0, [r7, #12]
 6407 1e48 7981     		strh	r1, [r7, #10]	@ movhi
 6408 1e4a 3A81     		strh	r2, [r7, #8]	@ movhi
 6409 1e4c FB80     		strh	r3, [r7, #6]	@ movhi
3640:../src/stm32f30x_tim.c ****   uint16_t tmpsmcr = 0;
 6410              		.loc 1 3640 0
 6411 1e4e 4FF00003 		mov	r3, #0
 6412 1e52 FB82     		strh	r3, [r7, #22]	@ movhi
3641:../src/stm32f30x_tim.c **** 
3642:../src/stm32f30x_tim.c ****   /* Check the parameters */
3643:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
3644:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
3645:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
3646:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
3647:../src/stm32f30x_tim.c **** 
3648:../src/stm32f30x_tim.c ****   tmpsmcr = TIMx->SMCR;
 6413              		.loc 1 3648 0
 6414 1e54 FB68     		ldr	r3, [r7, #12]
 6415 1e56 9B68     		ldr	r3, [r3, #8]
 6416 1e58 FB82     		strh	r3, [r7, #22]	@ movhi
3649:../src/stm32f30x_tim.c **** 
3650:../src/stm32f30x_tim.c ****   /* Reset the ETR Bits */
3651:../src/stm32f30x_tim.c ****   tmpsmcr &= SMCR_ETR_MASK;
 6417              		.loc 1 3651 0
 6418 1e5a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6419 1e5c DBB2     		uxtb	r3, r3
 6420 1e5e FB82     		strh	r3, [r7, #22]	@ movhi
3652:../src/stm32f30x_tim.c **** 
3653:../src/stm32f30x_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
3654:../src/stm32f30x_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
 6421              		.loc 1 3654 0
 6422 1e60 FB88     		ldrh	r3, [r7, #6]	@ movhi
 6423 1e62 4FEA0323 		lsl	r3, r3, #8
 6424 1e66 9AB2     		uxth	r2, r3
 6425 1e68 3B89     		ldrh	r3, [r7, #8]	@ movhi
 6426 1e6a 1343     		orrs	r3, r3, r2
 6427 1e6c 9AB2     		uxth	r2, r3
 6428 1e6e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 6429 1e70 1343     		orrs	r3, r3, r2
 6430 1e72 9AB2     		uxth	r2, r3
 6431 1e74 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6432 1e76 1343     		orrs	r3, r3, r2
 6433 1e78 FB82     		strh	r3, [r7, #22]	@ movhi
3655:../src/stm32f30x_tim.c **** 
3656:../src/stm32f30x_tim.c ****   /* Write to TIMx SMCR */
3657:../src/stm32f30x_tim.c ****   TIMx->SMCR = tmpsmcr;
 6434              		.loc 1 3657 0
 6435 1e7a FA8A     		ldrh	r2, [r7, #22]
 6436 1e7c FB68     		ldr	r3, [r7, #12]
 6437 1e7e 9A60     		str	r2, [r3, #8]
3658:../src/stm32f30x_tim.c **** }
 6438              		.loc 1 3658 0
 6439 1e80 07F11C07 		add	r7, r7, #28
 6440 1e84 BD46     		mov	sp, r7
 6441 1e86 80BC     		pop	{r7}
 6442 1e88 7047     		bx	lr
 6443              		.cfi_endproc
 6444              	.LFE217:
 6446 1e8a 00BF     		.align	2
 6447              		.global	TIM_EncoderInterfaceConfig
 6448              		.thumb
 6449              		.thumb_func
 6451              	TIM_EncoderInterfaceConfig:
 6452              	.LFB218:
3659:../src/stm32f30x_tim.c **** /**
3660:../src/stm32f30x_tim.c ****   * @}
3661:../src/stm32f30x_tim.c ****   */
3662:../src/stm32f30x_tim.c **** 
3663:../src/stm32f30x_tim.c **** /** @defgroup TIM_Group8 Specific interface management functions
3664:../src/stm32f30x_tim.c ****  *  @brief    Specific interface management functions 
3665:../src/stm32f30x_tim.c ****  *
3666:../src/stm32f30x_tim.c **** @verbatim   
3667:../src/stm32f30x_tim.c ****  ===============================================================================
3668:../src/stm32f30x_tim.c ****               ##### Specific interface management functions #####
3669:../src/stm32f30x_tim.c ****  ===============================================================================  
3670:../src/stm32f30x_tim.c **** 
3671:../src/stm32f30x_tim.c **** @endverbatim
3672:../src/stm32f30x_tim.c ****   * @{
3673:../src/stm32f30x_tim.c ****   */
3674:../src/stm32f30x_tim.c **** 
3675:../src/stm32f30x_tim.c **** /**
3676:../src/stm32f30x_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
3677:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4 or 8 to select the TIM 
3678:../src/stm32f30x_tim.c ****   *         peripheral.
3679:../src/stm32f30x_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
3680:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3681:../src/stm32f30x_tim.c ****   *            @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
3682:../src/stm32f30x_tim.c ****   *            @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
3683:../src/stm32f30x_tim.c ****   *            @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
3684:../src/stm32f30x_tim.c ****   *                                       on the level of the other input.
3685:../src/stm32f30x_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
3686:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3687:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3688:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3689:../src/stm32f30x_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
3690:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3691:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3692:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3693:../src/stm32f30x_tim.c ****   * @retval None
3694:../src/stm32f30x_tim.c ****   */
3695:../src/stm32f30x_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
3696:../src/stm32f30x_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
3697:../src/stm32f30x_tim.c **** {
 6453              		.loc 1 3697 0
 6454              		.cfi_startproc
 6455              		@ args = 0, pretend = 0, frame = 24
 6456              		@ frame_needed = 1, uses_anonymous_args = 0
 6457              		@ link register save eliminated.
 6458 1e8c 80B4     		push	{r7}
 6459              	.LCFI321:
 6460              		.cfi_def_cfa_offset 4
 6461              		.cfi_offset 7, -4
 6462 1e8e 87B0     		sub	sp, sp, #28
 6463              	.LCFI322:
 6464              		.cfi_def_cfa_offset 32
 6465 1e90 00AF     		add	r7, sp, #0
 6466              	.LCFI323:
 6467              		.cfi_def_cfa_register 7
 6468 1e92 F860     		str	r0, [r7, #12]
 6469 1e94 7981     		strh	r1, [r7, #10]	@ movhi
 6470 1e96 3A81     		strh	r2, [r7, #8]	@ movhi
 6471 1e98 FB80     		strh	r3, [r7, #6]	@ movhi
3698:../src/stm32f30x_tim.c ****   uint16_t tmpsmcr = 0;
 6472              		.loc 1 3698 0
 6473 1e9a 4FF00003 		mov	r3, #0
 6474 1e9e FB82     		strh	r3, [r7, #22]	@ movhi
3699:../src/stm32f30x_tim.c ****   uint16_t tmpccmr1 = 0;
 6475              		.loc 1 3699 0
 6476 1ea0 4FF00003 		mov	r3, #0
 6477 1ea4 BB82     		strh	r3, [r7, #20]	@ movhi
3700:../src/stm32f30x_tim.c ****   uint16_t tmpccer = 0;
 6478              		.loc 1 3700 0
 6479 1ea6 4FF00003 		mov	r3, #0
 6480 1eaa 7B82     		strh	r3, [r7, #18]	@ movhi
3701:../src/stm32f30x_tim.c ****     
3702:../src/stm32f30x_tim.c ****   /* Check the parameters */
3703:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
3704:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
3705:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
3706:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
3707:../src/stm32f30x_tim.c **** 
3708:../src/stm32f30x_tim.c ****   /* Get the TIMx SMCR register value */
3709:../src/stm32f30x_tim.c ****   tmpsmcr = TIMx->SMCR;
 6481              		.loc 1 3709 0
 6482 1eac FB68     		ldr	r3, [r7, #12]
 6483 1eae 9B68     		ldr	r3, [r3, #8]
 6484 1eb0 FB82     		strh	r3, [r7, #22]	@ movhi
3710:../src/stm32f30x_tim.c **** 
3711:../src/stm32f30x_tim.c ****   /* Get the TIMx CCMR1 register value */
3712:../src/stm32f30x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 6485              		.loc 1 3712 0
 6486 1eb2 FB68     		ldr	r3, [r7, #12]
 6487 1eb4 9B69     		ldr	r3, [r3, #24]
 6488 1eb6 BB82     		strh	r3, [r7, #20]	@ movhi
3713:../src/stm32f30x_tim.c **** 
3714:../src/stm32f30x_tim.c ****   /* Get the TIMx CCER register value */
3715:../src/stm32f30x_tim.c ****   tmpccer = TIMx->CCER;
 6489              		.loc 1 3715 0
 6490 1eb8 FB68     		ldr	r3, [r7, #12]
 6491 1eba 1B6A     		ldr	r3, [r3, #32]
 6492 1ebc 7B82     		strh	r3, [r7, #18]	@ movhi
3716:../src/stm32f30x_tim.c **** 
3717:../src/stm32f30x_tim.c ****   /* Set the encoder Mode */
3718:../src/stm32f30x_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 6493              		.loc 1 3718 0
 6494 1ebe FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6495 1ec0 23F00703 		bic	r3, r3, #7
 6496 1ec4 FB82     		strh	r3, [r7, #22]	@ movhi
3719:../src/stm32f30x_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 6497              		.loc 1 3719 0
 6498 1ec6 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 6499 1ec8 7B89     		ldrh	r3, [r7, #10]	@ movhi
 6500 1eca 1343     		orrs	r3, r3, r2
 6501 1ecc FB82     		strh	r3, [r7, #22]	@ movhi
3720:../src/stm32f30x_tim.c **** 
3721:../src/stm32f30x_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
3722:../src/stm32f30x_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
 6502              		.loc 1 3722 0
 6503 1ece BB8A     		ldrh	r3, [r7, #20]	@ movhi
 6504 1ed0 23F44073 		bic	r3, r3, #768
 6505 1ed4 23F00303 		bic	r3, r3, #3
 6506 1ed8 BB82     		strh	r3, [r7, #20]	@ movhi
3723:../src/stm32f30x_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 6507              		.loc 1 3723 0
 6508 1eda BB8A     		ldrh	r3, [r7, #20]	@ movhi
 6509 1edc 43F48073 		orr	r3, r3, #256
 6510 1ee0 43F00103 		orr	r3, r3, #1
 6511 1ee4 BB82     		strh	r3, [r7, #20]	@ movhi
3724:../src/stm32f30x_tim.c **** 
3725:../src/stm32f30x_tim.c ****   /* Set the TI1 and the TI2 Polarities */
3726:../src/stm32f30x_tim.c ****   tmpccer &= ((uint16_t)~TIM_CCER_CC1P) & ((uint16_t)~TIM_CCER_CC2P);
 6512              		.loc 1 3726 0
 6513 1ee6 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 6514 1ee8 23F02203 		bic	r3, r3, #34
 6515 1eec 7B82     		strh	r3, [r7, #18]	@ movhi
3727:../src/stm32f30x_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 6516              		.loc 1 3727 0
 6517 1eee FB88     		ldrh	r3, [r7, #6]	@ movhi
 6518 1ef0 4FEA0313 		lsl	r3, r3, #4
 6519 1ef4 9AB2     		uxth	r2, r3
 6520 1ef6 3B89     		ldrh	r3, [r7, #8]	@ movhi
 6521 1ef8 1343     		orrs	r3, r3, r2
 6522 1efa 9AB2     		uxth	r2, r3
 6523 1efc 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 6524 1efe 1343     		orrs	r3, r3, r2
 6525 1f00 7B82     		strh	r3, [r7, #18]	@ movhi
3728:../src/stm32f30x_tim.c **** 
3729:../src/stm32f30x_tim.c ****   /* Write to TIMx SMCR */
3730:../src/stm32f30x_tim.c ****   TIMx->SMCR = tmpsmcr;
 6526              		.loc 1 3730 0
 6527 1f02 FA8A     		ldrh	r2, [r7, #22]
 6528 1f04 FB68     		ldr	r3, [r7, #12]
 6529 1f06 9A60     		str	r2, [r3, #8]
3731:../src/stm32f30x_tim.c **** 
3732:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR1 */
3733:../src/stm32f30x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 6530              		.loc 1 3733 0
 6531 1f08 BA8A     		ldrh	r2, [r7, #20]
 6532 1f0a FB68     		ldr	r3, [r7, #12]
 6533 1f0c 9A61     		str	r2, [r3, #24]
3734:../src/stm32f30x_tim.c **** 
3735:../src/stm32f30x_tim.c ****   /* Write to TIMx CCER */
3736:../src/stm32f30x_tim.c ****   TIMx->CCER = tmpccer;
 6534              		.loc 1 3736 0
 6535 1f0e 7A8A     		ldrh	r2, [r7, #18]
 6536 1f10 FB68     		ldr	r3, [r7, #12]
 6537 1f12 1A62     		str	r2, [r3, #32]
3737:../src/stm32f30x_tim.c **** }
 6538              		.loc 1 3737 0
 6539 1f14 07F11C07 		add	r7, r7, #28
 6540 1f18 BD46     		mov	sp, r7
 6541 1f1a 80BC     		pop	{r7}
 6542 1f1c 7047     		bx	lr
 6543              		.cfi_endproc
 6544              	.LFE218:
 6546 1f1e 00BF     		.align	2
 6547              		.global	TIM_SelectHallSensor
 6548              		.thumb
 6549              		.thumb_func
 6551              	TIM_SelectHallSensor:
 6552              	.LFB219:
3738:../src/stm32f30x_tim.c **** 
3739:../src/stm32f30x_tim.c **** /**
3740:../src/stm32f30x_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
3741:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 8 or 15 to select the TIM 
3742:../src/stm32f30x_tim.c ****   *         peripheral.
3743:../src/stm32f30x_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
3744:../src/stm32f30x_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
3745:../src/stm32f30x_tim.c ****   * @retval None
3746:../src/stm32f30x_tim.c ****   */
3747:../src/stm32f30x_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
3748:../src/stm32f30x_tim.c **** {
 6553              		.loc 1 3748 0
 6554              		.cfi_startproc
 6555              		@ args = 0, pretend = 0, frame = 8
 6556              		@ frame_needed = 1, uses_anonymous_args = 0
 6557              		@ link register save eliminated.
 6558 1f20 80B4     		push	{r7}
 6559              	.LCFI324:
 6560              		.cfi_def_cfa_offset 4
 6561              		.cfi_offset 7, -4
 6562 1f22 83B0     		sub	sp, sp, #12
 6563              	.LCFI325:
 6564              		.cfi_def_cfa_offset 16
 6565 1f24 00AF     		add	r7, sp, #0
 6566              	.LCFI326:
 6567              		.cfi_def_cfa_register 7
 6568 1f26 7860     		str	r0, [r7, #4]
 6569 1f28 0B46     		mov	r3, r1
 6570 1f2a FB70     		strb	r3, [r7, #3]
3749:../src/stm32f30x_tim.c ****   /* Check the parameters */
3750:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3751:../src/stm32f30x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
3752:../src/stm32f30x_tim.c **** 
3753:../src/stm32f30x_tim.c ****   if (NewState != DISABLE)
 6571              		.loc 1 3753 0
 6572 1f2c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6573 1f2e 002B     		cmp	r3, #0
 6574 1f30 06D0     		beq	.L196
3754:../src/stm32f30x_tim.c ****   {
3755:../src/stm32f30x_tim.c ****     /* Set the TI1S Bit */
3756:../src/stm32f30x_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
 6575              		.loc 1 3756 0
 6576 1f32 7B68     		ldr	r3, [r7, #4]
 6577 1f34 5B68     		ldr	r3, [r3, #4]
 6578 1f36 43F08002 		orr	r2, r3, #128
 6579 1f3a 7B68     		ldr	r3, [r7, #4]
 6580 1f3c 5A60     		str	r2, [r3, #4]
 6581 1f3e 06E0     		b	.L195
 6582              	.L196:
3757:../src/stm32f30x_tim.c ****   }
3758:../src/stm32f30x_tim.c ****   else
3759:../src/stm32f30x_tim.c ****   {
3760:../src/stm32f30x_tim.c ****     /* Reset the TI1S Bit */
3761:../src/stm32f30x_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_TI1S;
 6583              		.loc 1 3761 0
 6584 1f40 7B68     		ldr	r3, [r7, #4]
 6585 1f42 5A68     		ldr	r2, [r3, #4]
 6586 1f44 4FF67F73 		movw	r3, #65407
 6587 1f48 1340     		ands	r3, r3, r2
 6588 1f4a 7A68     		ldr	r2, [r7, #4]
 6589 1f4c 5360     		str	r3, [r2, #4]
 6590              	.L195:
3762:../src/stm32f30x_tim.c ****   }
3763:../src/stm32f30x_tim.c **** }
 6591              		.loc 1 3763 0
 6592 1f4e 07F10C07 		add	r7, r7, #12
 6593 1f52 BD46     		mov	sp, r7
 6594 1f54 80BC     		pop	{r7}
 6595 1f56 7047     		bx	lr
 6596              		.cfi_endproc
 6597              	.LFE219:
 6599              		.align	2
 6600              		.global	TIM_RemapConfig
 6601              		.thumb
 6602              		.thumb_func
 6604              	TIM_RemapConfig:
 6605              	.LFB220:
3764:../src/stm32f30x_tim.c **** /**
3765:../src/stm32f30x_tim.c ****   * @}
3766:../src/stm32f30x_tim.c ****   */
3767:../src/stm32f30x_tim.c **** 
3768:../src/stm32f30x_tim.c **** /** @defgroup TIM_Group9 Specific remapping management function
3769:../src/stm32f30x_tim.c ****  *  @brief   Specific remapping management function
3770:../src/stm32f30x_tim.c ****  *
3771:../src/stm32f30x_tim.c **** @verbatim   
3772:../src/stm32f30x_tim.c ****  ===============================================================================
3773:../src/stm32f30x_tim.c ****                ##### Specific remapping management function #####
3774:../src/stm32f30x_tim.c ****  ===============================================================================  
3775:../src/stm32f30x_tim.c **** 
3776:../src/stm32f30x_tim.c **** @endverbatim
3777:../src/stm32f30x_tim.c ****   * @{
3778:../src/stm32f30x_tim.c ****   */
3779:../src/stm32f30x_tim.c **** 
3780:../src/stm32f30x_tim.c **** /**
3781:../src/stm32f30x_tim.c ****   * @brief  Configures the TIM16 Remapping input Capabilities.
3782:../src/stm32f30x_tim.c ****   * @param TIMx: where x can be 1, 8 or 16 to select the TIM peripheral.
3783:../src/stm32f30x_tim.c ****   * @param TIM_Remap: specifies the TIM input reampping source.
3784:../src/stm32f30x_tim.c ****   *   This parameter can be one of the following values:
3785:../src/stm32f30x_tim.c ****   *            @arg TIM16_GPIO: TIM16 Channel 1 is connected to GPIO.
3786:../src/stm32f30x_tim.c ****   *            @arg TIM16_RTC_CLK: TIM16 Channel 1 is connected to RTC input clock.
3787:../src/stm32f30x_tim.c ****   *            @arg TIM16_HSE_DIV32: TIM16 Channel 1 is connected to HSE/32 clock.  
3788:../src/stm32f30x_tim.c ****   *            @arg TIM16_MCO: TIM16 Channel 1 is connected to MCO clock. 
3789:../src/stm32f30x_tim.c ****   *            @arg TIM1_ADC1_AWDG1: TIM1 ETR is connected to ADC1 AWDG1.
3790:../src/stm32f30x_tim.c ****   *            @arg TIM1_ADC1_AWDG2: TIM1 ETR is connected to ADC1 AWDG2.
3791:../src/stm32f30x_tim.c ****   *            @arg TIM1_ADC1_AWDG3: TIM1 ETR is connected to ADC1 AWDG3.  
3792:../src/stm32f30x_tim.c ****   *            @arg TIM1_ADC4_AWDG1: TIM1 ETR is connected to ADC4 AWDG1.
3793:../src/stm32f30x_tim.c ****   *            @arg TIM1_ADC4_AWDG2: TIM1 ETR is connected to ADC4 AWDG2.
3794:../src/stm32f30x_tim.c ****   *            @arg TIM1_ADC4_AWDG3: TIM1 ETR is connected to ADC4 AWDG3. 
3795:../src/stm32f30x_tim.c ****   *            @arg TIM8_ADC2_AWDG1: TIM8 ETR is connected to ADC2 AWDG1.
3796:../src/stm32f30x_tim.c ****   *            @arg TIM8_ADC2_AWDG2: TIM8 ETR is connected to ADC2 AWDG2.
3797:../src/stm32f30x_tim.c ****   *            @arg TIM8_ADC2_AWDG3: TIM8 ETR is connected to ADC2 AWDG3.
3798:../src/stm32f30x_tim.c ****   *            @arg TIM8_ADC4_AWDG1: TIM8 ETR is connected to ADC4 AWDG1.
3799:../src/stm32f30x_tim.c ****   *            @arg TIM8_ADC4_AWDG2: TIM8 ETR is connected to ADC4 AWDG2.
3800:../src/stm32f30x_tim.c ****   *            @arg TIM8_ADC4_AWDG3: TIM8 ETR is connected to ADC4 AWDG3.  
3801:../src/stm32f30x_tim.c ****   * @retval : None
3802:../src/stm32f30x_tim.c ****   */
3803:../src/stm32f30x_tim.c **** void TIM_RemapConfig(TIM_TypeDef* TIMx, uint16_t TIM_Remap)
3804:../src/stm32f30x_tim.c **** {
 6606              		.loc 1 3804 0
 6607              		.cfi_startproc
 6608              		@ args = 0, pretend = 0, frame = 8
 6609              		@ frame_needed = 1, uses_anonymous_args = 0
 6610              		@ link register save eliminated.
 6611 1f58 80B4     		push	{r7}
 6612              	.LCFI327:
 6613              		.cfi_def_cfa_offset 4
 6614              		.cfi_offset 7, -4
 6615 1f5a 83B0     		sub	sp, sp, #12
 6616              	.LCFI328:
 6617              		.cfi_def_cfa_offset 16
 6618 1f5c 00AF     		add	r7, sp, #0
 6619              	.LCFI329:
 6620              		.cfi_def_cfa_register 7
 6621 1f5e 7860     		str	r0, [r7, #4]
 6622 1f60 0B46     		mov	r3, r1
 6623 1f62 7B80     		strh	r3, [r7, #2]	@ movhi
3805:../src/stm32f30x_tim.c ****  /* Check the parameters */
3806:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
3807:../src/stm32f30x_tim.c ****   assert_param(IS_TIM_REMAP(TIM_Remap));
3808:../src/stm32f30x_tim.c **** 
3809:../src/stm32f30x_tim.c ****   /* Set the Timer remapping configuration */
3810:../src/stm32f30x_tim.c ****   TIMx->OR =  TIM_Remap;
 6624              		.loc 1 3810 0
 6625 1f64 7B68     		ldr	r3, [r7, #4]
 6626 1f66 7A88     		ldrh	r2, [r7, #2]	@ movhi
 6627 1f68 A3F85020 		strh	r2, [r3, #80]	@ movhi
3811:../src/stm32f30x_tim.c **** }
 6628              		.loc 1 3811 0
 6629 1f6c 07F10C07 		add	r7, r7, #12
 6630 1f70 BD46     		mov	sp, r7
 6631 1f72 80BC     		pop	{r7}
 6632 1f74 7047     		bx	lr
 6633              		.cfi_endproc
 6634              	.LFE220:
 6636 1f76 00BF     		.align	2
 6637              		.thumb
 6638              		.thumb_func
 6640              	TI1_Config:
 6641              	.LFB221:
3812:../src/stm32f30x_tim.c **** /**
3813:../src/stm32f30x_tim.c ****   * @}
3814:../src/stm32f30x_tim.c ****   */
3815:../src/stm32f30x_tim.c **** 
3816:../src/stm32f30x_tim.c **** /**
3817:../src/stm32f30x_tim.c ****   * @brief  Configure the TI1 as Input.
3818:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14 
3819:../src/stm32f30x_tim.c ****   *         to select the TIM peripheral.
3820:../src/stm32f30x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3821:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3822:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPolarity_Rising
3823:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPolarity_Falling
3824:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPolarity_BothEdge  
3825:../src/stm32f30x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3826:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3827:../src/stm32f30x_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
3828:../src/stm32f30x_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
3829:../src/stm32f30x_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
3830:../src/stm32f30x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3831:../src/stm32f30x_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3832:../src/stm32f30x_tim.c ****   * @retval None
3833:../src/stm32f30x_tim.c ****   */
3834:../src/stm32f30x_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3835:../src/stm32f30x_tim.c ****                        uint16_t TIM_ICFilter)
3836:../src/stm32f30x_tim.c **** {
 6642              		.loc 1 3836 0
 6643              		.cfi_startproc
 6644              		@ args = 0, pretend = 0, frame = 24
 6645              		@ frame_needed = 1, uses_anonymous_args = 0
 6646              		@ link register save eliminated.
 6647 1f78 80B4     		push	{r7}
 6648              	.LCFI330:
 6649              		.cfi_def_cfa_offset 4
 6650              		.cfi_offset 7, -4
 6651 1f7a 87B0     		sub	sp, sp, #28
 6652              	.LCFI331:
 6653              		.cfi_def_cfa_offset 32
 6654 1f7c 00AF     		add	r7, sp, #0
 6655              	.LCFI332:
 6656              		.cfi_def_cfa_register 7
 6657 1f7e F860     		str	r0, [r7, #12]
 6658 1f80 7981     		strh	r1, [r7, #10]	@ movhi
 6659 1f82 3A81     		strh	r2, [r7, #8]	@ movhi
 6660 1f84 FB80     		strh	r3, [r7, #6]	@ movhi
3837:../src/stm32f30x_tim.c ****   uint32_t tmpccmr1 = 0, tmpccer = 0;
 6661              		.loc 1 3837 0
 6662 1f86 4FF00003 		mov	r3, #0
 6663 1f8a 7B61     		str	r3, [r7, #20]
 6664 1f8c 4FF00003 		mov	r3, #0
 6665 1f90 3B61     		str	r3, [r7, #16]
3838:../src/stm32f30x_tim.c **** 
3839:../src/stm32f30x_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
3840:../src/stm32f30x_tim.c ****   TIMx->CCER &= (uint32_t)~TIM_CCER_CC1E;
 6666              		.loc 1 3840 0
 6667 1f92 FB68     		ldr	r3, [r7, #12]
 6668 1f94 1B6A     		ldr	r3, [r3, #32]
 6669 1f96 23F00102 		bic	r2, r3, #1
 6670 1f9a FB68     		ldr	r3, [r7, #12]
 6671 1f9c 1A62     		str	r2, [r3, #32]
3841:../src/stm32f30x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 6672              		.loc 1 3841 0
 6673 1f9e FB68     		ldr	r3, [r7, #12]
 6674 1fa0 9B69     		ldr	r3, [r3, #24]
 6675 1fa2 7B61     		str	r3, [r7, #20]
3842:../src/stm32f30x_tim.c ****   tmpccer = TIMx->CCER;
 6676              		.loc 1 3842 0
 6677 1fa4 FB68     		ldr	r3, [r7, #12]
 6678 1fa6 1B6A     		ldr	r3, [r3, #32]
 6679 1fa8 3B61     		str	r3, [r7, #16]
3843:../src/stm32f30x_tim.c **** 
3844:../src/stm32f30x_tim.c ****   /* Select the Input and set the filter */
3845:../src/stm32f30x_tim.c ****   tmpccmr1 &= ((uint32_t)~TIM_CCMR1_CC1S) & ((uint32_t)~TIM_CCMR1_IC1F);
 6680              		.loc 1 3845 0
 6681 1faa 7B69     		ldr	r3, [r7, #20]
 6682 1fac 23F0F303 		bic	r3, r3, #243
 6683 1fb0 7B61     		str	r3, [r7, #20]
3846:../src/stm32f30x_tim.c ****   tmpccmr1 |= (uint32_t)(TIM_ICSelection | (uint32_t)((uint32_t)TIM_ICFilter << 4));
 6684              		.loc 1 3846 0
 6685 1fb2 3A89     		ldrh	r2, [r7, #8]
 6686 1fb4 FB88     		ldrh	r3, [r7, #6]
 6687 1fb6 4FEA0313 		lsl	r3, r3, #4
 6688 1fba 1343     		orrs	r3, r3, r2
 6689 1fbc 7A69     		ldr	r2, [r7, #20]
 6690 1fbe 1343     		orrs	r3, r3, r2
 6691 1fc0 7B61     		str	r3, [r7, #20]
3847:../src/stm32f30x_tim.c **** 
3848:../src/stm32f30x_tim.c ****   /* Select the Polarity and set the CC1E Bit */
3849:../src/stm32f30x_tim.c ****   tmpccer &= (uint32_t)~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 6692              		.loc 1 3849 0
 6693 1fc2 3B69     		ldr	r3, [r7, #16]
 6694 1fc4 23F00A03 		bic	r3, r3, #10
 6695 1fc8 3B61     		str	r3, [r7, #16]
3850:../src/stm32f30x_tim.c ****   tmpccer |= (uint32_t)(TIM_ICPolarity | (uint32_t)TIM_CCER_CC1E);
 6696              		.loc 1 3850 0
 6697 1fca 7B89     		ldrh	r3, [r7, #10]	@ movhi
 6698 1fcc 43F00103 		orr	r3, r3, #1
 6699 1fd0 9BB2     		uxth	r3, r3
 6700 1fd2 3A69     		ldr	r2, [r7, #16]
 6701 1fd4 1343     		orrs	r3, r3, r2
 6702 1fd6 3B61     		str	r3, [r7, #16]
3851:../src/stm32f30x_tim.c **** 
3852:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3853:../src/stm32f30x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 6703              		.loc 1 3853 0
 6704 1fd8 FB68     		ldr	r3, [r7, #12]
 6705 1fda 7A69     		ldr	r2, [r7, #20]
 6706 1fdc 9A61     		str	r2, [r3, #24]
3854:../src/stm32f30x_tim.c ****   TIMx->CCER = tmpccer;
 6707              		.loc 1 3854 0
 6708 1fde FB68     		ldr	r3, [r7, #12]
 6709 1fe0 3A69     		ldr	r2, [r7, #16]
 6710 1fe2 1A62     		str	r2, [r3, #32]
3855:../src/stm32f30x_tim.c **** }
 6711              		.loc 1 3855 0
 6712 1fe4 07F11C07 		add	r7, r7, #28
 6713 1fe8 BD46     		mov	sp, r7
 6714 1fea 80BC     		pop	{r7}
 6715 1fec 7047     		bx	lr
 6716              		.cfi_endproc
 6717              	.LFE221:
 6719 1fee 00BF     		.align	2
 6720              		.thumb
 6721              		.thumb_func
 6723              	TI2_Config:
 6724              	.LFB222:
3856:../src/stm32f30x_tim.c **** 
3857:../src/stm32f30x_tim.c **** /**
3858:../src/stm32f30x_tim.c ****   * @brief  Configure the TI2 as Input.
3859:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3860:../src/stm32f30x_tim.c ****   *         peripheral.
3861:../src/stm32f30x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3862:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3863:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPolarity_Rising
3864:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPolarity_Falling
3865:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPolarity_BothEdge   
3866:../src/stm32f30x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3867:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3868:../src/stm32f30x_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
3869:../src/stm32f30x_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
3870:../src/stm32f30x_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
3871:../src/stm32f30x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3872:../src/stm32f30x_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3873:../src/stm32f30x_tim.c ****   * @retval None
3874:../src/stm32f30x_tim.c ****   */
3875:../src/stm32f30x_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3876:../src/stm32f30x_tim.c ****                        uint16_t TIM_ICFilter)
3877:../src/stm32f30x_tim.c **** {
 6725              		.loc 1 3877 0
 6726              		.cfi_startproc
 6727              		@ args = 0, pretend = 0, frame = 32
 6728              		@ frame_needed = 1, uses_anonymous_args = 0
 6729              		@ link register save eliminated.
 6730 1ff0 80B4     		push	{r7}
 6731              	.LCFI333:
 6732              		.cfi_def_cfa_offset 4
 6733              		.cfi_offset 7, -4
 6734 1ff2 89B0     		sub	sp, sp, #36
 6735              	.LCFI334:
 6736              		.cfi_def_cfa_offset 40
 6737 1ff4 00AF     		add	r7, sp, #0
 6738              	.LCFI335:
 6739              		.cfi_def_cfa_register 7
 6740 1ff6 F860     		str	r0, [r7, #12]
 6741 1ff8 7981     		strh	r1, [r7, #10]	@ movhi
 6742 1ffa 3A81     		strh	r2, [r7, #8]	@ movhi
 6743 1ffc FB80     		strh	r3, [r7, #6]	@ movhi
3878:../src/stm32f30x_tim.c ****   uint32_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
 6744              		.loc 1 3878 0
 6745 1ffe 4FF00003 		mov	r3, #0
 6746 2002 FB61     		str	r3, [r7, #28]
 6747 2004 4FF00003 		mov	r3, #0
 6748 2008 BB61     		str	r3, [r7, #24]
 6749 200a 4FF00003 		mov	r3, #0
 6750 200e 7B61     		str	r3, [r7, #20]
3879:../src/stm32f30x_tim.c **** 
3880:../src/stm32f30x_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
3881:../src/stm32f30x_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 6751              		.loc 1 3881 0
 6752 2010 FB68     		ldr	r3, [r7, #12]
 6753 2012 1A6A     		ldr	r2, [r3, #32]
 6754 2014 4FF6EF73 		movw	r3, #65519
 6755 2018 1340     		ands	r3, r3, r2
 6756 201a FA68     		ldr	r2, [r7, #12]
 6757 201c 1362     		str	r3, [r2, #32]
3882:../src/stm32f30x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 6758              		.loc 1 3882 0
 6759 201e FB68     		ldr	r3, [r7, #12]
 6760 2020 9B69     		ldr	r3, [r3, #24]
 6761 2022 FB61     		str	r3, [r7, #28]
3883:../src/stm32f30x_tim.c ****   tmpccer = TIMx->CCER;
 6762              		.loc 1 3883 0
 6763 2024 FB68     		ldr	r3, [r7, #12]
 6764 2026 1B6A     		ldr	r3, [r3, #32]
 6765 2028 BB61     		str	r3, [r7, #24]
3884:../src/stm32f30x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
 6766              		.loc 1 3884 0
 6767 202a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 6768 202c 4FEA0313 		lsl	r3, r3, #4
 6769 2030 9BB2     		uxth	r3, r3
 6770 2032 7B61     		str	r3, [r7, #20]
3885:../src/stm32f30x_tim.c **** 
3886:../src/stm32f30x_tim.c ****   /* Select the Input and set the filter */
3887:../src/stm32f30x_tim.c ****   tmpccmr1 &= ((uint32_t)~TIM_CCMR1_CC2S) & ((uint32_t)~TIM_CCMR1_IC2F);
 6771              		.loc 1 3887 0
 6772 2034 FB69     		ldr	r3, [r7, #28]
 6773 2036 23F47343 		bic	r3, r3, #62208
 6774 203a FB61     		str	r3, [r7, #28]
3888:../src/stm32f30x_tim.c ****   tmpccmr1 |= (uint32_t)((uint32_t)TIM_ICFilter << 12);
 6775              		.loc 1 3888 0
 6776 203c FB88     		ldrh	r3, [r7, #6]
 6777 203e 4FEA0333 		lsl	r3, r3, #12
 6778 2042 FA69     		ldr	r2, [r7, #28]
 6779 2044 1343     		orrs	r3, r3, r2
 6780 2046 FB61     		str	r3, [r7, #28]
3889:../src/stm32f30x_tim.c ****   tmpccmr1 |= (uint32_t)((uint32_t)TIM_ICSelection << 8);
 6781              		.loc 1 3889 0
 6782 2048 3B89     		ldrh	r3, [r7, #8]
 6783 204a 4FEA0323 		lsl	r3, r3, #8
 6784 204e FA69     		ldr	r2, [r7, #28]
 6785 2050 1343     		orrs	r3, r3, r2
 6786 2052 FB61     		str	r3, [r7, #28]
3890:../src/stm32f30x_tim.c **** 
3891:../src/stm32f30x_tim.c ****   /* Select the Polarity and set the CC2E Bit */
3892:../src/stm32f30x_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 6787              		.loc 1 3892 0
 6788 2054 BA69     		ldr	r2, [r7, #24]
 6789 2056 4FF65F73 		movw	r3, #65375
 6790 205a 1340     		ands	r3, r3, r2
 6791 205c BB61     		str	r3, [r7, #24]
3893:../src/stm32f30x_tim.c ****   tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 6792              		.loc 1 3893 0
 6793 205e 7B69     		ldr	r3, [r7, #20]
 6794 2060 9BB2     		uxth	r3, r3
 6795 2062 43F01003 		orr	r3, r3, #16
 6796 2066 9BB2     		uxth	r3, r3
 6797 2068 BA69     		ldr	r2, [r7, #24]
 6798 206a 1343     		orrs	r3, r3, r2
 6799 206c BB61     		str	r3, [r7, #24]
3894:../src/stm32f30x_tim.c **** 
3895:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3896:../src/stm32f30x_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 6800              		.loc 1 3896 0
 6801 206e FB68     		ldr	r3, [r7, #12]
 6802 2070 FA69     		ldr	r2, [r7, #28]
 6803 2072 9A61     		str	r2, [r3, #24]
3897:../src/stm32f30x_tim.c ****   TIMx->CCER = tmpccer;
 6804              		.loc 1 3897 0
 6805 2074 FB68     		ldr	r3, [r7, #12]
 6806 2076 BA69     		ldr	r2, [r7, #24]
 6807 2078 1A62     		str	r2, [r3, #32]
3898:../src/stm32f30x_tim.c **** }
 6808              		.loc 1 3898 0
 6809 207a 07F12407 		add	r7, r7, #36
 6810 207e BD46     		mov	sp, r7
 6811 2080 80BC     		pop	{r7}
 6812 2082 7047     		bx	lr
 6813              		.cfi_endproc
 6814              	.LFE222:
 6816              		.align	2
 6817              		.thumb
 6818              		.thumb_func
 6820              	TI3_Config:
 6821              	.LFB223:
3899:../src/stm32f30x_tim.c **** 
3900:../src/stm32f30x_tim.c **** /**
3901:../src/stm32f30x_tim.c ****   * @brief  Configure the TI3 as Input.
3902:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3903:../src/stm32f30x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3904:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3905:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPolarity_Rising
3906:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPolarity_Falling
3907:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPolarity_BothEdge         
3908:../src/stm32f30x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3909:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3910:../src/stm32f30x_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
3911:../src/stm32f30x_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
3912:../src/stm32f30x_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
3913:../src/stm32f30x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3914:../src/stm32f30x_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3915:../src/stm32f30x_tim.c ****   * @retval None
3916:../src/stm32f30x_tim.c ****   */
3917:../src/stm32f30x_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3918:../src/stm32f30x_tim.c ****                        uint16_t TIM_ICFilter)
3919:../src/stm32f30x_tim.c **** {
 6822              		.loc 1 3919 0
 6823              		.cfi_startproc
 6824              		@ args = 0, pretend = 0, frame = 24
 6825              		@ frame_needed = 1, uses_anonymous_args = 0
 6826              		@ link register save eliminated.
 6827 2084 80B4     		push	{r7}
 6828              	.LCFI336:
 6829              		.cfi_def_cfa_offset 4
 6830              		.cfi_offset 7, -4
 6831 2086 87B0     		sub	sp, sp, #28
 6832              	.LCFI337:
 6833              		.cfi_def_cfa_offset 32
 6834 2088 00AF     		add	r7, sp, #0
 6835              	.LCFI338:
 6836              		.cfi_def_cfa_register 7
 6837 208a F860     		str	r0, [r7, #12]
 6838 208c 7981     		strh	r1, [r7, #10]	@ movhi
 6839 208e 3A81     		strh	r2, [r7, #8]	@ movhi
 6840 2090 FB80     		strh	r3, [r7, #6]	@ movhi
3920:../src/stm32f30x_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 6841              		.loc 1 3920 0
 6842 2092 4FF00003 		mov	r3, #0
 6843 2096 FB82     		strh	r3, [r7, #22]	@ movhi
 6844 2098 4FF00003 		mov	r3, #0
 6845 209c BB82     		strh	r3, [r7, #20]	@ movhi
 6846 209e 4FF00003 		mov	r3, #0
 6847 20a2 7B82     		strh	r3, [r7, #18]	@ movhi
3921:../src/stm32f30x_tim.c **** 
3922:../src/stm32f30x_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
3923:../src/stm32f30x_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 6848              		.loc 1 3923 0
 6849 20a4 FB68     		ldr	r3, [r7, #12]
 6850 20a6 1A6A     		ldr	r2, [r3, #32]
 6851 20a8 4FF6FF63 		movw	r3, #65279
 6852 20ac 1340     		ands	r3, r3, r2
 6853 20ae FA68     		ldr	r2, [r7, #12]
 6854 20b0 1362     		str	r3, [r2, #32]
3924:../src/stm32f30x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 6855              		.loc 1 3924 0
 6856 20b2 FB68     		ldr	r3, [r7, #12]
 6857 20b4 DB69     		ldr	r3, [r3, #28]
 6858 20b6 FB82     		strh	r3, [r7, #22]	@ movhi
3925:../src/stm32f30x_tim.c ****   tmpccer = TIMx->CCER;
 6859              		.loc 1 3925 0
 6860 20b8 FB68     		ldr	r3, [r7, #12]
 6861 20ba 1B6A     		ldr	r3, [r3, #32]
 6862 20bc BB82     		strh	r3, [r7, #20]	@ movhi
3926:../src/stm32f30x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
 6863              		.loc 1 3926 0
 6864 20be 7B89     		ldrh	r3, [r7, #10]	@ movhi
 6865 20c0 4FEA0323 		lsl	r3, r3, #8
 6866 20c4 7B82     		strh	r3, [r7, #18]	@ movhi
3927:../src/stm32f30x_tim.c **** 
3928:../src/stm32f30x_tim.c ****   /* Select the Input and set the filter */
3929:../src/stm32f30x_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR2_IC3F);
 6867              		.loc 1 3929 0
 6868 20c6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6869 20c8 23F0F303 		bic	r3, r3, #243
 6870 20cc FB82     		strh	r3, [r7, #22]	@ movhi
3930:../src/stm32f30x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 6871              		.loc 1 3930 0
 6872 20ce FB88     		ldrh	r3, [r7, #6]	@ movhi
 6873 20d0 4FEA0313 		lsl	r3, r3, #4
 6874 20d4 9AB2     		uxth	r2, r3
 6875 20d6 3B89     		ldrh	r3, [r7, #8]	@ movhi
 6876 20d8 1343     		orrs	r3, r3, r2
 6877 20da 9AB2     		uxth	r2, r3
 6878 20dc FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6879 20de 1343     		orrs	r3, r3, r2
 6880 20e0 FB82     		strh	r3, [r7, #22]	@ movhi
3931:../src/stm32f30x_tim.c **** 
3932:../src/stm32f30x_tim.c ****   /* Select the Polarity and set the CC3E Bit */
3933:../src/stm32f30x_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 6881              		.loc 1 3933 0
 6882 20e2 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 6883 20e4 23F42063 		bic	r3, r3, #2560
 6884 20e8 BB82     		strh	r3, [r7, #20]	@ movhi
3934:../src/stm32f30x_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 6885              		.loc 1 3934 0
 6886 20ea 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 6887 20ec BB8A     		ldrh	r3, [r7, #20]	@ movhi
 6888 20ee 1343     		orrs	r3, r3, r2
 6889 20f0 9BB2     		uxth	r3, r3
 6890 20f2 43F48073 		orr	r3, r3, #256
 6891 20f6 BB82     		strh	r3, [r7, #20]	@ movhi
3935:../src/stm32f30x_tim.c **** 
3936:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3937:../src/stm32f30x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 6892              		.loc 1 3937 0
 6893 20f8 FA8A     		ldrh	r2, [r7, #22]
 6894 20fa FB68     		ldr	r3, [r7, #12]
 6895 20fc DA61     		str	r2, [r3, #28]
3938:../src/stm32f30x_tim.c ****   TIMx->CCER = tmpccer;
 6896              		.loc 1 3938 0
 6897 20fe BA8A     		ldrh	r2, [r7, #20]
 6898 2100 FB68     		ldr	r3, [r7, #12]
 6899 2102 1A62     		str	r2, [r3, #32]
3939:../src/stm32f30x_tim.c **** }
 6900              		.loc 1 3939 0
 6901 2104 07F11C07 		add	r7, r7, #28
 6902 2108 BD46     		mov	sp, r7
 6903 210a 80BC     		pop	{r7}
 6904 210c 7047     		bx	lr
 6905              		.cfi_endproc
 6906              	.LFE223:
 6908 210e 00BF     		.align	2
 6909              		.thumb
 6910              		.thumb_func
 6912              	TI4_Config:
 6913              	.LFB224:
3940:../src/stm32f30x_tim.c **** 
3941:../src/stm32f30x_tim.c **** /**
3942:../src/stm32f30x_tim.c ****   * @brief  Configure the TI4 as Input.
3943:../src/stm32f30x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3944:../src/stm32f30x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3945:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3946:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPolarity_Rising
3947:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPolarity_Falling
3948:../src/stm32f30x_tim.c ****   *            @arg TIM_ICPolarity_BothEdge     
3949:../src/stm32f30x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3950:../src/stm32f30x_tim.c ****   *          This parameter can be one of the following values:
3951:../src/stm32f30x_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
3952:../src/stm32f30x_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
3953:../src/stm32f30x_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
3954:../src/stm32f30x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3955:../src/stm32f30x_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3956:../src/stm32f30x_tim.c ****   * @retval None
3957:../src/stm32f30x_tim.c ****   */
3958:../src/stm32f30x_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3959:../src/stm32f30x_tim.c ****                        uint16_t TIM_ICFilter)
3960:../src/stm32f30x_tim.c **** {
 6914              		.loc 1 3960 0
 6915              		.cfi_startproc
 6916              		@ args = 0, pretend = 0, frame = 24
 6917              		@ frame_needed = 1, uses_anonymous_args = 0
 6918              		@ link register save eliminated.
 6919 2110 80B4     		push	{r7}
 6920              	.LCFI339:
 6921              		.cfi_def_cfa_offset 4
 6922              		.cfi_offset 7, -4
 6923 2112 87B0     		sub	sp, sp, #28
 6924              	.LCFI340:
 6925              		.cfi_def_cfa_offset 32
 6926 2114 00AF     		add	r7, sp, #0
 6927              	.LCFI341:
 6928              		.cfi_def_cfa_register 7
 6929 2116 F860     		str	r0, [r7, #12]
 6930 2118 7981     		strh	r1, [r7, #10]	@ movhi
 6931 211a 3A81     		strh	r2, [r7, #8]	@ movhi
 6932 211c FB80     		strh	r3, [r7, #6]	@ movhi
3961:../src/stm32f30x_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 6933              		.loc 1 3961 0
 6934 211e 4FF00003 		mov	r3, #0
 6935 2122 FB82     		strh	r3, [r7, #22]	@ movhi
 6936 2124 4FF00003 		mov	r3, #0
 6937 2128 BB82     		strh	r3, [r7, #20]	@ movhi
 6938 212a 4FF00003 		mov	r3, #0
 6939 212e 7B82     		strh	r3, [r7, #18]	@ movhi
3962:../src/stm32f30x_tim.c **** 
3963:../src/stm32f30x_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
3964:../src/stm32f30x_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 6940              		.loc 1 3964 0
 6941 2130 FB68     		ldr	r3, [r7, #12]
 6942 2132 1A6A     		ldr	r2, [r3, #32]
 6943 2134 4EF6FF73 		movw	r3, #61439
 6944 2138 1340     		ands	r3, r3, r2
 6945 213a FA68     		ldr	r2, [r7, #12]
 6946 213c 1362     		str	r3, [r2, #32]
3965:../src/stm32f30x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 6947              		.loc 1 3965 0
 6948 213e FB68     		ldr	r3, [r7, #12]
 6949 2140 DB69     		ldr	r3, [r3, #28]
 6950 2142 FB82     		strh	r3, [r7, #22]	@ movhi
3966:../src/stm32f30x_tim.c ****   tmpccer = TIMx->CCER;
 6951              		.loc 1 3966 0
 6952 2144 FB68     		ldr	r3, [r7, #12]
 6953 2146 1B6A     		ldr	r3, [r3, #32]
 6954 2148 BB82     		strh	r3, [r7, #20]	@ movhi
3967:../src/stm32f30x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
 6955              		.loc 1 3967 0
 6956 214a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 6957 214c 4FEA0333 		lsl	r3, r3, #12
 6958 2150 7B82     		strh	r3, [r7, #18]	@ movhi
3968:../src/stm32f30x_tim.c **** 
3969:../src/stm32f30x_tim.c ****   /* Select the Input and set the filter */
3970:../src/stm32f30x_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 6959              		.loc 1 3970 0
 6960 2152 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6961 2154 23F44073 		bic	r3, r3, #768
 6962 2158 4FEA0353 		lsl	r3, r3, #20
 6963 215c 4FEA1353 		lsr	r3, r3, #20
 6964 2160 FB82     		strh	r3, [r7, #22]	@ movhi
3971:../src/stm32f30x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 6965              		.loc 1 3971 0
 6966 2162 3B89     		ldrh	r3, [r7, #8]	@ movhi
 6967 2164 4FEA0323 		lsl	r3, r3, #8
 6968 2168 9AB2     		uxth	r2, r3
 6969 216a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6970 216c 1343     		orrs	r3, r3, r2
 6971 216e FB82     		strh	r3, [r7, #22]	@ movhi
3972:../src/stm32f30x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 6972              		.loc 1 3972 0
 6973 2170 FB88     		ldrh	r3, [r7, #6]	@ movhi
 6974 2172 4FEA0333 		lsl	r3, r3, #12
 6975 2176 9AB2     		uxth	r2, r3
 6976 2178 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6977 217a 1343     		orrs	r3, r3, r2
 6978 217c FB82     		strh	r3, [r7, #22]	@ movhi
3973:../src/stm32f30x_tim.c **** 
3974:../src/stm32f30x_tim.c ****   /* Select the Polarity and set the CC4E Bit */
3975:../src/stm32f30x_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 6979              		.loc 1 3975 0
 6980 217e BB8A     		ldrh	r3, [r7, #20]	@ movhi
 6981 2180 23F40053 		bic	r3, r3, #8192
 6982 2184 4FEA4343 		lsl	r3, r3, #17
 6983 2188 4FEA5343 		lsr	r3, r3, #17
 6984 218c BB82     		strh	r3, [r7, #20]	@ movhi
3976:../src/stm32f30x_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 6985              		.loc 1 3976 0
 6986 218e 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 6987 2190 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 6988 2192 1343     		orrs	r3, r3, r2
 6989 2194 9BB2     		uxth	r3, r3
 6990 2196 43F48053 		orr	r3, r3, #4096
 6991 219a BB82     		strh	r3, [r7, #20]	@ movhi
3977:../src/stm32f30x_tim.c **** 
3978:../src/stm32f30x_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3979:../src/stm32f30x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 6992              		.loc 1 3979 0
 6993 219c FA8A     		ldrh	r2, [r7, #22]
 6994 219e FB68     		ldr	r3, [r7, #12]
 6995 21a0 DA61     		str	r2, [r3, #28]
3980:../src/stm32f30x_tim.c ****   TIMx->CCER = tmpccer ;
 6996              		.loc 1 3980 0
 6997 21a2 BA8A     		ldrh	r2, [r7, #20]
 6998 21a4 FB68     		ldr	r3, [r7, #12]
 6999 21a6 1A62     		str	r2, [r3, #32]
3981:../src/stm32f30x_tim.c **** }
 7000              		.loc 1 3981 0
 7001 21a8 07F11C07 		add	r7, r7, #28
 7002 21ac BD46     		mov	sp, r7
 7003 21ae 80BC     		pop	{r7}
 7004 21b0 7047     		bx	lr
 7005              		.cfi_endproc
 7006              	.LFE224:
 7008              	.Letext0:
 7009              		.file 2 "/home/aghosh01/gcc-arm-none-eabi-4_7-2012q4/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../.
 7010              		.file 3 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x.h"
 7011              		.file 4 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x_tim.h"
 7012              		.file 5 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f30x_tim.c
     /tmp/ccv7KVn5.s:19     .text:00000000 $t
     /tmp/ccv7KVn5.s:24     .text:00000000 TIM_DeInit
     /tmp/ccv7KVn5.s:212    .text:00000198 TIM_TimeBaseInit
     /tmp/ccv7KVn5.s:366    .text:000002a8 TIM_TimeBaseStructInit
     /tmp/ccv7KVn5.s:417    .text:000002e4 TIM_PrescalerConfig
     /tmp/ccv7KVn5.s:460    .text:0000030c TIM_CounterModeConfig
     /tmp/ccv7KVn5.s:513    .text:00000344 TIM_SetCounter
     /tmp/ccv7KVn5.s:549    .text:00000360 TIM_SetAutoreload
     /tmp/ccv7KVn5.s:585    .text:0000037c TIM_GetCounter
     /tmp/ccv7KVn5.s:620    .text:00000394 TIM_GetPrescaler
     /tmp/ccv7KVn5.s:656    .text:000003b0 TIM_UpdateDisableConfig
     /tmp/ccv7KVn5.s:712    .text:000003f0 TIM_UpdateRequestConfig
     /tmp/ccv7KVn5.s:768    .text:00000430 TIM_UIFRemap
     /tmp/ccv7KVn5.s:824    .text:00000470 TIM_ARRPreloadConfig
     /tmp/ccv7KVn5.s:880    .text:000004b0 TIM_SelectOnePulseMode
     /tmp/ccv7KVn5.s:930    .text:000004e8 TIM_SetClockDivision
     /tmp/ccv7KVn5.s:980    .text:00000520 TIM_Cmd
     /tmp/ccv7KVn5.s:1036   .text:00000560 TIM_OC1Init
     /tmp/ccv7KVn5.s:1210   .text:00000688 TIM_OC2Init
     /tmp/ccv7KVn5.s:1376   .text:000007a0 TIM_OC3Init
     /tmp/ccv7KVn5.s:1540   .text:000008b0 TIM_OC4Init
     /tmp/ccv7KVn5.s:1672   .text:00000984 TIM_OC5Init
     /tmp/ccv7KVn5.s:1799   .text:00000a4c TIM_OC6Init
     /tmp/ccv7KVn5.s:1920   .text:00000b08 TIM_SelectGC5C1
     /tmp/ccv7KVn5.s:1972   .text:00000b40 TIM_SelectGC5C2
     /tmp/ccv7KVn5.s:2024   .text:00000b78 TIM_SelectGC5C3
     /tmp/ccv7KVn5.s:2076   .text:00000bb0 TIM_OCStructInit
     /tmp/ccv7KVn5.s:2139   .text:00000c04 TIM_SelectOCxM
     /tmp/ccv7KVn5.s:2257   .text:00000cc0 TIM_SetCompare1
     /tmp/ccv7KVn5.s:2293   .text:00000cdc TIM_SetCompare2
     /tmp/ccv7KVn5.s:2329   .text:00000cf8 TIM_SetCompare3
     /tmp/ccv7KVn5.s:2365   .text:00000d14 TIM_SetCompare4
     /tmp/ccv7KVn5.s:2401   .text:00000d30 TIM_SetCompare5
     /tmp/ccv7KVn5.s:2437   .text:00000d4c TIM_SetCompare6
     /tmp/ccv7KVn5.s:2473   .text:00000d68 TIM_ForcedOC1Config
     /tmp/ccv7KVn5.s:2527   .text:00000da4 TIM_ForcedOC2Config
     /tmp/ccv7KVn5.s:2582   .text:00000de4 TIM_ForcedOC3Config
     /tmp/ccv7KVn5.s:2635   .text:00000e1c TIM_ForcedOC4Config
     /tmp/ccv7KVn5.s:2689   .text:00000e58 TIM_ForcedOC5Config
     /tmp/ccv7KVn5.s:2742   .text:00000e90 TIM_ForcedOC6Config
     /tmp/ccv7KVn5.s:2796   .text:00000ecc TIM_OC1PreloadConfig
     /tmp/ccv7KVn5.s:2849   .text:00000f04 TIM_OC2PreloadConfig
     /tmp/ccv7KVn5.s:2903   .text:00000f40 TIM_OC3PreloadConfig
     /tmp/ccv7KVn5.s:2956   .text:00000f78 TIM_OC4PreloadConfig
     /tmp/ccv7KVn5.s:3010   .text:00000fb4 TIM_OC5PreloadConfig
     /tmp/ccv7KVn5.s:3063   .text:00000fec TIM_OC6PreloadConfig
     /tmp/ccv7KVn5.s:3117   .text:00001028 TIM_OC1FastConfig
     /tmp/ccv7KVn5.s:3170   .text:00001060 TIM_OC2FastConfig
     /tmp/ccv7KVn5.s:3224   .text:0000109c TIM_OC3FastConfig
     /tmp/ccv7KVn5.s:3277   .text:000010d4 TIM_OC4FastConfig
     /tmp/ccv7KVn5.s:3331   .text:00001110 TIM_ClearOC1Ref
     /tmp/ccv7KVn5.s:3384   .text:00001148 TIM_ClearOC2Ref
     /tmp/ccv7KVn5.s:3438   .text:00001184 TIM_ClearOC3Ref
     /tmp/ccv7KVn5.s:3491   .text:000011bc TIM_ClearOC4Ref
     /tmp/ccv7KVn5.s:3545   .text:000011f8 TIM_ClearOC5Ref
     /tmp/ccv7KVn5.s:3598   .text:00001230 TIM_ClearOC6Ref
     /tmp/ccv7KVn5.s:3652   .text:0000126c TIM_SelectOCREFClear
     /tmp/ccv7KVn5.s:3699   .text:0000129c TIM_OC1PolarityConfig
     /tmp/ccv7KVn5.s:3752   .text:000012d4 TIM_OC1NPolarityConfig
     /tmp/ccv7KVn5.s:3805   .text:0000130c TIM_OC2PolarityConfig
     /tmp/ccv7KVn5.s:3859   .text:00001348 TIM_OC2NPolarityConfig
     /tmp/ccv7KVn5.s:3913   .text:00001384 TIM_OC3PolarityConfig
     /tmp/ccv7KVn5.s:3967   .text:000013c0 TIM_OC3NPolarityConfig
     /tmp/ccv7KVn5.s:4021   .text:000013fc TIM_OC4PolarityConfig
     /tmp/ccv7KVn5.s:4075   .text:00001438 TIM_OC5PolarityConfig
     /tmp/ccv7KVn5.s:4129   .text:00001474 TIM_OC6PolarityConfig
     /tmp/ccv7KVn5.s:4183   .text:000014b0 TIM_CCxCmd
     /tmp/ccv7KVn5.s:4243   .text:00001500 TIM_CCxNCmd
     /tmp/ccv7KVn5.s:4303   .text:00001550 TIM_ICInit
     /tmp/ccv7KVn5.s:6640   .text:00001f78 TI1_Config
     /tmp/ccv7KVn5.s:4756   .text:00001758 TIM_SetIC1Prescaler
     /tmp/ccv7KVn5.s:6723   .text:00001ff0 TI2_Config
     /tmp/ccv7KVn5.s:4802   .text:00001788 TIM_SetIC2Prescaler
     /tmp/ccv7KVn5.s:6820   .text:00002084 TI3_Config
     /tmp/ccv7KVn5.s:4849   .text:000017bc TIM_SetIC3Prescaler
     /tmp/ccv7KVn5.s:6912   .text:00002110 TI4_Config
     /tmp/ccv7KVn5.s:4896   .text:000017ec TIM_SetIC4Prescaler
     /tmp/ccv7KVn5.s:4432   .text:000015f8 TIM_ICStructInit
     /tmp/ccv7KVn5.s:4483   .text:00001634 TIM_PWMIConfig
     /tmp/ccv7KVn5.s:4616   .text:000016f8 TIM_GetCapture1
     /tmp/ccv7KVn5.s:4651   .text:00001710 TIM_GetCapture2
     /tmp/ccv7KVn5.s:4686   .text:00001728 TIM_GetCapture3
     /tmp/ccv7KVn5.s:4721   .text:00001740 TIM_GetCapture4
     /tmp/ccv7KVn5.s:4945   .text:00001824 TIM_BDTRConfig
     /tmp/ccv7KVn5.s:5015   .text:00001874 TIM_Break1Config
     /tmp/ccv7KVn5.s:5065   .text:000018ac TIM_Break2Config
     /tmp/ccv7KVn5.s:5115   .text:000018e4 TIM_Break1Cmd
     /tmp/ccv7KVn5.s:5167   .text:0000191c TIM_Break2Cmd
     /tmp/ccv7KVn5.s:5219   .text:00001954 TIM_BDTRStructInit
     /tmp/ccv7KVn5.s:5278   .text:000019a0 TIM_CtrlPWMOutputs
     /tmp/ccv7KVn5.s:5331   .text:000019dc TIM_SelectCOM
     /tmp/ccv7KVn5.s:5384   .text:00001a14 TIM_CCPreloadControl
     /tmp/ccv7KVn5.s:5437   .text:00001a4c TIM_ITConfig
     /tmp/ccv7KVn5.s:5495   .text:00001a8c TIM_GenerateEvent
     /tmp/ccv7KVn5.s:5532   .text:00001aa8 TIM_GetFlagStatus
     /tmp/ccv7KVn5.s:5586   .text:00001ae0 TIM_ClearFlag
     /tmp/ccv7KVn5.s:5626   .text:00001b04 TIM_GetITStatus
     /tmp/ccv7KVn5.s:5701   .text:00001b64 TIM_ClearITPendingBit
     /tmp/ccv7KVn5.s:5741   .text:00001b88 TIM_DMAConfig
     /tmp/ccv7KVn5.s:5783   .text:00001bb0 TIM_DMACmd
     /tmp/ccv7KVn5.s:5841   .text:00001bf0 TIM_SelectCCDMA
     /tmp/ccv7KVn5.s:5894   .text:00001c28 TIM_InternalClockConfig
     /tmp/ccv7KVn5.s:5932   .text:00001c48 TIM_ITRxExternalClockConfig
     /tmp/ccv7KVn5.s:6151   .text:00001d4c TIM_SelectInputTrigger
     /tmp/ccv7KVn5.s:5975   .text:00001c74 TIM_TIxExternalClockConfig
     /tmp/ccv7KVn5.s:6040   .text:00001cc8 TIM_ETRClockMode1Config
     /tmp/ccv7KVn5.s:6389   .text:00001e40 TIM_ETRConfig
     /tmp/ccv7KVn5.s:6106   .text:00001d1c TIM_ETRClockMode2Config
     /tmp/ccv7KVn5.s:6204   .text:00001d84 TIM_SelectOutputTrigger
     /tmp/ccv7KVn5.s:6251   .text:00001db4 TIM_SelectOutputTrigger2
     /tmp/ccv7KVn5.s:6296   .text:00001de0 TIM_SelectSlaveMode
     /tmp/ccv7KVn5.s:6342   .text:00001e10 TIM_SelectMasterSlaveMode
     /tmp/ccv7KVn5.s:6451   .text:00001e8c TIM_EncoderInterfaceConfig
     /tmp/ccv7KVn5.s:6551   .text:00001f20 TIM_SelectHallSensor
     /tmp/ccv7KVn5.s:6604   .text:00001f58 TIM_RemapConfig
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.323dce8664331a0daf4a2675e107c70c
                           .group:00000000 wm4.stm32f30x.h.56.6f19c65e98e3319a61449cb2b2455af5
                           .group:00000000 wm4.core_cm4.h.32.1434cd257ff5806b1b03cd32ab0641e9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.29.013e5bcf58dba2d27c60184174208e07
                           .group:00000000 wm4.core_cm4.h.155.cf7c793e178943e1bbf613f1b21cd51a
                           .group:00000000 wm4.stm32f30x.h.294.d8a54360eca16e4157694b52a095202d
                           .group:00000000 wm4.stm32f30x_adc.h.130.cbebad91f78fb87381fe0860eea6104e
                           .group:00000000 wm4.stm32f30x_can.h.50.8b8f5d301152c422a6e50622b33ef620
                           .group:00000000 wm4.stm32f30x_crc.h.54.66d4c5e565e18566aebd9abfd4bcd4b0
                           .group:00000000 wm4.stm32f30x_comp.h.91.06ae44150aaaa82c077b71df8db3541a
                           .group:00000000 wm4.stm32f30x_dac.h.49.b1b5b26e4ca241dbe67fa16dc86a615f
                           .group:00000000 wm4.stm32f30x_dbgmcu.h.53.b238a263ce6a2cc83f610cc35302a38b
                           .group:00000000 wm4.stm32f30x_dma.h.96.d7a2ddd10023e12781aa8ff5ac15d212
                           .group:00000000 wm4.stm32f30x_exti.h.60.8ca0809491a21dec6fc69cf7471e2bab
                           .group:00000000 wm4.stm32f30x_flash.h.70.32613455dfe7328932f786a224daac23
                           .group:00000000 wm4.stm32f30x_gpio.h.50.408e1f6250246e4cc28221970909d34c
                           .group:00000000 wm4.stm32f30x_syscfg.h.58.4cadeb4ec8e47d36b972bbb6b96b7161
                           .group:00000000 wm4.stm32f30x_i2c.h.86.3d51d4edc0e3b9ee9aae045ccbb7739a
                           .group:00000000 wm4.stm32f30x_iwdg.h.59.467d704fb073a015941f19b50fa6470a
                           .group:00000000 wm4.stm32f30x_opamp.h.75.704e2e5e2aab039de307aaa2dcc99fa5
                           .group:00000000 wm4.stm32f30x_pwr.h.59.5c85acff2a3e3c5085b2140c06025cfc
                           .group:00000000 wm4.stm32f30x_rcc.h.79.5ba7cac1e74879861a72556c25322aa4
                           .group:00000000 wm4.stm32f30x_rtc.h.133.d184e08ff40bda44db4bed94f9633384
                           .group:00000000 wm4.stm32f30x_spi.h.119.4d21ec94ec14f3553a127e61c0a9874f
                           .group:00000000 wm4.stm32f30x_usart.h.110.c89016273702821ff4f9fe43881f70b5
                           .group:00000000 wm4.stm32f30x_wwdg.h.58.4688eee61a2709866472b4b4c07d9275
                           .group:00000000 wm4.stm32f30x_misc.h.113.6a52e4fe7c3825a3ab05990f30dddf92
                           .group:00000000 wm4.stm32f30x_tim.h.175.d4a93cff2e7924577147254e501271b6

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
