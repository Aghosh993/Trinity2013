   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"encoder.cpp"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.align	2
  21              		.global	_Z17TIM8_init_encoderv
  22              		.thumb
  23              		.thumb_func
  25              	_Z17TIM8_init_encoderv:
  26              	.LFB111:
  27              		.file 1 "../src/encoder.cpp"
   1:../src/encoder.cpp **** /*
   2:../src/encoder.cpp ****  * encoder.c
   3:../src/encoder.cpp ****  *
   4:../src/encoder.cpp ****  *  Created on: Feb 19, 2013
   5:../src/encoder.cpp ****  *      Author: root
   6:../src/encoder.cpp ****  */
   7:../src/encoder.cpp **** #include "encoder.h"
   8:../src/encoder.cpp **** 
   9:../src/encoder.cpp **** void TIM8_init_encoder(void)	// PC6, PC7 -> TIM8 CH1 and CH2 mappings:
  10:../src/encoder.cpp **** {
  28              		.loc 1 10 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 86B0     		sub	sp, sp, #24
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43              	.LBB2:
  11:../src/encoder.cpp **** 	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
  12:../src/encoder.cpp **** 	GPIO_InitTypeDef GPIO_InitStructure;
  13:../src/encoder.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC, ENABLE);
  44              		.loc 1 13 0
  45 0006 4FF40020 		mov	r0, #524288
  46 000a 4FF00101 		mov	r1, #1
  47 000e FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
  14:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6 | GPIO_Pin_7;
  48              		.loc 1 14 0
  49 0012 4FF0C003 		mov	r3, #192
  50 0016 7B60     		str	r3, [r7, #4]
  15:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
  51              		.loc 1 15 0
  52 0018 4FF00203 		mov	r3, #2
  53 001c 3B72     		strb	r3, [r7, #8]
  16:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
  54              		.loc 1 16 0
  55 001e 4FF00003 		mov	r3, #0
  56 0022 BB72     		strb	r3, [r7, #10]
  17:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  57              		.loc 1 17 0
  58 0024 4FF00303 		mov	r3, #3
  59 0028 7B72     		strb	r3, [r7, #9]
  18:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;//UP;
  60              		.loc 1 18 0
  61 002a 4FF00003 		mov	r3, #0
  62 002e FB72     		strb	r3, [r7, #11]
  19:../src/encoder.cpp **** 	GPIO_Init(GPIOC, &GPIO_InitStructure);
  63              		.loc 1 19 0
  64 0030 07F10403 		add	r3, r7, #4
  65 0034 4FF40060 		mov	r0, #2048
  66 0038 C4F60000 		movt	r0, 18432
  67 003c 1946     		mov	r1, r3
  68 003e FFF7FEFF 		bl	GPIO_Init
  20:../src/encoder.cpp **** 
  21:../src/encoder.cpp **** 	GPIO_PinAFConfig(GPIOC, GPIO_PinSource6, GPIO_AF_4);
  69              		.loc 1 21 0
  70 0042 4FF40060 		mov	r0, #2048
  71 0046 C4F60000 		movt	r0, 18432
  72 004a 4FF00601 		mov	r1, #6
  73 004e 4FF00402 		mov	r2, #4
  74 0052 FFF7FEFF 		bl	GPIO_PinAFConfig
  22:../src/encoder.cpp **** 	GPIO_PinAFConfig(GPIOC, GPIO_PinSource7, GPIO_AF_4);
  75              		.loc 1 22 0
  76 0056 4FF40060 		mov	r0, #2048
  77 005a C4F60000 		movt	r0, 18432
  78 005e 4FF00701 		mov	r1, #7
  79 0062 4FF00402 		mov	r2, #4
  80 0066 FFF7FEFF 		bl	GPIO_PinAFConfig
  23:../src/encoder.cpp **** 
  24:../src/encoder.cpp **** 	RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM8, ENABLE);
  81              		.loc 1 24 0
  82 006a 4FF40050 		mov	r0, #8192
  83 006e 4FF00101 		mov	r1, #1
  84 0072 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  25:../src/encoder.cpp **** 	TIM_TimeBaseStructure.TIM_Period = 0xFFFF;
  85              		.loc 1 25 0
  86 0076 4FF6FF73 		movw	r3, #65535
  87 007a 3B61     		str	r3, [r7, #16]
  26:../src/encoder.cpp **** 	TIM_TimeBaseStructure.TIM_Prescaler = 0;
  88              		.loc 1 26 0
  89 007c 4FF00003 		mov	r3, #0
  90 0080 BB81     		strh	r3, [r7, #12]	@ movhi
  27:../src/encoder.cpp **** 	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
  91              		.loc 1 27 0
  92 0082 4FF00003 		mov	r3, #0
  93 0086 BB82     		strh	r3, [r7, #20]	@ movhi
  28:../src/encoder.cpp **** 	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
  94              		.loc 1 28 0
  95 0088 4FF00003 		mov	r3, #0
  96 008c FB81     		strh	r3, [r7, #14]	@ movhi
  29:../src/encoder.cpp **** 	TIM_EncoderInterfaceConfig(TIM8,TIM_EncoderMode_TI12,TIM_ICPolarity_Falling,
  30:../src/encoder.cpp **** 	TIM_ICPolarity_Falling);
  97              		.loc 1 30 0
  98 008e 4FF45050 		mov	r0, #13312
  99 0092 C4F20100 		movt	r0, 16385
 100 0096 4FF00301 		mov	r1, #3
 101 009a 4FF00202 		mov	r2, #2
 102 009e 4FF00203 		mov	r3, #2
 103 00a2 FFF7FEFF 		bl	TIM_EncoderInterfaceConfig
  31:../src/encoder.cpp **** 	TIM_TimeBaseInit(TIM8, &TIM_TimeBaseStructure);
 104              		.loc 1 31 0
 105 00a6 07F10C03 		add	r3, r7, #12
 106 00aa 4FF45050 		mov	r0, #13312
 107 00ae C4F20100 		movt	r0, 16385
 108 00b2 1946     		mov	r1, r3
 109 00b4 FFF7FEFF 		bl	TIM_TimeBaseInit
  32:../src/encoder.cpp **** 	TIM_Cmd(TIM8, ENABLE);
 110              		.loc 1 32 0
 111 00b8 4FF45050 		mov	r0, #13312
 112 00bc C4F20100 		movt	r0, 16385
 113 00c0 4FF00101 		mov	r1, #1
 114 00c4 FFF7FEFF 		bl	TIM_Cmd
  33:../src/encoder.cpp **** 
  34:../src/encoder.cpp **** 	TIM_SetCounter(TIM8, 0);
 115              		.loc 1 34 0
 116 00c8 4FF45050 		mov	r0, #13312
 117 00cc C4F20100 		movt	r0, 16385
 118 00d0 4FF00001 		mov	r1, #0
 119 00d4 FFF7FEFF 		bl	TIM_SetCounter
 120              	.LBE2:
  35:../src/encoder.cpp **** }
 121              		.loc 1 35 0
 122 00d8 07F11807 		add	r7, r7, #24
 123 00dc BD46     		mov	sp, r7
 124 00de 80BD     		pop	{r7, pc}
 125              		.cfi_endproc
 126              	.LFE111:
 128              		.align	2
 129              		.global	_Z17TIM2_init_encoderv
 130              		.thumb
 131              		.thumb_func
 133              	_Z17TIM2_init_encoderv:
 134              	.LFB112:
  36:../src/encoder.cpp **** 
  37:../src/encoder.cpp **** void TIM2_init_encoder(void) // PA0, PA1 -> TIM2 CH1 and CH2 mappings:
  38:../src/encoder.cpp **** {
 135              		.loc 1 38 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 24
 138              		@ frame_needed = 1, uses_anonymous_args = 0
 139 00e0 80B5     		push	{r7, lr}
 140              	.LCFI3:
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 00e2 86B0     		sub	sp, sp, #24
 145              	.LCFI4:
 146              		.cfi_def_cfa_offset 32
 147 00e4 00AF     		add	r7, sp, #0
 148              	.LCFI5:
 149              		.cfi_def_cfa_register 7
 150              	.LBB3:
  39:../src/encoder.cpp **** 	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
  40:../src/encoder.cpp **** 	GPIO_InitTypeDef GPIO_InitStructure;
  41:../src/encoder.cpp **** 
  42:../src/encoder.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
 151              		.loc 1 42 0
 152 00e6 4FF40030 		mov	r0, #131072
 153 00ea 4FF00101 		mov	r1, #1
 154 00ee FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
  43:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1;
 155              		.loc 1 43 0
 156 00f2 4FF00303 		mov	r3, #3
 157 00f6 7B60     		str	r3, [r7, #4]
  44:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 158              		.loc 1 44 0
 159 00f8 4FF00203 		mov	r3, #2
 160 00fc 3B72     		strb	r3, [r7, #8]
  45:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 161              		.loc 1 45 0
 162 00fe 4FF00003 		mov	r3, #0
 163 0102 BB72     		strb	r3, [r7, #10]
  46:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 164              		.loc 1 46 0
 165 0104 4FF00303 		mov	r3, #3
 166 0108 7B72     		strb	r3, [r7, #9]
  47:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;//UP;
 167              		.loc 1 47 0
 168 010a 4FF00003 		mov	r3, #0
 169 010e FB72     		strb	r3, [r7, #11]
  48:../src/encoder.cpp **** 	GPIO_Init(GPIOA, &GPIO_InitStructure);
 170              		.loc 1 48 0
 171 0110 07F10403 		add	r3, r7, #4
 172 0114 4FF09040 		mov	r0, #1207959552
 173 0118 1946     		mov	r1, r3
 174 011a FFF7FEFF 		bl	GPIO_Init
  49:../src/encoder.cpp **** 
  50:../src/encoder.cpp **** 	GPIO_PinAFConfig(GPIOA, GPIO_PinSource0, GPIO_AF_1);
 175              		.loc 1 50 0
 176 011e 4FF09040 		mov	r0, #1207959552
 177 0122 4FF00001 		mov	r1, #0
 178 0126 4FF00102 		mov	r2, #1
 179 012a FFF7FEFF 		bl	GPIO_PinAFConfig
  51:../src/encoder.cpp **** 	GPIO_PinAFConfig(GPIOA, GPIO_PinSource1, GPIO_AF_1);
 180              		.loc 1 51 0
 181 012e 4FF09040 		mov	r0, #1207959552
 182 0132 4FF00101 		mov	r1, #1
 183 0136 4FF00102 		mov	r2, #1
 184 013a FFF7FEFF 		bl	GPIO_PinAFConfig
  52:../src/encoder.cpp **** 
  53:../src/encoder.cpp **** 	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
 185              		.loc 1 53 0
 186 013e 4FF00100 		mov	r0, #1
 187 0142 4FF00101 		mov	r1, #1
 188 0146 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
  54:../src/encoder.cpp **** 	TIM_TimeBaseStructure.TIM_Period = 0xFFFFFFFF;
 189              		.loc 1 54 0
 190 014a 4FF0FF33 		mov	r3, #-1
 191 014e 3B61     		str	r3, [r7, #16]
  55:../src/encoder.cpp **** 	TIM_TimeBaseStructure.TIM_Prescaler = 0;
 192              		.loc 1 55 0
 193 0150 4FF00003 		mov	r3, #0
 194 0154 BB81     		strh	r3, [r7, #12]	@ movhi
  56:../src/encoder.cpp **** 	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
 195              		.loc 1 56 0
 196 0156 4FF00003 		mov	r3, #0
 197 015a BB82     		strh	r3, [r7, #20]	@ movhi
  57:../src/encoder.cpp **** 	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
 198              		.loc 1 57 0
 199 015c 4FF00003 		mov	r3, #0
 200 0160 FB81     		strh	r3, [r7, #14]	@ movhi
  58:../src/encoder.cpp **** 	TIM_EncoderInterfaceConfig(TIM2,TIM_EncoderMode_TI12,TIM_ICPolarity_Falling,
  59:../src/encoder.cpp **** 	TIM_ICPolarity_Falling);
 201              		.loc 1 59 0
 202 0162 4FF08040 		mov	r0, #1073741824
 203 0166 4FF00301 		mov	r1, #3
 204 016a 4FF00202 		mov	r2, #2
 205 016e 4FF00203 		mov	r3, #2
 206 0172 FFF7FEFF 		bl	TIM_EncoderInterfaceConfig
  60:../src/encoder.cpp **** 	TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 207              		.loc 1 60 0
 208 0176 07F10C03 		add	r3, r7, #12
 209 017a 4FF08040 		mov	r0, #1073741824
 210 017e 1946     		mov	r1, r3
 211 0180 FFF7FEFF 		bl	TIM_TimeBaseInit
  61:../src/encoder.cpp **** 	TIM_Cmd(TIM2, ENABLE);
 212              		.loc 1 61 0
 213 0184 4FF08040 		mov	r0, #1073741824
 214 0188 4FF00101 		mov	r1, #1
 215 018c FFF7FEFF 		bl	TIM_Cmd
  62:../src/encoder.cpp **** 
  63:../src/encoder.cpp **** 	TIM_SetCounter(TIM2, 0);
 216              		.loc 1 63 0
 217 0190 4FF08040 		mov	r0, #1073741824
 218 0194 4FF00001 		mov	r1, #0
 219 0198 FFF7FEFF 		bl	TIM_SetCounter
 220              	.LBE3:
  64:../src/encoder.cpp **** }
 221              		.loc 1 64 0
 222 019c 07F11807 		add	r7, r7, #24
 223 01a0 BD46     		mov	sp, r7
 224 01a2 80BD     		pop	{r7, pc}
 225              		.cfi_endproc
 226              	.LFE112:
 228              		.align	2
 229              		.global	_Z23encoder_update_ISR_initv
 230              		.thumb
 231              		.thumb_func
 233              	_Z23encoder_update_ISR_initv:
 234              	.LFB113:
  65:../src/encoder.cpp **** 
  66:../src/encoder.cpp **** // Initializes the ISR that updates the raw state (position, velocity, acceleration) of each encode
  67:../src/encoder.cpp **** // Interrupt Priority: NEXT-HIGHEST (1)
  68:../src/encoder.cpp **** 
  69:../src/encoder.cpp **** void encoder_update_ISR_init(void)
  70:../src/encoder.cpp **** {
 235              		.loc 1 70 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 16
 238              		@ frame_needed = 1, uses_anonymous_args = 0
 239 01a4 80B5     		push	{r7, lr}
 240              	.LCFI6:
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 7, -8
 243              		.cfi_offset 14, -4
 244 01a6 84B0     		sub	sp, sp, #16
 245              	.LCFI7:
 246              		.cfi_def_cfa_offset 24
 247 01a8 00AF     		add	r7, sp, #0
 248              	.LCFI8:
 249              		.cfi_def_cfa_register 7
 250              	.LBB4:
  71:../src/encoder.cpp **** 	NVIC_InitTypeDef nv;
  72:../src/encoder.cpp **** 	TIM_TimeBaseInitTypeDef TIM7_init;
  73:../src/encoder.cpp **** 
  74:../src/encoder.cpp **** 	nv.NVIC_IRQChannel = TIM7_IRQn;
 251              		.loc 1 74 0
 252 01aa 4FF03703 		mov	r3, #55
 253 01ae 3B73     		strb	r3, [r7, #12]
  75:../src/encoder.cpp **** 	nv.NVIC_IRQChannelPreemptionPriority = 1;
 254              		.loc 1 75 0
 255 01b0 4FF00103 		mov	r3, #1
 256 01b4 7B73     		strb	r3, [r7, #13]
  76:../src/encoder.cpp **** 	nv.NVIC_IRQChannelSubPriority = 0;
 257              		.loc 1 76 0
 258 01b6 4FF00003 		mov	r3, #0
 259 01ba BB73     		strb	r3, [r7, #14]
  77:../src/encoder.cpp **** 	nv.NVIC_IRQChannelCmd = ENABLE;
 260              		.loc 1 77 0
 261 01bc 4FF00103 		mov	r3, #1
 262 01c0 FB73     		strb	r3, [r7, #15]
  78:../src/encoder.cpp **** 
  79:../src/encoder.cpp **** 	NVIC_Init(&nv);
 263              		.loc 1 79 0
 264 01c2 07F10C03 		add	r3, r7, #12
 265 01c6 1846     		mov	r0, r3
 266 01c8 FFF7FEFF 		bl	NVIC_Init
  80:../src/encoder.cpp **** 
  81:../src/encoder.cpp **** 	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM7, ENABLE); //TIM2 on APB1
 267              		.loc 1 81 0
 268 01cc 4FF02000 		mov	r0, #32
 269 01d0 4FF00101 		mov	r1, #1
 270 01d4 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
  82:../src/encoder.cpp **** 
  83:../src/encoder.cpp **** 	/*
  84:../src/encoder.cpp **** 	 * UPDATE_FREQUENCY = TIM_CLK/[(PRESCALER+1)(ARR+1)(REPCOUNTER+1)]
  85:../src/encoder.cpp **** 	 * 	  Prescaler -> PRESCALER
  86:../src/encoder.cpp **** 	 * 	  Period -> ARR
  87:../src/encoder.cpp **** 	 * 	  RepetitionCounter -> REPCOUNTER
  88:../src/encoder.cpp **** 	 */
  89:../src/encoder.cpp **** 
  90:../src/encoder.cpp **** 	TIM7_init.TIM_Period = (10*DT_ENCODER)-1;
 271              		.loc 1 90 0
 272 01d8 4FF0F903 		mov	r3, #249
 273 01dc 7B60     		str	r3, [r7, #4]
  91:../src/encoder.cpp **** 	TIM7_init.TIM_Prescaler = 7199;
 274              		.loc 1 91 0
 275 01de 41F61F43 		movw	r3, #7199
 276 01e2 3B80     		strh	r3, [r7, #0]	@ movhi
  92:../src/encoder.cpp **** 	TIM7_init.TIM_RepetitionCounter = 0;
 277              		.loc 1 92 0
 278 01e4 4FF00003 		mov	r3, #0
 279 01e8 BB72     		strb	r3, [r7, #10]
  93:../src/encoder.cpp **** 	TIM7_init.TIM_ClockDivision = 0;
 280              		.loc 1 93 0
 281 01ea 4FF00003 		mov	r3, #0
 282 01ee 3B81     		strh	r3, [r7, #8]	@ movhi
  94:../src/encoder.cpp **** 	TIM7_init.TIM_CounterMode = TIM_CounterMode_Up;
 283              		.loc 1 94 0
 284 01f0 4FF00003 		mov	r3, #0
 285 01f4 7B80     		strh	r3, [r7, #2]	@ movhi
  95:../src/encoder.cpp **** 
  96:../src/encoder.cpp **** 	TIM_TimeBaseInit(TIM7, &TIM7_init);
 286              		.loc 1 96 0
 287 01f6 3B46     		mov	r3, r7
 288 01f8 4FF4A050 		mov	r0, #5120
 289 01fc C4F20000 		movt	r0, 16384
 290 0200 1946     		mov	r1, r3
 291 0202 FFF7FEFF 		bl	TIM_TimeBaseInit
  97:../src/encoder.cpp **** 
  98:../src/encoder.cpp **** 	TIM_ITConfig(TIM7, TIM_IT_Update, ENABLE);
 292              		.loc 1 98 0
 293 0206 4FF4A050 		mov	r0, #5120
 294 020a C4F20000 		movt	r0, 16384
 295 020e 4FF00101 		mov	r1, #1
 296 0212 4FF00102 		mov	r2, #1
 297 0216 FFF7FEFF 		bl	TIM_ITConfig
  99:../src/encoder.cpp **** 	TIM_Cmd(TIM7, ENABLE);
 298              		.loc 1 99 0
 299 021a 4FF4A050 		mov	r0, #5120
 300 021e C4F20000 		movt	r0, 16384
 301 0222 4FF00101 		mov	r1, #1
 302 0226 FFF7FEFF 		bl	TIM_Cmd
 303              	.LBE4:
 100:../src/encoder.cpp **** 
 101:../src/encoder.cpp **** }
 304              		.loc 1 101 0
 305 022a 07F11007 		add	r7, r7, #16
 306 022e BD46     		mov	sp, r7
 307 0230 80BD     		pop	{r7, pc}
 308              		.cfi_endproc
 309              	.LFE113:
 311 0232 00BF     		.align	2
 312              		.global	_Z19init_encoder_structP12encoderState
 313              		.thumb
 314              		.thumb_func
 316              	_Z19init_encoder_structP12encoderState:
 317              	.LFB114:
 102:../src/encoder.cpp **** void init_encoder_struct(encoderState* enc)
 103:../src/encoder.cpp **** {
 318              		.loc 1 103 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 8
 321              		@ frame_needed = 1, uses_anonymous_args = 0
 322              		@ link register save eliminated.
 323 0234 80B4     		push	{r7}
 324              	.LCFI9:
 325              		.cfi_def_cfa_offset 4
 326              		.cfi_offset 7, -4
 327 0236 83B0     		sub	sp, sp, #12
 328              	.LCFI10:
 329              		.cfi_def_cfa_offset 16
 330 0238 00AF     		add	r7, sp, #0
 331              	.LCFI11:
 332              		.cfi_def_cfa_register 7
 333 023a 7860     		str	r0, [r7, #4]
 104:../src/encoder.cpp **** 	enc->position = 0;
 334              		.loc 1 104 0
 335 023c 7B68     		ldr	r3, [r7, #4]
 336 023e 4FF00002 		mov	r2, #0
 337 0242 1A60     		str	r2, [r3, #0]
 105:../src/encoder.cpp **** 	enc->speed = 0;
 338              		.loc 1 105 0
 339 0244 7B68     		ldr	r3, [r7, #4]
 340 0246 4FF00002 		mov	r2, #0
 341 024a 5A60     		str	r2, [r3, #4]	@ float
 106:../src/encoder.cpp **** 	enc->acceleration = 0;
 342              		.loc 1 106 0
 343 024c 7B68     		ldr	r3, [r7, #4]
 344 024e 4FF00002 		mov	r2, #0
 345 0252 9A60     		str	r2, [r3, #8]	@ float
 107:../src/encoder.cpp **** 	enc->m = MODE_OPENLOOP;
 346              		.loc 1 107 0
 347 0254 7B68     		ldr	r3, [r7, #4]
 348 0256 4FF00002 		mov	r2, #0
 349 025a 83F82420 		strb	r2, [r3, #36]
 108:../src/encoder.cpp **** 	enc->integral = 0;
 350              		.loc 1 108 0
 351 025e 7B68     		ldr	r3, [r7, #4]
 352 0260 4FF00002 		mov	r2, #0
 353 0264 5A61     		str	r2, [r3, #20]
 109:../src/encoder.cpp **** 	enc->position_target = 0;
 354              		.loc 1 109 0
 355 0266 7B68     		ldr	r3, [r7, #4]
 356 0268 4FF00002 		mov	r2, #0
 357 026c DA60     		str	r2, [r3, #12]
 110:../src/encoder.cpp **** 	enc->speed_target = 0;
 358              		.loc 1 110 0
 359 026e 7B68     		ldr	r3, [r7, #4]
 360 0270 4FF00002 		mov	r2, #0
 361 0274 1A61     		str	r2, [r3, #16]	@ float
 111:../src/encoder.cpp **** 	enc->last_error = 0;
 362              		.loc 1 111 0
 363 0276 7B68     		ldr	r3, [r7, #4]
 364 0278 4FF00002 		mov	r2, #0
 365 027c 9A61     		str	r2, [r3, #24]
 112:../src/encoder.cpp **** 	enc->last_speed_error = 0;
 366              		.loc 1 112 0
 367 027e 7B68     		ldr	r3, [r7, #4]
 368 0280 4FF00002 		mov	r2, #0
 369 0284 DA61     		str	r2, [r3, #28]	@ float
 113:../src/encoder.cpp **** 	enc->vel_cmd = 0.5f;
 370              		.loc 1 113 0
 371 0286 7B68     		ldr	r3, [r7, #4]
 372 0288 4FF07C52 		mov	r2, #1056964608
 373 028c 1A62     		str	r2, [r3, #32]	@ float
 114:../src/encoder.cpp **** }
 374              		.loc 1 114 0
 375 028e 07F10C07 		add	r7, r7, #12
 376 0292 BD46     		mov	sp, r7
 377 0294 80BC     		pop	{r7}
 378 0296 7047     		bx	lr
 379              		.cfi_endproc
 380              	.LFE114:
 382              	.Letext0:
 383              		.file 2 "/home/aghosh01/gcc-arm-none-eabi-4_7-2012q4/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../.
 384              		.file 3 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x.h"
 385              		.file 4 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x_gpio.h"
 386              		.file 5 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x_tim.h"
 387              		.file 6 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x_misc.h"
 388              		.file 7 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/Robot/encoder.h"
 389              		.file 8 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 encoder.cpp
     /tmp/cc5iKpb5.s:20     .text:00000000 $t
     /tmp/cc5iKpb5.s:25     .text:00000000 _Z17TIM8_init_encoderv
     /tmp/cc5iKpb5.s:133    .text:000000e0 _Z17TIM2_init_encoderv
     /tmp/cc5iKpb5.s:233    .text:000001a4 _Z23encoder_update_ISR_initv
     /tmp/cc5iKpb5.s:316    .text:00000234 _Z19init_encoder_structP12encoderState
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.50a79f075d1434c9a8bd8ee500f78677
                           .group:00000000 wm4.common_headers.h.9.7fd02f13feff23c3903ac7c4e216cd44
                           .group:00000000 wm4.stm32f30x.h.56.6f19c65e98e3319a61449cb2b2455af5
                           .group:00000000 wm4.core_cm4.h.32.1434cd257ff5806b1b03cd32ab0641e9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.29.013e5bcf58dba2d27c60184174208e07
                           .group:00000000 wm4.core_cm4.h.155.170ad2f92df387b9fa0dc3deabd34ef9
                           .group:00000000 wm4.stm32f30x.h.294.d8a54360eca16e4157694b52a095202d
                           .group:00000000 wm4.stm32f30x_adc.h.130.cbebad91f78fb87381fe0860eea6104e
                           .group:00000000 wm4.stm32f30x_can.h.50.8b8f5d301152c422a6e50622b33ef620
                           .group:00000000 wm4.stm32f30x_crc.h.54.66d4c5e565e18566aebd9abfd4bcd4b0
                           .group:00000000 wm4.stm32f30x_comp.h.91.06ae44150aaaa82c077b71df8db3541a
                           .group:00000000 wm4.stm32f30x_dac.h.49.b1b5b26e4ca241dbe67fa16dc86a615f
                           .group:00000000 wm4.stm32f30x_dbgmcu.h.53.b238a263ce6a2cc83f610cc35302a38b
                           .group:00000000 wm4.stm32f30x_dma.h.96.d7a2ddd10023e12781aa8ff5ac15d212
                           .group:00000000 wm4.stm32f30x_exti.h.60.8ca0809491a21dec6fc69cf7471e2bab
                           .group:00000000 wm4.stm32f30x_flash.h.70.32613455dfe7328932f786a224daac23
                           .group:00000000 wm4.stm32f30x_gpio.h.50.408e1f6250246e4cc28221970909d34c
                           .group:00000000 wm4.stm32f30x_syscfg.h.58.4cadeb4ec8e47d36b972bbb6b96b7161
                           .group:00000000 wm4.stm32f30x_i2c.h.86.3d51d4edc0e3b9ee9aae045ccbb7739a
                           .group:00000000 wm4.stm32f30x_iwdg.h.59.467d704fb073a015941f19b50fa6470a
                           .group:00000000 wm4.stm32f30x_opamp.h.75.704e2e5e2aab039de307aaa2dcc99fa5
                           .group:00000000 wm4.stm32f30x_pwr.h.59.5c85acff2a3e3c5085b2140c06025cfc
                           .group:00000000 wm4.stm32f30x_rcc.h.79.5ba7cac1e74879861a72556c25322aa4
                           .group:00000000 wm4.stm32f30x_rtc.h.133.d184e08ff40bda44db4bed94f9633384
                           .group:00000000 wm4.stm32f30x_spi.h.119.4d21ec94ec14f3553a127e61c0a9874f
                           .group:00000000 wm4.stm32f30x_tim.h.175.d4a93cff2e7924577147254e501271b6
                           .group:00000000 wm4.stm32f30x_usart.h.110.c89016273702821ff4f9fe43881f70b5
                           .group:00000000 wm4.stm32f30x_wwdg.h.58.4688eee61a2709866472b4b4c07d9275
                           .group:00000000 wm4.stm32f30x_misc.h.113.6a52e4fe7c3825a3ab05990f30dddf92
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.fa6206289f154965d075fc01e2867808
                           .group:00000000 wm4._default_types.h.6.1dbd2e581fd590860c7c17f21d147e91
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.math.h.35.4ec5c5df469deeb27bddb969fc54c06a
                           .group:00000000 wm4.encoder.h.14.d5e5872c27905990847e2dff40a1b2fe

UNDEFINED SYMBOLS
RCC_AHBPeriphClockCmd
GPIO_Init
GPIO_PinAFConfig
RCC_APB2PeriphClockCmd
TIM_EncoderInterfaceConfig
TIM_TimeBaseInit
TIM_Cmd
TIM_SetCounter
RCC_APB1PeriphClockCmd
NVIC_Init
TIM_ITConfig
