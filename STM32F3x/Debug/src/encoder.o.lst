   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"encoder.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.align	2
  20              		.global	_Z17TIM8_init_encoderv
  21              		.thumb
  22              		.thumb_func
  24              	_Z17TIM8_init_encoderv:
  25              	.LFB111:
  26              		.file 1 "../src/encoder.cpp"
   1:../src/encoder.cpp **** /*
   2:../src/encoder.cpp ****  * encoder.c
   3:../src/encoder.cpp ****  *
   4:../src/encoder.cpp ****  *  Created on: Feb 19, 2013
   5:../src/encoder.cpp ****  *      Author: root
   6:../src/encoder.cpp ****  */
   7:../src/encoder.cpp **** #include "encoder.h"
   8:../src/encoder.cpp **** 
   9:../src/encoder.cpp **** void TIM8_init_encoder(void)	// PC6, PC7 -> TIM8 CH1 and CH2 mappings:
  10:../src/encoder.cpp **** {
  27              		.loc 1 10 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 86B0     		sub	sp, sp, #24
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 32
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42              	.LBB2:
  11:../src/encoder.cpp **** 	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
  12:../src/encoder.cpp **** 	GPIO_InitTypeDef GPIO_InitStructure;
  13:../src/encoder.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC, ENABLE);
  43              		.loc 1 13 0
  44 0006 4FF40020 		mov	r0, #524288
  45 000a 4FF00101 		mov	r1, #1
  46 000e FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
  14:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6 | GPIO_Pin_7;
  47              		.loc 1 14 0
  48 0012 4FF0C003 		mov	r3, #192
  49 0016 7B60     		str	r3, [r7, #4]
  15:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
  50              		.loc 1 15 0
  51 0018 4FF00203 		mov	r3, #2
  52 001c 3B72     		strb	r3, [r7, #8]
  16:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
  53              		.loc 1 16 0
  54 001e 4FF00003 		mov	r3, #0
  55 0022 BB72     		strb	r3, [r7, #10]
  17:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  56              		.loc 1 17 0
  57 0024 4FF00303 		mov	r3, #3
  58 0028 7B72     		strb	r3, [r7, #9]
  18:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;//UP;
  59              		.loc 1 18 0
  60 002a 4FF00003 		mov	r3, #0
  61 002e FB72     		strb	r3, [r7, #11]
  19:../src/encoder.cpp **** 	GPIO_Init(GPIOC, &GPIO_InitStructure);
  62              		.loc 1 19 0
  63 0030 07F10403 		add	r3, r7, #4
  64 0034 4FF40060 		mov	r0, #2048
  65 0038 C4F60000 		movt	r0, 18432
  66 003c 1946     		mov	r1, r3
  67 003e FFF7FEFF 		bl	GPIO_Init
  20:../src/encoder.cpp **** 
  21:../src/encoder.cpp **** 	GPIO_PinAFConfig(GPIOC, GPIO_PinSource6, GPIO_AF_4);
  68              		.loc 1 21 0
  69 0042 4FF40060 		mov	r0, #2048
  70 0046 C4F60000 		movt	r0, 18432
  71 004a 4FF00601 		mov	r1, #6
  72 004e 4FF00402 		mov	r2, #4
  73 0052 FFF7FEFF 		bl	GPIO_PinAFConfig
  22:../src/encoder.cpp **** 	GPIO_PinAFConfig(GPIOC, GPIO_PinSource7, GPIO_AF_4);
  74              		.loc 1 22 0
  75 0056 4FF40060 		mov	r0, #2048
  76 005a C4F60000 		movt	r0, 18432
  77 005e 4FF00701 		mov	r1, #7
  78 0062 4FF00402 		mov	r2, #4
  79 0066 FFF7FEFF 		bl	GPIO_PinAFConfig
  23:../src/encoder.cpp **** 
  24:../src/encoder.cpp **** 	RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM8, ENABLE);
  80              		.loc 1 24 0
  81 006a 4FF40050 		mov	r0, #8192
  82 006e 4FF00101 		mov	r1, #1
  83 0072 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  25:../src/encoder.cpp **** 	TIM_TimeBaseStructure.TIM_Period = 0xFFFF;
  84              		.loc 1 25 0
  85 0076 4FF6FF73 		movw	r3, #65535
  86 007a 3B61     		str	r3, [r7, #16]
  26:../src/encoder.cpp **** 	TIM_TimeBaseStructure.TIM_Prescaler = 0;
  87              		.loc 1 26 0
  88 007c 4FF00003 		mov	r3, #0
  89 0080 BB81     		strh	r3, [r7, #12]	@ movhi
  27:../src/encoder.cpp **** 	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
  90              		.loc 1 27 0
  91 0082 4FF00003 		mov	r3, #0
  92 0086 BB82     		strh	r3, [r7, #20]	@ movhi
  28:../src/encoder.cpp **** 	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
  93              		.loc 1 28 0
  94 0088 4FF00003 		mov	r3, #0
  95 008c FB81     		strh	r3, [r7, #14]	@ movhi
  29:../src/encoder.cpp **** 	TIM_EncoderInterfaceConfig(TIM8,TIM_EncoderMode_TI12,TIM_ICPolarity_Falling,
  30:../src/encoder.cpp **** 	TIM_ICPolarity_Falling);
  96              		.loc 1 30 0
  97 008e 4FF45050 		mov	r0, #13312
  98 0092 C4F20100 		movt	r0, 16385
  99 0096 4FF00301 		mov	r1, #3
 100 009a 4FF00202 		mov	r2, #2
 101 009e 4FF00203 		mov	r3, #2
 102 00a2 FFF7FEFF 		bl	TIM_EncoderInterfaceConfig
  31:../src/encoder.cpp **** 	TIM_TimeBaseInit(TIM8, &TIM_TimeBaseStructure);
 103              		.loc 1 31 0
 104 00a6 07F10C03 		add	r3, r7, #12
 105 00aa 4FF45050 		mov	r0, #13312
 106 00ae C4F20100 		movt	r0, 16385
 107 00b2 1946     		mov	r1, r3
 108 00b4 FFF7FEFF 		bl	TIM_TimeBaseInit
  32:../src/encoder.cpp **** 	TIM_Cmd(TIM8, ENABLE);
 109              		.loc 1 32 0
 110 00b8 4FF45050 		mov	r0, #13312
 111 00bc C4F20100 		movt	r0, 16385
 112 00c0 4FF00101 		mov	r1, #1
 113 00c4 FFF7FEFF 		bl	TIM_Cmd
  33:../src/encoder.cpp **** 
  34:../src/encoder.cpp **** 	TIM_SetCounter(TIM8, 0);
 114              		.loc 1 34 0
 115 00c8 4FF45050 		mov	r0, #13312
 116 00cc C4F20100 		movt	r0, 16385
 117 00d0 4FF00001 		mov	r1, #0
 118 00d4 FFF7FEFF 		bl	TIM_SetCounter
 119              	.LBE2:
  35:../src/encoder.cpp **** }
 120              		.loc 1 35 0
 121 00d8 07F11807 		add	r7, r7, #24
 122 00dc BD46     		mov	sp, r7
 123 00de 80BD     		pop	{r7, pc}
 124              		.cfi_endproc
 125              	.LFE111:
 127              		.align	2
 128              		.global	_Z17TIM2_init_encoderv
 129              		.thumb
 130              		.thumb_func
 132              	_Z17TIM2_init_encoderv:
 133              	.LFB112:
  36:../src/encoder.cpp **** 
  37:../src/encoder.cpp **** void TIM2_init_encoder(void) // PA0, PA1 -> TIM2 CH1 and CH2 mappings:
  38:../src/encoder.cpp **** {
 134              		.loc 1 38 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 24
 137              		@ frame_needed = 1, uses_anonymous_args = 0
 138 00e0 80B5     		push	{r7, lr}
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 7, -8
 142              		.cfi_offset 14, -4
 143 00e2 86B0     		sub	sp, sp, #24
 144              	.LCFI4:
 145              		.cfi_def_cfa_offset 32
 146 00e4 00AF     		add	r7, sp, #0
 147              	.LCFI5:
 148              		.cfi_def_cfa_register 7
 149              	.LBB3:
  39:../src/encoder.cpp **** 	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
  40:../src/encoder.cpp **** 	GPIO_InitTypeDef GPIO_InitStructure;
  41:../src/encoder.cpp **** 
  42:../src/encoder.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
 150              		.loc 1 42 0
 151 00e6 4FF40030 		mov	r0, #131072
 152 00ea 4FF00101 		mov	r1, #1
 153 00ee FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
  43:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1;
 154              		.loc 1 43 0
 155 00f2 4FF00303 		mov	r3, #3
 156 00f6 7B60     		str	r3, [r7, #4]
  44:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 157              		.loc 1 44 0
 158 00f8 4FF00203 		mov	r3, #2
 159 00fc 3B72     		strb	r3, [r7, #8]
  45:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 160              		.loc 1 45 0
 161 00fe 4FF00003 		mov	r3, #0
 162 0102 BB72     		strb	r3, [r7, #10]
  46:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 163              		.loc 1 46 0
 164 0104 4FF00303 		mov	r3, #3
 165 0108 7B72     		strb	r3, [r7, #9]
  47:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 166              		.loc 1 47 0
 167 010a 4FF00003 		mov	r3, #0
 168 010e FB72     		strb	r3, [r7, #11]
  48:../src/encoder.cpp **** 	GPIO_Init(GPIOA, &GPIO_InitStructure);
 169              		.loc 1 48 0
 170 0110 07F10403 		add	r3, r7, #4
 171 0114 4FF09040 		mov	r0, #1207959552
 172 0118 1946     		mov	r1, r3
 173 011a FFF7FEFF 		bl	GPIO_Init
  49:../src/encoder.cpp **** 
  50:../src/encoder.cpp **** 	GPIO_PinAFConfig(GPIOA, GPIO_PinSource0, GPIO_AF_1);
 174              		.loc 1 50 0
 175 011e 4FF09040 		mov	r0, #1207959552
 176 0122 4FF00001 		mov	r1, #0
 177 0126 4FF00102 		mov	r2, #1
 178 012a FFF7FEFF 		bl	GPIO_PinAFConfig
  51:../src/encoder.cpp **** 	GPIO_PinAFConfig(GPIOA, GPIO_PinSource1, GPIO_AF_1);
 179              		.loc 1 51 0
 180 012e 4FF09040 		mov	r0, #1207959552
 181 0132 4FF00101 		mov	r1, #1
 182 0136 4FF00102 		mov	r2, #1
 183 013a FFF7FEFF 		bl	GPIO_PinAFConfig
  52:../src/encoder.cpp **** 
  53:../src/encoder.cpp **** 	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
 184              		.loc 1 53 0
 185 013e 4FF00100 		mov	r0, #1
 186 0142 4FF00101 		mov	r1, #1
 187 0146 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
  54:../src/encoder.cpp **** 	TIM_TimeBaseStructure.TIM_Period = 0xFFFFFFFF;
 188              		.loc 1 54 0
 189 014a 4FF0FF33 		mov	r3, #-1
 190 014e 3B61     		str	r3, [r7, #16]
  55:../src/encoder.cpp **** 	TIM_TimeBaseStructure.TIM_Prescaler = 0;
 191              		.loc 1 55 0
 192 0150 4FF00003 		mov	r3, #0
 193 0154 BB81     		strh	r3, [r7, #12]	@ movhi
  56:../src/encoder.cpp **** 	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
 194              		.loc 1 56 0
 195 0156 4FF00003 		mov	r3, #0
 196 015a BB82     		strh	r3, [r7, #20]	@ movhi
  57:../src/encoder.cpp **** 	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
 197              		.loc 1 57 0
 198 015c 4FF00003 		mov	r3, #0
 199 0160 FB81     		strh	r3, [r7, #14]	@ movhi
  58:../src/encoder.cpp **** 	TIM_EncoderInterfaceConfig(TIM2,TIM_EncoderMode_TI12,TIM_ICPolarity_Falling,
  59:../src/encoder.cpp **** 	TIM_ICPolarity_Falling);
 200              		.loc 1 59 0
 201 0162 4FF08040 		mov	r0, #1073741824
 202 0166 4FF00301 		mov	r1, #3
 203 016a 4FF00202 		mov	r2, #2
 204 016e 4FF00203 		mov	r3, #2
 205 0172 FFF7FEFF 		bl	TIM_EncoderInterfaceConfig
  60:../src/encoder.cpp **** 	TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
 206              		.loc 1 60 0
 207 0176 07F10C03 		add	r3, r7, #12
 208 017a 4FF08040 		mov	r0, #1073741824
 209 017e 1946     		mov	r1, r3
 210 0180 FFF7FEFF 		bl	TIM_TimeBaseInit
  61:../src/encoder.cpp **** 	TIM_Cmd(TIM2, ENABLE);
 211              		.loc 1 61 0
 212 0184 4FF08040 		mov	r0, #1073741824
 213 0188 4FF00101 		mov	r1, #1
 214 018c FFF7FEFF 		bl	TIM_Cmd
  62:../src/encoder.cpp **** 
  63:../src/encoder.cpp **** 	TIM_SetCounter(TIM2, 0);
 215              		.loc 1 63 0
 216 0190 4FF08040 		mov	r0, #1073741824
 217 0194 4FF00001 		mov	r1, #0
 218 0198 FFF7FEFF 		bl	TIM_SetCounter
 219              	.LBE3:
  64:../src/encoder.cpp **** }
 220              		.loc 1 64 0
 221 019c 07F11807 		add	r7, r7, #24
 222 01a0 BD46     		mov	sp, r7
 223 01a2 80BD     		pop	{r7, pc}
 224              		.cfi_endproc
 225              	.LFE112:
 227              		.align	2
 228              		.global	_Z17TIM4_init_encoderv
 229              		.thumb
 230              		.thumb_func
 232              	_Z17TIM4_init_encoderv:
 233              	.LFB113:
  65:../src/encoder.cpp **** 
  66:../src/encoder.cpp **** void TIM4_init_encoder(void)
  67:../src/encoder.cpp **** {
 234              		.loc 1 67 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 24
 237              		@ frame_needed = 1, uses_anonymous_args = 0
 238 01a4 80B5     		push	{r7, lr}
 239              	.LCFI6:
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 7, -8
 242              		.cfi_offset 14, -4
 243 01a6 86B0     		sub	sp, sp, #24
 244              	.LCFI7:
 245              		.cfi_def_cfa_offset 32
 246 01a8 00AF     		add	r7, sp, #0
 247              	.LCFI8:
 248              		.cfi_def_cfa_register 7
 249              	.LBB4:
  68:../src/encoder.cpp **** 	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
  69:../src/encoder.cpp **** 	GPIO_InitTypeDef GPIO_InitStructure;
  70:../src/encoder.cpp **** 
  71:../src/encoder.cpp **** 	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOD, ENABLE);
 250              		.loc 1 71 0
 251 01aa 4FF48010 		mov	r0, #1048576
 252 01ae 4FF00101 		mov	r1, #1
 253 01b2 FFF7FEFF 		bl	RCC_AHBPeriphClockCmd
  72:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12 | GPIO_Pin_13;
 254              		.loc 1 72 0
 255 01b6 4FF44053 		mov	r3, #12288
 256 01ba 7B60     		str	r3, [r7, #4]
  73:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 257              		.loc 1 73 0
 258 01bc 4FF00203 		mov	r3, #2
 259 01c0 3B72     		strb	r3, [r7, #8]
  74:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 260              		.loc 1 74 0
 261 01c2 4FF00003 		mov	r3, #0
 262 01c6 BB72     		strb	r3, [r7, #10]
  75:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 263              		.loc 1 75 0
 264 01c8 4FF00303 		mov	r3, #3
 265 01cc 7B72     		strb	r3, [r7, #9]
  76:../src/encoder.cpp **** 	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 266              		.loc 1 76 0
 267 01ce 4FF00003 		mov	r3, #0
 268 01d2 FB72     		strb	r3, [r7, #11]
  77:../src/encoder.cpp **** 	GPIO_Init(GPIOD, &GPIO_InitStructure);
 269              		.loc 1 77 0
 270 01d4 07F10403 		add	r3, r7, #4
 271 01d8 4FF44060 		mov	r0, #3072
 272 01dc C4F60000 		movt	r0, 18432
 273 01e0 1946     		mov	r1, r3
 274 01e2 FFF7FEFF 		bl	GPIO_Init
  78:../src/encoder.cpp **** 
  79:../src/encoder.cpp **** 	GPIO_PinAFConfig(GPIOD, GPIO_PinSource12, GPIO_AF_2); //10??
 275              		.loc 1 79 0
 276 01e6 4FF44060 		mov	r0, #3072
 277 01ea C4F60000 		movt	r0, 18432
 278 01ee 4FF00C01 		mov	r1, #12
 279 01f2 4FF00202 		mov	r2, #2
 280 01f6 FFF7FEFF 		bl	GPIO_PinAFConfig
  80:../src/encoder.cpp **** 	GPIO_PinAFConfig(GPIOD, GPIO_PinSource13, GPIO_AF_2); //10??
 281              		.loc 1 80 0
 282 01fa 4FF44060 		mov	r0, #3072
 283 01fe C4F60000 		movt	r0, 18432
 284 0202 4FF00D01 		mov	r1, #13
 285 0206 4FF00202 		mov	r2, #2
 286 020a FFF7FEFF 		bl	GPIO_PinAFConfig
  81:../src/encoder.cpp **** 
  82:../src/encoder.cpp **** 	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);
 287              		.loc 1 82 0
 288 020e 4FF00400 		mov	r0, #4
 289 0212 4FF00101 		mov	r1, #1
 290 0216 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
  83:../src/encoder.cpp **** 	TIM_TimeBaseStructure.TIM_Period = 0xFFFFFFFF;
 291              		.loc 1 83 0
 292 021a 4FF0FF33 		mov	r3, #-1
 293 021e 3B61     		str	r3, [r7, #16]
  84:../src/encoder.cpp **** 	TIM_TimeBaseStructure.TIM_Prescaler = 0;
 294              		.loc 1 84 0
 295 0220 4FF00003 		mov	r3, #0
 296 0224 BB81     		strh	r3, [r7, #12]	@ movhi
  85:../src/encoder.cpp **** 	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
 297              		.loc 1 85 0
 298 0226 4FF00003 		mov	r3, #0
 299 022a BB82     		strh	r3, [r7, #20]	@ movhi
  86:../src/encoder.cpp **** 	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
 300              		.loc 1 86 0
 301 022c 4FF00003 		mov	r3, #0
 302 0230 FB81     		strh	r3, [r7, #14]	@ movhi
  87:../src/encoder.cpp **** 	TIM_EncoderInterfaceConfig(TIM4,TIM_EncoderMode_TI12,TIM_ICPolarity_Falling,
  88:../src/encoder.cpp **** 	TIM_ICPolarity_Falling);
 303              		.loc 1 88 0
 304 0232 4FF40060 		mov	r0, #2048
 305 0236 C4F20000 		movt	r0, 16384
 306 023a 4FF00301 		mov	r1, #3
 307 023e 4FF00202 		mov	r2, #2
 308 0242 4FF00203 		mov	r3, #2
 309 0246 FFF7FEFF 		bl	TIM_EncoderInterfaceConfig
  89:../src/encoder.cpp **** 	TIM_TimeBaseInit(TIM4, &TIM_TimeBaseStructure);
 310              		.loc 1 89 0
 311 024a 07F10C03 		add	r3, r7, #12
 312 024e 4FF40060 		mov	r0, #2048
 313 0252 C4F20000 		movt	r0, 16384
 314 0256 1946     		mov	r1, r3
 315 0258 FFF7FEFF 		bl	TIM_TimeBaseInit
  90:../src/encoder.cpp **** 	TIM_Cmd(TIM4, ENABLE);
 316              		.loc 1 90 0
 317 025c 4FF40060 		mov	r0, #2048
 318 0260 C4F20000 		movt	r0, 16384
 319 0264 4FF00101 		mov	r1, #1
 320 0268 FFF7FEFF 		bl	TIM_Cmd
  91:../src/encoder.cpp **** 
  92:../src/encoder.cpp **** 	TIM_SetCounter(TIM4, 0);
 321              		.loc 1 92 0
 322 026c 4FF40060 		mov	r0, #2048
 323 0270 C4F20000 		movt	r0, 16384
 324 0274 4FF00001 		mov	r1, #0
 325 0278 FFF7FEFF 		bl	TIM_SetCounter
 326              	.LBE4:
  93:../src/encoder.cpp **** }
 327              		.loc 1 93 0
 328 027c 07F11807 		add	r7, r7, #24
 329 0280 BD46     		mov	sp, r7
 330 0282 80BD     		pop	{r7, pc}
 331              		.cfi_endproc
 332              	.LFE113:
 334              		.align	2
 335              		.global	_Z23encoder_update_ISR_initv
 336              		.thumb
 337              		.thumb_func
 339              	_Z23encoder_update_ISR_initv:
 340              	.LFB114:
  94:../src/encoder.cpp **** 
  95:../src/encoder.cpp **** // Initializes the ISR that updates the raw state (position, velocity, acceleration) of each encode
  96:../src/encoder.cpp **** // Interrupt Priority: NEXT-HIGHEST (1)
  97:../src/encoder.cpp **** 
  98:../src/encoder.cpp **** void encoder_update_ISR_init(void)
  99:../src/encoder.cpp **** {
 341              		.loc 1 99 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 16
 344              		@ frame_needed = 1, uses_anonymous_args = 0
 345 0284 80B5     		push	{r7, lr}
 346              	.LCFI9:
 347              		.cfi_def_cfa_offset 8
 348              		.cfi_offset 7, -8
 349              		.cfi_offset 14, -4
 350 0286 84B0     		sub	sp, sp, #16
 351              	.LCFI10:
 352              		.cfi_def_cfa_offset 24
 353 0288 00AF     		add	r7, sp, #0
 354              	.LCFI11:
 355              		.cfi_def_cfa_register 7
 356              	.LBB5:
 100:../src/encoder.cpp **** 	NVIC_InitTypeDef nv;
 101:../src/encoder.cpp **** 	TIM_TimeBaseInitTypeDef TIM7_init;
 102:../src/encoder.cpp **** 
 103:../src/encoder.cpp **** 	nv.NVIC_IRQChannel = TIM7_IRQn;
 357              		.loc 1 103 0
 358 028a 4FF03703 		mov	r3, #55
 359 028e 3B73     		strb	r3, [r7, #12]
 104:../src/encoder.cpp **** 	nv.NVIC_IRQChannelPreemptionPriority = 0;//
 360              		.loc 1 104 0
 361 0290 4FF00003 		mov	r3, #0
 362 0294 7B73     		strb	r3, [r7, #13]
 105:../src/encoder.cpp **** 	nv.NVIC_IRQChannelSubPriority = 0;
 363              		.loc 1 105 0
 364 0296 4FF00003 		mov	r3, #0
 365 029a BB73     		strb	r3, [r7, #14]
 106:../src/encoder.cpp **** 	nv.NVIC_IRQChannelCmd = ENABLE;
 366              		.loc 1 106 0
 367 029c 4FF00103 		mov	r3, #1
 368 02a0 FB73     		strb	r3, [r7, #15]
 107:../src/encoder.cpp **** 
 108:../src/encoder.cpp **** 	NVIC_Init(&nv);
 369              		.loc 1 108 0
 370 02a2 07F10C03 		add	r3, r7, #12
 371 02a6 1846     		mov	r0, r3
 372 02a8 FFF7FEFF 		bl	NVIC_Init
 109:../src/encoder.cpp **** 
 110:../src/encoder.cpp **** 	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM7, ENABLE); //TIM2 on APB1
 373              		.loc 1 110 0
 374 02ac 4FF02000 		mov	r0, #32
 375 02b0 4FF00101 		mov	r1, #1
 376 02b4 FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 111:../src/encoder.cpp **** 
 112:../src/encoder.cpp **** 	/*
 113:../src/encoder.cpp **** 	 * UPDATE_FREQUENCY = TIM_CLK/[(PRESCALER+1)(ARR+1)(REPCOUNTER+1)]
 114:../src/encoder.cpp **** 	 * 	  Prescaler -> PRESCALER
 115:../src/encoder.cpp **** 	 * 	  Period -> ARR
 116:../src/encoder.cpp **** 	 * 	  RepetitionCounter -> REPCOUNTER
 117:../src/encoder.cpp **** 	 */
 118:../src/encoder.cpp **** 
 119:../src/encoder.cpp **** 	TIM7_init.TIM_Period = (10*DT_ENCODER)-1;
 377              		.loc 1 119 0
 378 02b8 4FF0F903 		mov	r3, #249
 379 02bc 7B60     		str	r3, [r7, #4]
 120:../src/encoder.cpp **** 	TIM7_init.TIM_Prescaler = 7199;
 380              		.loc 1 120 0
 381 02be 41F61F43 		movw	r3, #7199
 382 02c2 3B80     		strh	r3, [r7, #0]	@ movhi
 121:../src/encoder.cpp **** 	TIM7_init.TIM_RepetitionCounter = 0;
 383              		.loc 1 121 0
 384 02c4 4FF00003 		mov	r3, #0
 385 02c8 BB72     		strb	r3, [r7, #10]
 122:../src/encoder.cpp **** 	TIM7_init.TIM_ClockDivision = 0;
 386              		.loc 1 122 0
 387 02ca 4FF00003 		mov	r3, #0
 388 02ce 3B81     		strh	r3, [r7, #8]	@ movhi
 123:../src/encoder.cpp **** 	TIM7_init.TIM_CounterMode = TIM_CounterMode_Up;
 389              		.loc 1 123 0
 390 02d0 4FF00003 		mov	r3, #0
 391 02d4 7B80     		strh	r3, [r7, #2]	@ movhi
 124:../src/encoder.cpp **** 
 125:../src/encoder.cpp **** 	TIM_TimeBaseInit(TIM7, &TIM7_init);
 392              		.loc 1 125 0
 393 02d6 3B46     		mov	r3, r7
 394 02d8 4FF4A050 		mov	r0, #5120
 395 02dc C4F20000 		movt	r0, 16384
 396 02e0 1946     		mov	r1, r3
 397 02e2 FFF7FEFF 		bl	TIM_TimeBaseInit
 126:../src/encoder.cpp **** 
 127:../src/encoder.cpp **** 	TIM_ITConfig(TIM7, TIM_IT_Update, ENABLE);
 398              		.loc 1 127 0
 399 02e6 4FF4A050 		mov	r0, #5120
 400 02ea C4F20000 		movt	r0, 16384
 401 02ee 4FF00101 		mov	r1, #1
 402 02f2 4FF00102 		mov	r2, #1
 403 02f6 FFF7FEFF 		bl	TIM_ITConfig
 128:../src/encoder.cpp **** 	TIM_Cmd(TIM7, ENABLE);
 404              		.loc 1 128 0
 405 02fa 4FF4A050 		mov	r0, #5120
 406 02fe C4F20000 		movt	r0, 16384
 407 0302 4FF00101 		mov	r1, #1
 408 0306 FFF7FEFF 		bl	TIM_Cmd
 409              	.LBE5:
 129:../src/encoder.cpp **** 
 130:../src/encoder.cpp **** }
 410              		.loc 1 130 0
 411 030a 07F11007 		add	r7, r7, #16
 412 030e BD46     		mov	sp, r7
 413 0310 80BD     		pop	{r7, pc}
 414              		.cfi_endproc
 415              	.LFE114:
 417 0312 00BF     		.align	2
 418              		.global	_Z19init_encoder_structP12encoderState
 419              		.thumb
 420              		.thumb_func
 422              	_Z19init_encoder_structP12encoderState:
 423              	.LFB115:
 131:../src/encoder.cpp **** void init_encoder_struct(encoderState* enc)
 132:../src/encoder.cpp **** {
 424              		.loc 1 132 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 8
 427              		@ frame_needed = 1, uses_anonymous_args = 0
 428              		@ link register save eliminated.
 429 0314 80B4     		push	{r7}
 430              	.LCFI12:
 431              		.cfi_def_cfa_offset 4
 432              		.cfi_offset 7, -4
 433 0316 83B0     		sub	sp, sp, #12
 434              	.LCFI13:
 435              		.cfi_def_cfa_offset 16
 436 0318 00AF     		add	r7, sp, #0
 437              	.LCFI14:
 438              		.cfi_def_cfa_register 7
 439 031a 7860     		str	r0, [r7, #4]
 133:../src/encoder.cpp **** 	enc->position = 0;
 440              		.loc 1 133 0
 441 031c 7B68     		ldr	r3, [r7, #4]
 442 031e 4FF00002 		mov	r2, #0
 443 0322 1A60     		str	r2, [r3, #0]
 134:../src/encoder.cpp **** 	enc->speed = 0;
 444              		.loc 1 134 0
 445 0324 7B68     		ldr	r3, [r7, #4]
 446 0326 4FF00002 		mov	r2, #0
 447 032a 5A60     		str	r2, [r3, #4]	@ float
 135:../src/encoder.cpp **** 	enc->acceleration = 0;
 448              		.loc 1 135 0
 449 032c 7B68     		ldr	r3, [r7, #4]
 450 032e 4FF00002 		mov	r2, #0
 451 0332 9A60     		str	r2, [r3, #8]	@ float
 136:../src/encoder.cpp **** 	enc->m = MODE_OPENLOOP;
 452              		.loc 1 136 0
 453 0334 7B68     		ldr	r3, [r7, #4]
 454 0336 4FF00002 		mov	r2, #0
 455 033a 83F82420 		strb	r2, [r3, #36]
 137:../src/encoder.cpp **** 	enc->integral = 0;
 456              		.loc 1 137 0
 457 033e 7B68     		ldr	r3, [r7, #4]
 458 0340 4FF00002 		mov	r2, #0
 459 0344 5A61     		str	r2, [r3, #20]
 138:../src/encoder.cpp **** 	enc->position_target = 0;
 460              		.loc 1 138 0
 461 0346 7B68     		ldr	r3, [r7, #4]
 462 0348 4FF00002 		mov	r2, #0
 463 034c DA60     		str	r2, [r3, #12]
 139:../src/encoder.cpp **** 	enc->speed_target = 0;
 464              		.loc 1 139 0
 465 034e 7B68     		ldr	r3, [r7, #4]
 466 0350 4FF00002 		mov	r2, #0
 467 0354 1A61     		str	r2, [r3, #16]	@ float
 140:../src/encoder.cpp **** 	enc->last_error = 0;
 468              		.loc 1 140 0
 469 0356 7B68     		ldr	r3, [r7, #4]
 470 0358 4FF00002 		mov	r2, #0
 471 035c 9A61     		str	r2, [r3, #24]
 141:../src/encoder.cpp **** 	enc->last_speed_error = 0;
 472              		.loc 1 141 0
 473 035e 7B68     		ldr	r3, [r7, #4]
 474 0360 4FF00002 		mov	r2, #0
 475 0364 DA61     		str	r2, [r3, #28]	@ float
 142:../src/encoder.cpp **** 	enc->vel_cmd = 0.5f;
 476              		.loc 1 142 0
 477 0366 7B68     		ldr	r3, [r7, #4]
 478 0368 4FF07C52 		mov	r2, #1056964608
 479 036c 1A62     		str	r2, [r3, #32]	@ float
 143:../src/encoder.cpp **** }
 480              		.loc 1 143 0
 481 036e 07F10C07 		add	r7, r7, #12
 482 0372 BD46     		mov	sp, r7
 483 0374 80BC     		pop	{r7}
 484 0376 7047     		bx	lr
 485              		.cfi_endproc
 486              	.LFE115:
 488              	.Letext0:
 489              		.file 2 "/home/aghosh01/gcc-arm-none-eabi-4_7-2012q4/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../.
 490              		.file 3 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x.h"
 491              		.file 4 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x_gpio.h"
 492              		.file 5 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x_tim.h"
 493              		.file 6 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x_misc.h"
 494              		.file 7 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/Robot/encoder.h"
 495              		.file 8 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 encoder.cpp
     /tmp/ccVBFbUH.s:19     .text:00000000 $t
     /tmp/ccVBFbUH.s:24     .text:00000000 _Z17TIM8_init_encoderv
     /tmp/ccVBFbUH.s:132    .text:000000e0 _Z17TIM2_init_encoderv
     /tmp/ccVBFbUH.s:232    .text:000001a4 _Z17TIM4_init_encoderv
     /tmp/ccVBFbUH.s:339    .text:00000284 _Z23encoder_update_ISR_initv
     /tmp/ccVBFbUH.s:422    .text:00000314 _Z19init_encoder_structP12encoderState
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.934603b1d669cb2b32fd4cb6dd11b673
                           .group:00000000 wm4.common_headers.h.9.a77b7af68303fe0609f9dd844a078e2a
                           .group:00000000 wm4.stm32f30x.h.56.6f19c65e98e3319a61449cb2b2455af5
                           .group:00000000 wm4.core_cm4.h.32.1434cd257ff5806b1b03cd32ab0641e9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.29.013e5bcf58dba2d27c60184174208e07
                           .group:00000000 wm4.core_cm4.h.155.170ad2f92df387b9fa0dc3deabd34ef9
                           .group:00000000 wm4.stm32f30x.h.294.d8a54360eca16e4157694b52a095202d
                           .group:00000000 wm4.stm32f30x_adc.h.130.cbebad91f78fb87381fe0860eea6104e
                           .group:00000000 wm4.stm32f30x_can.h.50.8b8f5d301152c422a6e50622b33ef620
                           .group:00000000 wm4.stm32f30x_crc.h.54.66d4c5e565e18566aebd9abfd4bcd4b0
                           .group:00000000 wm4.stm32f30x_comp.h.91.06ae44150aaaa82c077b71df8db3541a
                           .group:00000000 wm4.stm32f30x_dac.h.49.b1b5b26e4ca241dbe67fa16dc86a615f
                           .group:00000000 wm4.stm32f30x_dbgmcu.h.53.b238a263ce6a2cc83f610cc35302a38b
                           .group:00000000 wm4.stm32f30x_dma.h.96.d7a2ddd10023e12781aa8ff5ac15d212
                           .group:00000000 wm4.stm32f30x_exti.h.60.8ca0809491a21dec6fc69cf7471e2bab
                           .group:00000000 wm4.stm32f30x_flash.h.70.32613455dfe7328932f786a224daac23
                           .group:00000000 wm4.stm32f30x_gpio.h.50.408e1f6250246e4cc28221970909d34c
                           .group:00000000 wm4.stm32f30x_syscfg.h.58.4cadeb4ec8e47d36b972bbb6b96b7161
                           .group:00000000 wm4.stm32f30x_i2c.h.86.3d51d4edc0e3b9ee9aae045ccbb7739a
                           .group:00000000 wm4.stm32f30x_iwdg.h.59.467d704fb073a015941f19b50fa6470a
                           .group:00000000 wm4.stm32f30x_opamp.h.75.704e2e5e2aab039de307aaa2dcc99fa5
                           .group:00000000 wm4.stm32f30x_pwr.h.59.5c85acff2a3e3c5085b2140c06025cfc
                           .group:00000000 wm4.stm32f30x_rcc.h.79.5ba7cac1e74879861a72556c25322aa4
                           .group:00000000 wm4.stm32f30x_rtc.h.133.d184e08ff40bda44db4bed94f9633384
                           .group:00000000 wm4.stm32f30x_spi.h.119.4d21ec94ec14f3553a127e61c0a9874f
                           .group:00000000 wm4.stm32f30x_tim.h.175.d4a93cff2e7924577147254e501271b6
                           .group:00000000 wm4.stm32f30x_usart.h.110.c89016273702821ff4f9fe43881f70b5
                           .group:00000000 wm4.stm32f30x_wwdg.h.58.4688eee61a2709866472b4b4c07d9275
                           .group:00000000 wm4.stm32f30x_misc.h.113.6a52e4fe7c3825a3ab05990f30dddf92
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.fa6206289f154965d075fc01e2867808
                           .group:00000000 wm4._default_types.h.6.1dbd2e581fd590860c7c17f21d147e91
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.349.31f4c5baff3fa2689010b32028da9c47
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.math.h.35.4ec5c5df469deeb27bddb969fc54c06a
                           .group:00000000 wm4.encoder.h.14.d5e5872c27905990847e2dff40a1b2fe

UNDEFINED SYMBOLS
RCC_AHBPeriphClockCmd
GPIO_Init
GPIO_PinAFConfig
RCC_APB2PeriphClockCmd
TIM_EncoderInterfaceConfig
TIM_TimeBaseInit
TIM_Cmd
TIM_SetCounter
RCC_APB1PeriphClockCmd
NVIC_Init
TIM_ITConfig
