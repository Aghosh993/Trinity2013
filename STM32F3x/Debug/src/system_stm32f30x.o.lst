   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"system_stm32f30x.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	SystemCoreClock
  20              		.data
  21              		.align	2
  24              	SystemCoreClock:
  25 0000 00A24A04 		.word	72000000
  26              		.global	AHBPrescTable
  27              		.align	2
  30              	AHBPrescTable:
  31 0004 00       		.byte	0
  32 0005 00       		.byte	0
  33 0006 00       		.byte	0
  34 0007 00       		.byte	0
  35 0008 00       		.byte	0
  36 0009 00       		.byte	0
  37 000a 00       		.byte	0
  38 000b 00       		.byte	0
  39 000c 01       		.byte	1
  40 000d 02       		.byte	2
  41 000e 03       		.byte	3
  42 000f 04       		.byte	4
  43 0010 06       		.byte	6
  44 0011 07       		.byte	7
  45 0012 08       		.byte	8
  46 0013 09       		.byte	9
  47              		.text
  48              		.align	2
  49              		.global	SystemInit
  50              		.thumb
  51              		.thumb_func
  53              	SystemInit:
  54              	.LFB111:
  55              		.file 1 "../src/system_stm32f30x.c"
   1:../src/system_stm32f30x.c **** /**
   2:../src/system_stm32f30x.c ****   ******************************************************************************
   3:../src/system_stm32f30x.c ****   * @file    system_stm32f30x.c
   4:../src/system_stm32f30x.c ****   * @author  MCD Application Team
   5:../src/system_stm32f30x.c ****   * @version V1.0.0
   6:../src/system_stm32f30x.c ****   * @date    23-October-2012
   7:../src/system_stm32f30x.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   8:../src/system_stm32f30x.c ****   *          This file contains the system clock configuration for STM32F30x devices,
   9:../src/system_stm32f30x.c ****   *          and is generated by the clock configuration tool
  10:../src/system_stm32f30x.c ****   *          stm32f30x_Clock_Configuration_V1.0.0.xls
  11:../src/system_stm32f30x.c ****   *             
  12:../src/system_stm32f30x.c ****   * 1.  This file provides two functions and one global variable to be called from 
  13:../src/system_stm32f30x.c ****   *     user application:
  14:../src/system_stm32f30x.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  15:../src/system_stm32f30x.c ****   *                      and Divider factors, AHB/APBx prescalers and Flash settings),
  16:../src/system_stm32f30x.c ****   *                      depending on the configuration made in the clock xls tool. 
  17:../src/system_stm32f30x.c ****   *                      This function is called at startup just after reset and 
  18:../src/system_stm32f30x.c ****   *                      before branch to main program. This call is made inside
  19:../src/system_stm32f30x.c ****   *                      the "startup_stm32f30x.s" file.
  20:../src/system_stm32f30x.c ****   *
  21:../src/system_stm32f30x.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  22:../src/system_stm32f30x.c ****   *                                  by the user application to setup the SysTick 
  23:../src/system_stm32f30x.c ****   *                                  timer or configure other parameters.
  24:../src/system_stm32f30x.c ****   *                                     
  25:../src/system_stm32f30x.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  26:../src/system_stm32f30x.c ****   *                                 be called whenever the core clock is changed
  27:../src/system_stm32f30x.c ****   *                                 during program execution.
  28:../src/system_stm32f30x.c ****   *
  29:../src/system_stm32f30x.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  30:../src/system_stm32f30x.c ****   *    Then SystemInit() function is called, in "startup_stm32f30x.s" file, to
  31:../src/system_stm32f30x.c ****   *    configure the system clock before to branch to main program.
  32:../src/system_stm32f30x.c ****   *
  33:../src/system_stm32f30x.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  34:../src/system_stm32f30x.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  35:../src/system_stm32f30x.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  36:../src/system_stm32f30x.c ****   *
  37:../src/system_stm32f30x.c ****   * 4. The default value of HSE crystal is set to 8MHz, refer to "HSE_VALUE" define
  38:../src/system_stm32f30x.c ****   *    in "stm32f30x.h" file. When HSE is used as system clock source, directly or
  39:../src/system_stm32f30x.c ****   *    through PLL, and you are using different crystal you have to adapt the HSE
  40:../src/system_stm32f30x.c ****   *    value to your own configuration.
  41:../src/system_stm32f30x.c ****   *
  42:../src/system_stm32f30x.c ****   * 5. This file configures the system clock as follows:
  43:../src/system_stm32f30x.c ****   *=============================================================================
  44:../src/system_stm32f30x.c ****   *                         Supported STM32F30x device                          
  45:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  46:../src/system_stm32f30x.c ****   *        System Clock source                    | PLL (HSE)
  47:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  48:../src/system_stm32f30x.c ****   *        SYSCLK(Hz)                             | 72000000
  49:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  50:../src/system_stm32f30x.c ****   *        HCLK(Hz)                               | 72000000
  51:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  52:../src/system_stm32f30x.c ****   *        AHB Prescaler                          | 1
  53:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  54:../src/system_stm32f30x.c ****   *        APB2 Prescaler                         | 1
  55:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  56:../src/system_stm32f30x.c ****   *        APB1 Prescaler                         | 2
  57:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  58:../src/system_stm32f30x.c ****   *        HSE Frequency(Hz)                      | 8000000
  59:../src/system_stm32f30x.c ****   *----------------------------------------------------------------------------
  60:../src/system_stm32f30x.c ****   *        PLLMUL                                 | 9
  61:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  62:../src/system_stm32f30x.c ****   *        PREDIV                                 | 1
  63:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  64:../src/system_stm32f30x.c ****   *        USB Clock                              | DISABLE
  65:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  66:../src/system_stm32f30x.c ****   *        Flash Latency(WS)                      | 2
  67:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  68:../src/system_stm32f30x.c ****   *        Prefetch Buffer                        | ON
  69:../src/system_stm32f30x.c ****   *-----------------------------------------------------------------------------
  70:../src/system_stm32f30x.c ****   *=============================================================================
  71:../src/system_stm32f30x.c ****   ******************************************************************************
  72:../src/system_stm32f30x.c ****   * @attention
  73:../src/system_stm32f30x.c ****   *
  74:../src/system_stm32f30x.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  75:../src/system_stm32f30x.c ****   *
  76:../src/system_stm32f30x.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  77:../src/system_stm32f30x.c ****   * You may not use this file except in compliance with the License.
  78:../src/system_stm32f30x.c ****   * You may obtain a copy of the License at:
  79:../src/system_stm32f30x.c ****   *
  80:../src/system_stm32f30x.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  81:../src/system_stm32f30x.c ****   *
  82:../src/system_stm32f30x.c ****   * Unless required by applicable law or agreed to in writing, software 
  83:../src/system_stm32f30x.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  84:../src/system_stm32f30x.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  85:../src/system_stm32f30x.c ****   * See the License for the specific language governing permissions and
  86:../src/system_stm32f30x.c ****   * limitations under the License.
  87:../src/system_stm32f30x.c ****   *
  88:../src/system_stm32f30x.c ****   ******************************************************************************
  89:../src/system_stm32f30x.c ****   */
  90:../src/system_stm32f30x.c **** /** @addtogroup CMSIS
  91:../src/system_stm32f30x.c ****   * @{
  92:../src/system_stm32f30x.c ****   */
  93:../src/system_stm32f30x.c **** 
  94:../src/system_stm32f30x.c **** /** @addtogroup stm32f30x_system
  95:../src/system_stm32f30x.c ****   * @{
  96:../src/system_stm32f30x.c ****   */  
  97:../src/system_stm32f30x.c ****   
  98:../src/system_stm32f30x.c **** /** @addtogroup STM32F30x_System_Private_Includes
  99:../src/system_stm32f30x.c ****   * @{
 100:../src/system_stm32f30x.c ****   */
 101:../src/system_stm32f30x.c **** 
 102:../src/system_stm32f30x.c **** #include "stm32f30x.h"
 103:../src/system_stm32f30x.c **** 
 104:../src/system_stm32f30x.c **** /**
 105:../src/system_stm32f30x.c ****   * @}
 106:../src/system_stm32f30x.c ****   */
 107:../src/system_stm32f30x.c **** 
 108:../src/system_stm32f30x.c **** /** @addtogroup STM32F30x_System_Private_TypesDefinitions
 109:../src/system_stm32f30x.c ****   * @{
 110:../src/system_stm32f30x.c ****   */
 111:../src/system_stm32f30x.c **** 
 112:../src/system_stm32f30x.c **** /**
 113:../src/system_stm32f30x.c ****   * @}
 114:../src/system_stm32f30x.c ****   */
 115:../src/system_stm32f30x.c **** 
 116:../src/system_stm32f30x.c **** /** @addtogroup STM32F30x_System_Private_Defines
 117:../src/system_stm32f30x.c ****   * @{
 118:../src/system_stm32f30x.c ****   */
 119:../src/system_stm32f30x.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 120:../src/system_stm32f30x.c ****      Internal SRAM. */ 
 121:../src/system_stm32f30x.c **** /* #define VECT_TAB_SRAM */
 122:../src/system_stm32f30x.c **** #define VECT_TAB_OFFSET  0x0 /*!< Vector Table base offset field. 
 123:../src/system_stm32f30x.c ****                                   This value must be a multiple of 0x200. */  
 124:../src/system_stm32f30x.c **** /**
 125:../src/system_stm32f30x.c ****   * @}
 126:../src/system_stm32f30x.c ****   */ 
 127:../src/system_stm32f30x.c **** 
 128:../src/system_stm32f30x.c **** /** @addtogroup STM32F30x_System_Private_Macros
 129:../src/system_stm32f30x.c ****   * @{
 130:../src/system_stm32f30x.c ****   */
 131:../src/system_stm32f30x.c **** 
 132:../src/system_stm32f30x.c **** /**
 133:../src/system_stm32f30x.c ****   * @}
 134:../src/system_stm32f30x.c ****   */
 135:../src/system_stm32f30x.c **** 
 136:../src/system_stm32f30x.c **** /** @addtogroup STM32F30x_System_Private_Variables
 137:../src/system_stm32f30x.c ****   * @{
 138:../src/system_stm32f30x.c ****   */
 139:../src/system_stm32f30x.c **** 
 140:../src/system_stm32f30x.c ****   uint32_t SystemCoreClock = 72000000;
 141:../src/system_stm32f30x.c **** 
 142:../src/system_stm32f30x.c ****   __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 143:../src/system_stm32f30x.c **** 
 144:../src/system_stm32f30x.c **** /**
 145:../src/system_stm32f30x.c ****   * @}
 146:../src/system_stm32f30x.c ****   */
 147:../src/system_stm32f30x.c **** 
 148:../src/system_stm32f30x.c **** /** @addtogroup STM32F30x_System_Private_FunctionPrototypes
 149:../src/system_stm32f30x.c ****   * @{
 150:../src/system_stm32f30x.c ****   */
 151:../src/system_stm32f30x.c **** 
 152:../src/system_stm32f30x.c **** static void SetSysClock(void);
 153:../src/system_stm32f30x.c **** 
 154:../src/system_stm32f30x.c **** /**
 155:../src/system_stm32f30x.c ****   * @}
 156:../src/system_stm32f30x.c ****   */
 157:../src/system_stm32f30x.c **** 
 158:../src/system_stm32f30x.c **** /** @addtogroup STM32F30x_System_Private_Functions
 159:../src/system_stm32f30x.c ****   * @{
 160:../src/system_stm32f30x.c ****   */
 161:../src/system_stm32f30x.c **** 
 162:../src/system_stm32f30x.c **** /**
 163:../src/system_stm32f30x.c ****   * @brief  Setup the microcontroller system
 164:../src/system_stm32f30x.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 165:../src/system_stm32f30x.c ****   *         SystemFrequency variable.
 166:../src/system_stm32f30x.c ****   * @param  None
 167:../src/system_stm32f30x.c ****   * @retval None
 168:../src/system_stm32f30x.c ****   */
 169:../src/system_stm32f30x.c **** void SystemInit(void)
 170:../src/system_stm32f30x.c **** {
  56              		.loc 1 170 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 1, uses_anonymous_args = 0
  60 0000 80B5     		push	{r7, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 7, -8
  64              		.cfi_offset 14, -4
  65 0002 00AF     		add	r7, sp, #0
  66              	.LCFI1:
  67              		.cfi_def_cfa_register 7
 171:../src/system_stm32f30x.c ****   /* FPU settings ------------------------------------------------------------*/
 172:../src/system_stm32f30x.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 173:../src/system_stm32f30x.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  68              		.loc 1 173 0
  69 0004 4FF46D43 		mov	r3, #60672
  70 0008 CEF20003 		movt	r3, 57344
  71 000c 4FF46D42 		mov	r2, #60672
  72 0010 CEF20002 		movt	r2, 57344
  73 0014 D2F88820 		ldr	r2, [r2, #136]
  74 0018 42F47002 		orr	r2, r2, #15728640
  75 001c C3F88820 		str	r2, [r3, #136]
 174:../src/system_stm32f30x.c ****   #endif
 175:../src/system_stm32f30x.c **** 
 176:../src/system_stm32f30x.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 177:../src/system_stm32f30x.c ****   /* Set HSION bit */
 178:../src/system_stm32f30x.c ****   RCC->CR |= (uint32_t)0x00000001;
  76              		.loc 1 178 0
  77 0020 4FF48053 		mov	r3, #4096
  78 0024 C4F20203 		movt	r3, 16386
  79 0028 4FF48052 		mov	r2, #4096
  80 002c C4F20202 		movt	r2, 16386
  81 0030 1268     		ldr	r2, [r2, #0]
  82 0032 42F00102 		orr	r2, r2, #1
  83 0036 1A60     		str	r2, [r3, #0]
 179:../src/system_stm32f30x.c **** 
 180:../src/system_stm32f30x.c ****   /* Reset CFGR register */
 181:../src/system_stm32f30x.c ****   RCC->CFGR &= 0xF87FC00C;
  84              		.loc 1 181 0
  85 0038 4FF48052 		mov	r2, #4096
  86 003c C4F20202 		movt	r2, 16386
  87 0040 4FF48053 		mov	r3, #4096
  88 0044 C4F20203 		movt	r3, 16386
  89 0048 5968     		ldr	r1, [r3, #4]
  90 004a 4CF20C03 		movw	r3, #49164
  91 004e CFF67F03 		movt	r3, 63615
  92 0052 0B40     		ands	r3, r3, r1
  93 0054 5360     		str	r3, [r2, #4]
 182:../src/system_stm32f30x.c **** 
 183:../src/system_stm32f30x.c ****   /* Reset HSEON, CSSON and PLLON bits */
 184:../src/system_stm32f30x.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  94              		.loc 1 184 0
  95 0056 4FF48053 		mov	r3, #4096
  96 005a C4F20203 		movt	r3, 16386
  97 005e 4FF48052 		mov	r2, #4096
  98 0062 C4F20202 		movt	r2, 16386
  99 0066 1268     		ldr	r2, [r2, #0]
 100 0068 22F08472 		bic	r2, r2, #17301504
 101 006c 22F48032 		bic	r2, r2, #65536
 102 0070 1A60     		str	r2, [r3, #0]
 185:../src/system_stm32f30x.c **** 
 186:../src/system_stm32f30x.c ****   /* Reset HSEBYP bit */
 187:../src/system_stm32f30x.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 103              		.loc 1 187 0
 104 0072 4FF48053 		mov	r3, #4096
 105 0076 C4F20203 		movt	r3, 16386
 106 007a 4FF48052 		mov	r2, #4096
 107 007e C4F20202 		movt	r2, 16386
 108 0082 1268     		ldr	r2, [r2, #0]
 109 0084 22F48022 		bic	r2, r2, #262144
 110 0088 1A60     		str	r2, [r3, #0]
 188:../src/system_stm32f30x.c **** 
 189:../src/system_stm32f30x.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE bits */
 190:../src/system_stm32f30x.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
 111              		.loc 1 190 0
 112 008a 4FF48053 		mov	r3, #4096
 113 008e C4F20203 		movt	r3, 16386
 114 0092 4FF48052 		mov	r2, #4096
 115 0096 C4F20202 		movt	r2, 16386
 116 009a 5268     		ldr	r2, [r2, #4]
 117 009c 22F4FE02 		bic	r2, r2, #8323072
 118 00a0 5A60     		str	r2, [r3, #4]
 191:../src/system_stm32f30x.c **** 
 192:../src/system_stm32f30x.c ****   /* Reset PREDIV1[3:0] bits */
 193:../src/system_stm32f30x.c ****   RCC->CFGR2 &= (uint32_t)0xFFFFFFF0;
 119              		.loc 1 193 0
 120 00a2 4FF48053 		mov	r3, #4096
 121 00a6 C4F20203 		movt	r3, 16386
 122 00aa 4FF48052 		mov	r2, #4096
 123 00ae C4F20202 		movt	r2, 16386
 124 00b2 D26A     		ldr	r2, [r2, #44]
 125 00b4 22F00F02 		bic	r2, r2, #15
 126 00b8 DA62     		str	r2, [r3, #44]
 194:../src/system_stm32f30x.c **** 
 195:../src/system_stm32f30x.c ****   /* Reset USARTSW[1:0], I2CSW and TIMs bits */
 196:../src/system_stm32f30x.c ****   RCC->CFGR3 &= (uint32_t)0xFF00FCCC;
 127              		.loc 1 196 0
 128 00ba 4FF48052 		mov	r2, #4096
 129 00be C4F20202 		movt	r2, 16386
 130 00c2 4FF48053 		mov	r3, #4096
 131 00c6 C4F20203 		movt	r3, 16386
 132 00ca 196B     		ldr	r1, [r3, #48]
 133 00cc 4FF6CC43 		movw	r3, #64716
 134 00d0 CFF60073 		movt	r3, 65280
 135 00d4 0B40     		ands	r3, r3, r1
 136 00d6 1363     		str	r3, [r2, #48]
 197:../src/system_stm32f30x.c ****   
 198:../src/system_stm32f30x.c ****   /* Disable all interrupts */
 199:../src/system_stm32f30x.c ****   RCC->CIR = 0x00000000;
 137              		.loc 1 199 0
 138 00d8 4FF48053 		mov	r3, #4096
 139 00dc C4F20203 		movt	r3, 16386
 140 00e0 4FF00002 		mov	r2, #0
 141 00e4 9A60     		str	r2, [r3, #8]
 200:../src/system_stm32f30x.c **** 
 201:../src/system_stm32f30x.c ****   /* Configure the System clock source, PLL Multiplier and Divider factors, 
 202:../src/system_stm32f30x.c ****      AHB/APBx prescalers and Flash settings ----------------------------------*/
 203:../src/system_stm32f30x.c ****   SetSysClock();
 142              		.loc 1 203 0
 143 00e6 00F0A7F8 		bl	SetSysClock
 204:../src/system_stm32f30x.c ****   
 205:../src/system_stm32f30x.c **** #ifdef VECT_TAB_SRAM
 206:../src/system_stm32f30x.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
 207:../src/system_stm32f30x.c **** #else
 208:../src/system_stm32f30x.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 144              		.loc 1 208 0
 145 00ea 4FF46D43 		mov	r3, #60672
 146 00ee CEF20003 		movt	r3, 57344
 147 00f2 4FF00062 		mov	r2, #134217728
 148 00f6 9A60     		str	r2, [r3, #8]
 209:../src/system_stm32f30x.c **** #endif  
 210:../src/system_stm32f30x.c **** }
 149              		.loc 1 210 0
 150 00f8 80BD     		pop	{r7, pc}
 151              		.cfi_endproc
 152              	.LFE111:
 154 00fa 00BF     		.align	2
 155              		.global	SystemCoreClockUpdate
 156              		.thumb
 157              		.thumb_func
 159              	SystemCoreClockUpdate:
 160              	.LFB112:
 211:../src/system_stm32f30x.c **** 
 212:../src/system_stm32f30x.c **** /**
 213:../src/system_stm32f30x.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 214:../src/system_stm32f30x.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 215:../src/system_stm32f30x.c ****   *         be used by the user application to setup the SysTick timer or configure
 216:../src/system_stm32f30x.c ****   *         other parameters.
 217:../src/system_stm32f30x.c ****   *           
 218:../src/system_stm32f30x.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 219:../src/system_stm32f30x.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 220:../src/system_stm32f30x.c ****   *         based on this variable will be incorrect.         
 221:../src/system_stm32f30x.c ****   *     
 222:../src/system_stm32f30x.c ****   * @note   - The system frequency computed by this function is not the real 
 223:../src/system_stm32f30x.c ****   *           frequency in the chip. It is calculated based on the predefined 
 224:../src/system_stm32f30x.c ****   *           constant and the selected clock source:
 225:../src/system_stm32f30x.c ****   *             
 226:../src/system_stm32f30x.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 227:../src/system_stm32f30x.c ****   *                                              
 228:../src/system_stm32f30x.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 229:../src/system_stm32f30x.c ****   *                          
 230:../src/system_stm32f30x.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 231:../src/system_stm32f30x.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 232:../src/system_stm32f30x.c ****   *         
 233:../src/system_stm32f30x.c ****   *         (*) HSI_VALUE is a constant defined in stm32f30x.h file (default value
 234:../src/system_stm32f30x.c ****   *             8 MHz) but the real value may vary depending on the variations
 235:../src/system_stm32f30x.c ****   *             in voltage and temperature.   
 236:../src/system_stm32f30x.c ****   *    
 237:../src/system_stm32f30x.c ****   *         (**) HSE_VALUE is a constant defined in stm32f30x.h file (default value
 238:../src/system_stm32f30x.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 239:../src/system_stm32f30x.c ****   *              frequency of the crystal used. Otherwise, this function may
 240:../src/system_stm32f30x.c ****   *              have wrong result.
 241:../src/system_stm32f30x.c ****   *                
 242:../src/system_stm32f30x.c ****   *         - The result of this function could be not correct when using fractional
 243:../src/system_stm32f30x.c ****   *           value for HSE crystal.
 244:../src/system_stm32f30x.c ****   *     
 245:../src/system_stm32f30x.c ****   * @param  None
 246:../src/system_stm32f30x.c ****   * @retval None
 247:../src/system_stm32f30x.c ****   */
 248:../src/system_stm32f30x.c **** void SystemCoreClockUpdate (void)
 249:../src/system_stm32f30x.c **** {
 161              		.loc 1 249 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 16
 164              		@ frame_needed = 1, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166 00fc 80B4     		push	{r7}
 167              	.LCFI2:
 168              		.cfi_def_cfa_offset 4
 169              		.cfi_offset 7, -4
 170 00fe 85B0     		sub	sp, sp, #20
 171              	.LCFI3:
 172              		.cfi_def_cfa_offset 24
 173 0100 00AF     		add	r7, sp, #0
 174              	.LCFI4:
 175              		.cfi_def_cfa_register 7
 250:../src/system_stm32f30x.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, prediv1factor = 0;
 176              		.loc 1 250 0
 177 0102 4FF00003 		mov	r3, #0
 178 0106 FB60     		str	r3, [r7, #12]
 179 0108 4FF00003 		mov	r3, #0
 180 010c BB60     		str	r3, [r7, #8]
 181 010e 4FF00003 		mov	r3, #0
 182 0112 7B60     		str	r3, [r7, #4]
 183 0114 4FF00003 		mov	r3, #0
 184 0118 3B60     		str	r3, [r7, #0]
 251:../src/system_stm32f30x.c **** 
 252:../src/system_stm32f30x.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 253:../src/system_stm32f30x.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 185              		.loc 1 253 0
 186 011a 4FF48053 		mov	r3, #4096
 187 011e C4F20203 		movt	r3, 16386
 188 0122 5B68     		ldr	r3, [r3, #4]
 189 0124 03F00C03 		and	r3, r3, #12
 190 0128 FB60     		str	r3, [r7, #12]
 254:../src/system_stm32f30x.c ****   
 255:../src/system_stm32f30x.c ****   switch (tmp)
 191              		.loc 1 255 0
 192 012a FB68     		ldr	r3, [r7, #12]
 193 012c 042B     		cmp	r3, #4
 194 012e 0DD0     		beq	.L5
 195 0130 082B     		cmp	r3, #8
 196 0132 15D0     		beq	.L6
 197 0134 002B     		cmp	r3, #0
 198 0136 53D1     		bne	.L10
 199              	.L4:
 256:../src/system_stm32f30x.c ****   {
 257:../src/system_stm32f30x.c ****     case 0x00:  /* HSI used as system clock */
 258:../src/system_stm32f30x.c ****       SystemCoreClock = HSI_VALUE;
 200              		.loc 1 258 0
 201 0138 40F20003 		movw	r3, #:lower16:SystemCoreClock
 202 013c C0F20003 		movt	r3, #:upper16:SystemCoreClock
 203 0140 4FF49052 		mov	r2, #4608
 204 0144 C0F27A02 		movt	r2, 122
 205 0148 1A60     		str	r2, [r3, #0]
 259:../src/system_stm32f30x.c ****       break;
 206              		.loc 1 259 0
 207 014a 53E0     		b	.L7
 208              	.L5:
 260:../src/system_stm32f30x.c ****     case 0x04:  /* HSE used as system clock */
 261:../src/system_stm32f30x.c ****       SystemCoreClock = HSE_VALUE;
 209              		.loc 1 261 0
 210 014c 40F20003 		movw	r3, #:lower16:SystemCoreClock
 211 0150 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 212 0154 4FF49052 		mov	r2, #4608
 213 0158 C0F27A02 		movt	r2, 122
 214 015c 1A60     		str	r2, [r3, #0]
 262:../src/system_stm32f30x.c ****       break;
 215              		.loc 1 262 0
 216 015e 49E0     		b	.L7
 217              	.L6:
 263:../src/system_stm32f30x.c ****     case 0x08:  /* PLL used as system clock */
 264:../src/system_stm32f30x.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 265:../src/system_stm32f30x.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 218              		.loc 1 265 0
 219 0160 4FF48053 		mov	r3, #4096
 220 0164 C4F20203 		movt	r3, 16386
 221 0168 5B68     		ldr	r3, [r3, #4]
 222 016a 03F47013 		and	r3, r3, #3932160
 223 016e BB60     		str	r3, [r7, #8]
 266:../src/system_stm32f30x.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 224              		.loc 1 266 0
 225 0170 4FF48053 		mov	r3, #4096
 226 0174 C4F20203 		movt	r3, 16386
 227 0178 5B68     		ldr	r3, [r3, #4]
 228 017a 03F48033 		and	r3, r3, #65536
 229 017e 7B60     		str	r3, [r7, #4]
 267:../src/system_stm32f30x.c ****       pllmull = ( pllmull >> 18) + 2;
 230              		.loc 1 267 0
 231 0180 BB68     		ldr	r3, [r7, #8]
 232 0182 4FEA9343 		lsr	r3, r3, #18
 233 0186 03F10203 		add	r3, r3, #2
 234 018a BB60     		str	r3, [r7, #8]
 268:../src/system_stm32f30x.c ****       
 269:../src/system_stm32f30x.c ****       if (pllsource == 0x00)
 235              		.loc 1 269 0
 236 018c 7B68     		ldr	r3, [r7, #4]
 237 018e 002B     		cmp	r3, #0
 238 0190 0CD1     		bne	.L8
 270:../src/system_stm32f30x.c ****       {
 271:../src/system_stm32f30x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 272:../src/system_stm32f30x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 239              		.loc 1 272 0
 240 0192 BA68     		ldr	r2, [r7, #8]
 241 0194 4FF41063 		mov	r3, #2304
 242 0198 C0F23D03 		movt	r3, 61
 243 019c 03FB02F2 		mul	r2, r3, r2
 244 01a0 40F20003 		movw	r3, #:lower16:SystemCoreClock
 245 01a4 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 246 01a8 1A60     		str	r2, [r3, #0]
 273:../src/system_stm32f30x.c ****       }
 274:../src/system_stm32f30x.c ****       else
 275:../src/system_stm32f30x.c ****       {
 276:../src/system_stm32f30x.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 277:../src/system_stm32f30x.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 278:../src/system_stm32f30x.c ****         SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 279:../src/system_stm32f30x.c ****       }      
 280:../src/system_stm32f30x.c ****       break;
 247              		.loc 1 280 0
 248 01aa 23E0     		b	.L7
 249              	.L8:
 276:../src/system_stm32f30x.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 250              		.loc 1 276 0
 251 01ac 4FF48053 		mov	r3, #4096
 252 01b0 C4F20203 		movt	r3, 16386
 253 01b4 DB6A     		ldr	r3, [r3, #44]
 254 01b6 03F00F03 		and	r3, r3, #15
 255 01ba 03F10103 		add	r3, r3, #1
 256 01be 3B60     		str	r3, [r7, #0]
 278:../src/system_stm32f30x.c ****         SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 257              		.loc 1 278 0
 258 01c0 4FF49053 		mov	r3, #4608
 259 01c4 C0F27A03 		movt	r3, 122
 260 01c8 3A68     		ldr	r2, [r7, #0]
 261 01ca B3FBF2F3 		udiv	r3, r3, r2
 262 01ce BA68     		ldr	r2, [r7, #8]
 263 01d0 02FB03F2 		mul	r2, r2, r3
 264 01d4 40F20003 		movw	r3, #:lower16:SystemCoreClock
 265 01d8 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 266 01dc 1A60     		str	r2, [r3, #0]
 267              		.loc 1 280 0
 268 01de 09E0     		b	.L7
 269              	.L10:
 281:../src/system_stm32f30x.c ****     default: /* HSI used as system clock */
 282:../src/system_stm32f30x.c ****       SystemCoreClock = HSI_VALUE;
 270              		.loc 1 282 0
 271 01e0 40F20003 		movw	r3, #:lower16:SystemCoreClock
 272 01e4 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 273 01e8 4FF49052 		mov	r2, #4608
 274 01ec C0F27A02 		movt	r2, 122
 275 01f0 1A60     		str	r2, [r3, #0]
 283:../src/system_stm32f30x.c ****       break;
 276              		.loc 1 283 0
 277 01f2 00BF     		nop
 278              	.L7:
 284:../src/system_stm32f30x.c ****   }
 285:../src/system_stm32f30x.c ****   /* Compute HCLK clock frequency ----------------*/
 286:../src/system_stm32f30x.c ****   /* Get HCLK prescaler */
 287:../src/system_stm32f30x.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 279              		.loc 1 287 0
 280 01f4 4FF48053 		mov	r3, #4096
 281 01f8 C4F20203 		movt	r3, 16386
 282 01fc 5B68     		ldr	r3, [r3, #4]
 283 01fe 03F0F003 		and	r3, r3, #240
 284 0202 4FEA1312 		lsr	r2, r3, #4
 285 0206 40F20003 		movw	r3, #:lower16:AHBPrescTable
 286 020a C0F20003 		movt	r3, #:upper16:AHBPrescTable
 287 020e 9B5C     		ldrb	r3, [r3, r2]
 288 0210 DBB2     		uxtb	r3, r3
 289 0212 FB60     		str	r3, [r7, #12]
 288:../src/system_stm32f30x.c ****   /* HCLK clock frequency */
 289:../src/system_stm32f30x.c ****   SystemCoreClock >>= tmp;  
 290              		.loc 1 289 0
 291 0214 40F20003 		movw	r3, #:lower16:SystemCoreClock
 292 0218 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 293 021c 1A68     		ldr	r2, [r3, #0]
 294 021e FB68     		ldr	r3, [r7, #12]
 295 0220 22FA03F2 		lsr	r2, r2, r3
 296 0224 40F20003 		movw	r3, #:lower16:SystemCoreClock
 297 0228 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 298 022c 1A60     		str	r2, [r3, #0]
 290:../src/system_stm32f30x.c **** }
 299              		.loc 1 290 0
 300 022e 07F11407 		add	r7, r7, #20
 301 0232 BD46     		mov	sp, r7
 302 0234 80BC     		pop	{r7}
 303 0236 7047     		bx	lr
 304              		.cfi_endproc
 305              	.LFE112:
 307              		.align	2
 308              		.thumb
 309              		.thumb_func
 311              	SetSysClock:
 312              	.LFB113:
 291:../src/system_stm32f30x.c **** 
 292:../src/system_stm32f30x.c **** /**
 293:../src/system_stm32f30x.c ****   * @brief  Configures the System clock source, PLL Multiplier and Divider factors,
 294:../src/system_stm32f30x.c ****   *               AHB/APBx prescalers and Flash settings
 295:../src/system_stm32f30x.c ****   * @note   This function should be called only once the RCC clock configuration  
 296:../src/system_stm32f30x.c ****   *         is reset to the default reset state (done in SystemInit() function).             
 297:../src/system_stm32f30x.c ****   * @param  None
 298:../src/system_stm32f30x.c ****   * @retval None
 299:../src/system_stm32f30x.c ****   */
 300:../src/system_stm32f30x.c **** static void SetSysClock(void)
 301:../src/system_stm32f30x.c **** {
 313              		.loc 1 301 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 8
 316              		@ frame_needed = 1, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 318 0238 80B4     		push	{r7}
 319              	.LCFI5:
 320              		.cfi_def_cfa_offset 4
 321              		.cfi_offset 7, -4
 322 023a 83B0     		sub	sp, sp, #12
 323              	.LCFI6:
 324              		.cfi_def_cfa_offset 16
 325 023c 00AF     		add	r7, sp, #0
 326              	.LCFI7:
 327              		.cfi_def_cfa_register 7
 302:../src/system_stm32f30x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 328              		.loc 1 302 0
 329 023e 4FF00003 		mov	r3, #0
 330 0242 7B60     		str	r3, [r7, #4]
 331 0244 4FF00003 		mov	r3, #0
 332 0248 3B60     		str	r3, [r7, #0]
 303:../src/system_stm32f30x.c **** 
 304:../src/system_stm32f30x.c **** /******************************************************************************/
 305:../src/system_stm32f30x.c **** /*            PLL (clocked by HSE) used as System clock source                */
 306:../src/system_stm32f30x.c **** /******************************************************************************/
 307:../src/system_stm32f30x.c **** 
 308:../src/system_stm32f30x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration -----------*/
 309:../src/system_stm32f30x.c ****   /* Enable HSE */
 310:../src/system_stm32f30x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 333              		.loc 1 310 0
 334 024a 4FF48053 		mov	r3, #4096
 335 024e C4F20203 		movt	r3, 16386
 336 0252 4FF48052 		mov	r2, #4096
 337 0256 C4F20202 		movt	r2, 16386
 338 025a 1268     		ldr	r2, [r2, #0]
 339 025c 42F48032 		orr	r2, r2, #65536
 340 0260 1A60     		str	r2, [r3, #0]
 341              	.L13:
 311:../src/system_stm32f30x.c ****  
 312:../src/system_stm32f30x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 313:../src/system_stm32f30x.c ****   do
 314:../src/system_stm32f30x.c ****   {
 315:../src/system_stm32f30x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 342              		.loc 1 315 0 discriminator 1
 343 0262 4FF48053 		mov	r3, #4096
 344 0266 C4F20203 		movt	r3, 16386
 345 026a 1B68     		ldr	r3, [r3, #0]
 346 026c 03F40033 		and	r3, r3, #131072
 347 0270 3B60     		str	r3, [r7, #0]
 316:../src/system_stm32f30x.c ****     StartUpCounter++;
 348              		.loc 1 316 0 discriminator 1
 349 0272 7B68     		ldr	r3, [r7, #4]
 350 0274 03F10103 		add	r3, r3, #1
 351 0278 7B60     		str	r3, [r7, #4]
 317:../src/system_stm32f30x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 352              		.loc 1 317 0 discriminator 1
 353 027a 3B68     		ldr	r3, [r7, #0]
 354 027c 002B     		cmp	r3, #0
 355 027e 03D1     		bne	.L12
 356 0280 7B68     		ldr	r3, [r7, #4]
 357 0282 B3F5A06F 		cmp	r3, #1280
 358 0286 ECD1     		bne	.L13
 359              	.L12:
 318:../src/system_stm32f30x.c **** 
 319:../src/system_stm32f30x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 360              		.loc 1 319 0
 361 0288 4FF48053 		mov	r3, #4096
 362 028c C4F20203 		movt	r3, 16386
 363 0290 1B68     		ldr	r3, [r3, #0]
 364 0292 03F40033 		and	r3, r3, #131072
 365 0296 002B     		cmp	r3, #0
 366 0298 03D0     		beq	.L14
 320:../src/system_stm32f30x.c ****   {
 321:../src/system_stm32f30x.c ****     HSEStatus = (uint32_t)0x01;
 367              		.loc 1 321 0
 368 029a 4FF00103 		mov	r3, #1
 369 029e 3B60     		str	r3, [r7, #0]
 370 02a0 02E0     		b	.L15
 371              	.L14:
 322:../src/system_stm32f30x.c ****   }
 323:../src/system_stm32f30x.c ****   else
 324:../src/system_stm32f30x.c ****   {
 325:../src/system_stm32f30x.c ****     HSEStatus = (uint32_t)0x00;
 372              		.loc 1 325 0
 373 02a2 4FF00003 		mov	r3, #0
 374 02a6 3B60     		str	r3, [r7, #0]
 375              	.L15:
 326:../src/system_stm32f30x.c ****   }
 327:../src/system_stm32f30x.c **** 
 328:../src/system_stm32f30x.c ****   if (HSEStatus == (uint32_t)0x01)
 376              		.loc 1 328 0
 377 02a8 3B68     		ldr	r3, [r7, #0]
 378 02aa 012B     		cmp	r3, #1
 379 02ac 76D1     		bne	.L11
 329:../src/system_stm32f30x.c ****   {
 330:../src/system_stm32f30x.c ****     /* Enable Prefetch Buffer and set Flash Latency */
 331:../src/system_stm32f30x.c ****     FLASH->ACR = FLASH_ACR_PRFTBE | (uint32_t)FLASH_ACR_LATENCY_1;
 380              		.loc 1 331 0
 381 02ae 4FF40053 		mov	r3, #8192
 382 02b2 C4F20203 		movt	r3, 16386
 383 02b6 4FF01202 		mov	r2, #18
 384 02ba 1A60     		str	r2, [r3, #0]
 332:../src/system_stm32f30x.c ****  
 333:../src/system_stm32f30x.c ****      /* HCLK = SYSCLK / 1 */
 334:../src/system_stm32f30x.c ****      RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 385              		.loc 1 334 0
 386 02bc 4FF48053 		mov	r3, #4096
 387 02c0 C4F20203 		movt	r3, 16386
 388 02c4 4FF48052 		mov	r2, #4096
 389 02c8 C4F20202 		movt	r2, 16386
 390 02cc 5268     		ldr	r2, [r2, #4]
 391 02ce 5A60     		str	r2, [r3, #4]
 335:../src/system_stm32f30x.c ****        
 336:../src/system_stm32f30x.c ****      /* PCLK2 = HCLK / 1 */
 337:../src/system_stm32f30x.c ****      RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 392              		.loc 1 337 0
 393 02d0 4FF48053 		mov	r3, #4096
 394 02d4 C4F20203 		movt	r3, 16386
 395 02d8 4FF48052 		mov	r2, #4096
 396 02dc C4F20202 		movt	r2, 16386
 397 02e0 5268     		ldr	r2, [r2, #4]
 398 02e2 5A60     		str	r2, [r3, #4]
 338:../src/system_stm32f30x.c ****      
 339:../src/system_stm32f30x.c ****      /* PCLK1 = HCLK / 2 */
 340:../src/system_stm32f30x.c ****      RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 399              		.loc 1 340 0
 400 02e4 4FF48053 		mov	r3, #4096
 401 02e8 C4F20203 		movt	r3, 16386
 402 02ec 4FF48052 		mov	r2, #4096
 403 02f0 C4F20202 		movt	r2, 16386
 404 02f4 5268     		ldr	r2, [r2, #4]
 405 02f6 42F48062 		orr	r2, r2, #1024
 406 02fa 5A60     		str	r2, [r3, #4]
 341:../src/system_stm32f30x.c **** 
 342:../src/system_stm32f30x.c ****     /* PLL configuration */
 343:../src/system_stm32f30x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 407              		.loc 1 343 0
 408 02fc 4FF48053 		mov	r3, #4096
 409 0300 C4F20203 		movt	r3, 16386
 410 0304 4FF48052 		mov	r2, #4096
 411 0308 C4F20202 		movt	r2, 16386
 412 030c 5268     		ldr	r2, [r2, #4]
 413 030e 22F47C12 		bic	r2, r2, #4128768
 414 0312 5A60     		str	r2, [r3, #4]
 344:../src/system_stm32f30x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_PREDIV1 | RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLMULL9
 415              		.loc 1 344 0
 416 0314 4FF48053 		mov	r3, #4096
 417 0318 C4F20203 		movt	r3, 16386
 418 031c 4FF48052 		mov	r2, #4096
 419 0320 C4F20202 		movt	r2, 16386
 420 0324 5268     		ldr	r2, [r2, #4]
 421 0326 42F4E812 		orr	r2, r2, #1900544
 422 032a 5A60     		str	r2, [r3, #4]
 345:../src/system_stm32f30x.c **** 
 346:../src/system_stm32f30x.c ****     /* Enable PLL */
 347:../src/system_stm32f30x.c ****     RCC->CR |= RCC_CR_PLLON;
 423              		.loc 1 347 0
 424 032c 4FF48053 		mov	r3, #4096
 425 0330 C4F20203 		movt	r3, 16386
 426 0334 4FF48052 		mov	r2, #4096
 427 0338 C4F20202 		movt	r2, 16386
 428 033c 1268     		ldr	r2, [r2, #0]
 429 033e 42F08072 		orr	r2, r2, #16777216
 430 0342 1A60     		str	r2, [r3, #0]
 348:../src/system_stm32f30x.c **** 
 349:../src/system_stm32f30x.c ****     /* Wait till PLL is ready */
 350:../src/system_stm32f30x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 431              		.loc 1 350 0
 432 0344 00BF     		nop
 433              	.L17:
 434              		.loc 1 350 0 is_stmt 0 discriminator 1
 435 0346 4FF48053 		mov	r3, #4096
 436 034a C4F20203 		movt	r3, 16386
 437 034e 1B68     		ldr	r3, [r3, #0]
 438 0350 03F00073 		and	r3, r3, #33554432
 439 0354 002B     		cmp	r3, #0
 440 0356 F6D0     		beq	.L17
 351:../src/system_stm32f30x.c ****     {
 352:../src/system_stm32f30x.c ****     }
 353:../src/system_stm32f30x.c ****     
 354:../src/system_stm32f30x.c ****     /* Select PLL as system clock source */
 355:../src/system_stm32f30x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 441              		.loc 1 355 0 is_stmt 1
 442 0358 4FF48053 		mov	r3, #4096
 443 035c C4F20203 		movt	r3, 16386
 444 0360 4FF48052 		mov	r2, #4096
 445 0364 C4F20202 		movt	r2, 16386
 446 0368 5268     		ldr	r2, [r2, #4]
 447 036a 22F00302 		bic	r2, r2, #3
 448 036e 5A60     		str	r2, [r3, #4]
 356:../src/system_stm32f30x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;
 449              		.loc 1 356 0
 450 0370 4FF48053 		mov	r3, #4096
 451 0374 C4F20203 		movt	r3, 16386
 452 0378 4FF48052 		mov	r2, #4096
 453 037c C4F20202 		movt	r2, 16386
 454 0380 5268     		ldr	r2, [r2, #4]
 455 0382 42F00202 		orr	r2, r2, #2
 456 0386 5A60     		str	r2, [r3, #4]
 357:../src/system_stm32f30x.c **** 
 358:../src/system_stm32f30x.c ****     /* Wait till PLL is used as system clock source */
 359:../src/system_stm32f30x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)RCC_CFGR_SWS_PLL)
 457              		.loc 1 359 0
 458 0388 00BF     		nop
 459              	.L18:
 460              		.loc 1 359 0 is_stmt 0 discriminator 1
 461 038a 4FF48053 		mov	r3, #4096
 462 038e C4F20203 		movt	r3, 16386
 463 0392 5B68     		ldr	r3, [r3, #4]
 464 0394 03F00C03 		and	r3, r3, #12
 465 0398 082B     		cmp	r3, #8
 466 039a F6D1     		bne	.L18
 467              	.L11:
 360:../src/system_stm32f30x.c ****     {
 361:../src/system_stm32f30x.c ****     }
 362:../src/system_stm32f30x.c ****   }
 363:../src/system_stm32f30x.c ****   else
 364:../src/system_stm32f30x.c ****   { /* If HSE fails to start-up, the application will have wrong clock
 365:../src/system_stm32f30x.c ****          configuration. User can add here some code to deal with this error */
 366:../src/system_stm32f30x.c ****   }
 367:../src/system_stm32f30x.c **** }
 468              		.loc 1 367 0 is_stmt 1
 469 039c 07F10C07 		add	r7, r7, #12
 470 03a0 BD46     		mov	sp, r7
 471 03a2 80BC     		pop	{r7}
 472 03a4 7047     		bx	lr
 473              		.cfi_endproc
 474              	.LFE113:
 476              	.Letext0:
 477              		.file 2 "/home/aghosh01/gcc-arm-none-eabi-4_7-2012q4/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../.
 478              		.file 3 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h"
 479              		.file 4 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f30x.c
     /tmp/cczqBQ5h.s:24     .data:00000000 SystemCoreClock
     /tmp/cczqBQ5h.s:21     .data:00000000 $d
     /tmp/cczqBQ5h.s:30     .data:00000004 AHBPrescTable
     /tmp/cczqBQ5h.s:48     .text:00000000 $t
     /tmp/cczqBQ5h.s:53     .text:00000000 SystemInit
     /tmp/cczqBQ5h.s:311    .text:00000238 SetSysClock
     /tmp/cczqBQ5h.s:159    .text:000000fc SystemCoreClockUpdate
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.323dce8664331a0daf4a2675e107c70c
                           .group:00000000 wm4.stm32f30x.h.56.6f19c65e98e3319a61449cb2b2455af5
                           .group:00000000 wm4.core_cm4.h.32.1434cd257ff5806b1b03cd32ab0641e9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.29.013e5bcf58dba2d27c60184174208e07
                           .group:00000000 wm4.core_cm4.h.155.cf7c793e178943e1bbf613f1b21cd51a
                           .group:00000000 wm4.stm32f30x.h.294.d8a54360eca16e4157694b52a095202d
                           .group:00000000 wm4.stm32f30x_adc.h.130.cbebad91f78fb87381fe0860eea6104e
                           .group:00000000 wm4.stm32f30x_can.h.50.8b8f5d301152c422a6e50622b33ef620
                           .group:00000000 wm4.stm32f30x_crc.h.54.66d4c5e565e18566aebd9abfd4bcd4b0
                           .group:00000000 wm4.stm32f30x_comp.h.91.06ae44150aaaa82c077b71df8db3541a
                           .group:00000000 wm4.stm32f30x_dac.h.49.b1b5b26e4ca241dbe67fa16dc86a615f
                           .group:00000000 wm4.stm32f30x_dbgmcu.h.53.b238a263ce6a2cc83f610cc35302a38b
                           .group:00000000 wm4.stm32f30x_dma.h.96.d7a2ddd10023e12781aa8ff5ac15d212
                           .group:00000000 wm4.stm32f30x_exti.h.60.8ca0809491a21dec6fc69cf7471e2bab
                           .group:00000000 wm4.stm32f30x_flash.h.70.32613455dfe7328932f786a224daac23
                           .group:00000000 wm4.stm32f30x_gpio.h.50.408e1f6250246e4cc28221970909d34c
                           .group:00000000 wm4.stm32f30x_syscfg.h.58.4cadeb4ec8e47d36b972bbb6b96b7161
                           .group:00000000 wm4.stm32f30x_i2c.h.86.3d51d4edc0e3b9ee9aae045ccbb7739a
                           .group:00000000 wm4.stm32f30x_iwdg.h.59.467d704fb073a015941f19b50fa6470a
                           .group:00000000 wm4.stm32f30x_opamp.h.75.704e2e5e2aab039de307aaa2dcc99fa5
                           .group:00000000 wm4.stm32f30x_pwr.h.59.5c85acff2a3e3c5085b2140c06025cfc
                           .group:00000000 wm4.stm32f30x_rcc.h.79.5ba7cac1e74879861a72556c25322aa4
                           .group:00000000 wm4.stm32f30x_rtc.h.133.d184e08ff40bda44db4bed94f9633384
                           .group:00000000 wm4.stm32f30x_spi.h.119.4d21ec94ec14f3553a127e61c0a9874f
                           .group:00000000 wm4.stm32f30x_tim.h.175.d4a93cff2e7924577147254e501271b6
                           .group:00000000 wm4.stm32f30x_usart.h.110.c89016273702821ff4f9fe43881f70b5
                           .group:00000000 wm4.stm32f30x_wwdg.h.58.4688eee61a2709866472b4b4c07d9275
                           .group:00000000 wm4.stm32f30x_misc.h.113.6a52e4fe7c3825a3ab05990f30dddf92

NO UNDEFINED SYMBOLS
