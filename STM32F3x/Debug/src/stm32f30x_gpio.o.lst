   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f30x_gpio.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.align	2
  20              		.global	GPIO_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	GPIO_DeInit:
  25              	.LFB111:
  26              		.file 1 "../src/stm32f30x_gpio.c"
   1:../src/stm32f30x_gpio.c **** /**
   2:../src/stm32f30x_gpio.c ****   ******************************************************************************
   3:../src/stm32f30x_gpio.c ****   * @file    stm32f30x_gpio.c
   4:../src/stm32f30x_gpio.c ****   * @author  MCD Application Team
   5:../src/stm32f30x_gpio.c ****   * @version V1.0.1
   6:../src/stm32f30x_gpio.c ****   * @date    23-October-2012
   7:../src/stm32f30x_gpio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../src/stm32f30x_gpio.c ****   *          functionalities of the GPIO peripheral:
   9:../src/stm32f30x_gpio.c ****   *           + Initialization and Configuration functions
  10:../src/stm32f30x_gpio.c ****   *           + GPIO Read and Write functions
  11:../src/stm32f30x_gpio.c ****   *           + GPIO Alternate functions configuration functions
  12:../src/stm32f30x_gpio.c ****   *
  13:../src/stm32f30x_gpio.c ****   *  @verbatim
  14:../src/stm32f30x_gpio.c **** 
  15:../src/stm32f30x_gpio.c **** 
  16:../src/stm32f30x_gpio.c ****  ===============================================================================
  17:../src/stm32f30x_gpio.c ****                       ##### How to use this driver #####
  18:../src/stm32f30x_gpio.c ****  ===============================================================================
  19:../src/stm32f30x_gpio.c ****     [..]
  20:../src/stm32f30x_gpio.c ****     (#) Enable the GPIO AHB clock using RCC_AHBPeriphClockCmd()
  21:../src/stm32f30x_gpio.c ****     (#) Configure the GPIO pin(s) using GPIO_Init()
  22:../src/stm32f30x_gpio.c ****         Four possible configuration are available for each pin:
  23:../src/stm32f30x_gpio.c ****         (++) Input: Floating, Pull-up, Pull-down.
  24:../src/stm32f30x_gpio.c ****         (++) Output: Push-Pull (Pull-up, Pull-down or no Pull),
  25:../src/stm32f30x_gpio.c ****                      Open Drain (Pull-up, Pull-down or no Pull).
  26:../src/stm32f30x_gpio.c ****              In output mode, the speed is configurable: Low, Medium, Fast or High.
  27:../src/stm32f30x_gpio.c ****         (++) Alternate Function: Push-Pull (Pull-up, Pull-down or no Pull), 
  28:../src/stm32f30x_gpio.c ****                                  Open Drain (Pull-up, Pull-down or no Pull).
  29:../src/stm32f30x_gpio.c ****         (++) Analog: required mode when a pin is to be used as ADC channel,
  30:../src/stm32f30x_gpio.c ****              DAC output or comparator input.
  31:../src/stm32f30x_gpio.c ****     (#) Peripherals alternate function:
  32:../src/stm32f30x_gpio.c ****         (++) For ADC, DAC and comparators, configure the desired pin in 
  33:../src/stm32f30x_gpio.c ****              analog mode using GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AN
  34:../src/stm32f30x_gpio.c ****         (++) For other peripherals (TIM, USART...):
  35:../src/stm32f30x_gpio.c ****              (+++) Connect the pin to the desired peripherals' Alternate 
  36:../src/stm32f30x_gpio.c ****                    Function (AF) using GPIO_PinAFConfig() function.
  37:../src/stm32f30x_gpio.c ****              (+++) Configure the desired pin in alternate function mode using
  38:../src/stm32f30x_gpio.c ****                    GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  39:../src/stm32f30x_gpio.c ****              (+++) Select the type, pull-up/pull-down and output speed via 
  40:../src/stm32f30x_gpio.c ****                    GPIO_PuPd, GPIO_OType and GPIO_Speed members.
  41:../src/stm32f30x_gpio.c ****              (+++) Call GPIO_Init() function.
  42:../src/stm32f30x_gpio.c ****     (#) To get the level of a pin configured in input mode use GPIO_ReadInputDataBit()
  43:../src/stm32f30x_gpio.c ****     (#) To set/reset the level of a pin configured in output mode use
  44:../src/stm32f30x_gpio.c ****         GPIO_SetBits()/GPIO_ResetBits()
  45:../src/stm32f30x_gpio.c ****     (#) During and just after reset, the alternate functions are not active 
  46:../src/stm32f30x_gpio.c ****         and the GPIO pins are configured in input floating mode (except JTAG pins).
  47:../src/stm32f30x_gpio.c ****     (#) The LSE oscillator pins OSC32_IN and OSC32_OUT can be used as 
  48:../src/stm32f30x_gpio.c ****         general-purpose (PC14 and PC15, respectively) when the LSE
  49:../src/stm32f30x_gpio.c ****         oscillator is off. The LSE has priority over the GPIO function.
  50:../src/stm32f30x_gpio.c ****     (#) The HSE oscillator pins OSC_IN/OSC_OUT can be used as general-purpose 
  51:../src/stm32f30x_gpio.c ****         (PF0 and PF1 respectively) when the HSE oscillator is off. The HSE has 
  52:../src/stm32f30x_gpio.c ****         the priority over the GPIO function.  
  53:../src/stm32f30x_gpio.c **** 
  54:../src/stm32f30x_gpio.c ****   @endverbatim
  55:../src/stm32f30x_gpio.c **** 
  56:../src/stm32f30x_gpio.c ****   ******************************************************************************
  57:../src/stm32f30x_gpio.c ****   * @attention
  58:../src/stm32f30x_gpio.c ****   *
  59:../src/stm32f30x_gpio.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  60:../src/stm32f30x_gpio.c ****   *
  61:../src/stm32f30x_gpio.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  62:../src/stm32f30x_gpio.c ****   * You may not use this file except in compliance with the License.
  63:../src/stm32f30x_gpio.c ****   * You may obtain a copy of the License at:
  64:../src/stm32f30x_gpio.c ****   *
  65:../src/stm32f30x_gpio.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  66:../src/stm32f30x_gpio.c ****   *
  67:../src/stm32f30x_gpio.c ****   * Unless required by applicable law or agreed to in writing, software 
  68:../src/stm32f30x_gpio.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  69:../src/stm32f30x_gpio.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  70:../src/stm32f30x_gpio.c ****   * See the License for the specific language governing permissions and
  71:../src/stm32f30x_gpio.c ****   * limitations under the License.
  72:../src/stm32f30x_gpio.c ****   *
  73:../src/stm32f30x_gpio.c ****   ******************************************************************************
  74:../src/stm32f30x_gpio.c ****   */
  75:../src/stm32f30x_gpio.c **** 
  76:../src/stm32f30x_gpio.c **** /* Includes ------------------------------------------------------------------*/
  77:../src/stm32f30x_gpio.c **** #include "stm32f30x_gpio.h"
  78:../src/stm32f30x_gpio.c **** #include "stm32f30x_rcc.h"
  79:../src/stm32f30x_gpio.c **** 
  80:../src/stm32f30x_gpio.c **** /** @addtogroup STM32F30x_StdPeriph_Driver
  81:../src/stm32f30x_gpio.c ****   * @{
  82:../src/stm32f30x_gpio.c ****   */
  83:../src/stm32f30x_gpio.c **** 
  84:../src/stm32f30x_gpio.c **** /** @defgroup GPIO 
  85:../src/stm32f30x_gpio.c ****   * @brief GPIO driver modules
  86:../src/stm32f30x_gpio.c ****   * @{
  87:../src/stm32f30x_gpio.c ****   */
  88:../src/stm32f30x_gpio.c **** 
  89:../src/stm32f30x_gpio.c **** 
  90:../src/stm32f30x_gpio.c **** /* Private typedef -----------------------------------------------------------*/
  91:../src/stm32f30x_gpio.c **** /* Private define ------------------------------------------------------------*/
  92:../src/stm32f30x_gpio.c **** 
  93:../src/stm32f30x_gpio.c **** 
  94:../src/stm32f30x_gpio.c **** /* Private macro -------------------------------------------------------------*/
  95:../src/stm32f30x_gpio.c **** /* Private variables ---------------------------------------------------------*/
  96:../src/stm32f30x_gpio.c **** /* Private function prototypes -----------------------------------------------*/
  97:../src/stm32f30x_gpio.c **** /* Private functions ---------------------------------------------------------*/
  98:../src/stm32f30x_gpio.c **** 
  99:../src/stm32f30x_gpio.c **** /** @defgroup GPIO_Private_Functions 
 100:../src/stm32f30x_gpio.c ****   * @{
 101:../src/stm32f30x_gpio.c ****   */
 102:../src/stm32f30x_gpio.c **** 
 103:../src/stm32f30x_gpio.c **** /** @defgroup GPIO_Group1 Initialization and Configuration
 104:../src/stm32f30x_gpio.c ****  *  @brief   Initialization and Configuration
 105:../src/stm32f30x_gpio.c ****  *
 106:../src/stm32f30x_gpio.c **** @verbatim
 107:../src/stm32f30x_gpio.c ****  ===============================================================================
 108:../src/stm32f30x_gpio.c ****             ##### Initialization and Configuration #####
 109:../src/stm32f30x_gpio.c ****  ===============================================================================
 110:../src/stm32f30x_gpio.c **** 
 111:../src/stm32f30x_gpio.c **** @endverbatim
 112:../src/stm32f30x_gpio.c ****   * @{
 113:../src/stm32f30x_gpio.c ****   */
 114:../src/stm32f30x_gpio.c ****   
 115:../src/stm32f30x_gpio.c **** /**
 116:../src/stm32f30x_gpio.c ****   * @brief  Deinitializes the GPIOx peripheral registers to their default reset 
 117:../src/stm32f30x_gpio.c ****   *         values.
 118:../src/stm32f30x_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 119:../src/stm32f30x_gpio.c ****   * @retval None
 120:../src/stm32f30x_gpio.c ****   */
 121:../src/stm32f30x_gpio.c **** void GPIO_DeInit(GPIO_TypeDef* GPIOx)
 122:../src/stm32f30x_gpio.c **** {
  27              		.loc 1 122 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 123:../src/stm32f30x_gpio.c ****   /* Check the parameters */
 124:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 125:../src/stm32f30x_gpio.c **** 
 126:../src/stm32f30x_gpio.c ****   if(GPIOx == GPIOA)
  43              		.loc 1 126 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a B3F1904F 		cmp	r3, #1207959552
  46 000e 0CD1     		bne	.L2
 127:../src/stm32f30x_gpio.c ****   {
 128:../src/stm32f30x_gpio.c ****     RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOA, ENABLE);
  47              		.loc 1 128 0
  48 0010 4FF40030 		mov	r0, #131072
  49 0014 4FF00101 		mov	r1, #1
  50 0018 FFF7FEFF 		bl	RCC_AHBPeriphResetCmd
 129:../src/stm32f30x_gpio.c ****     RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOA, DISABLE);
  51              		.loc 1 129 0
  52 001c 4FF40030 		mov	r0, #131072
  53 0020 4FF00001 		mov	r1, #0
  54 0024 FFF7FEFF 		bl	RCC_AHBPeriphResetCmd
  55 0028 62E0     		b	.L1
  56              	.L2:
 130:../src/stm32f30x_gpio.c ****   }
 131:../src/stm32f30x_gpio.c ****   else if(GPIOx == GPIOB)
  57              		.loc 1 131 0
  58 002a 7A68     		ldr	r2, [r7, #4]
  59 002c 4FF48063 		mov	r3, #1024
  60 0030 C4F60003 		movt	r3, 18432
  61 0034 9A42     		cmp	r2, r3
  62 0036 0CD1     		bne	.L4
 132:../src/stm32f30x_gpio.c ****   {
 133:../src/stm32f30x_gpio.c ****     RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOB, ENABLE);
  63              		.loc 1 133 0
  64 0038 4FF48020 		mov	r0, #262144
  65 003c 4FF00101 		mov	r1, #1
  66 0040 FFF7FEFF 		bl	RCC_AHBPeriphResetCmd
 134:../src/stm32f30x_gpio.c ****     RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOB, DISABLE);
  67              		.loc 1 134 0
  68 0044 4FF48020 		mov	r0, #262144
  69 0048 4FF00001 		mov	r1, #0
  70 004c FFF7FEFF 		bl	RCC_AHBPeriphResetCmd
  71 0050 4EE0     		b	.L1
  72              	.L4:
 135:../src/stm32f30x_gpio.c ****   }
 136:../src/stm32f30x_gpio.c ****   else if(GPIOx == GPIOC)
  73              		.loc 1 136 0
  74 0052 7A68     		ldr	r2, [r7, #4]
  75 0054 4FF40063 		mov	r3, #2048
  76 0058 C4F60003 		movt	r3, 18432
  77 005c 9A42     		cmp	r2, r3
  78 005e 0CD1     		bne	.L5
 137:../src/stm32f30x_gpio.c ****   {
 138:../src/stm32f30x_gpio.c ****     RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOC, ENABLE);
  79              		.loc 1 138 0
  80 0060 4FF40020 		mov	r0, #524288
  81 0064 4FF00101 		mov	r1, #1
  82 0068 FFF7FEFF 		bl	RCC_AHBPeriphResetCmd
 139:../src/stm32f30x_gpio.c ****     RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOC, DISABLE);
  83              		.loc 1 139 0
  84 006c 4FF40020 		mov	r0, #524288
  85 0070 4FF00001 		mov	r1, #0
  86 0074 FFF7FEFF 		bl	RCC_AHBPeriphResetCmd
  87 0078 3AE0     		b	.L1
  88              	.L5:
 140:../src/stm32f30x_gpio.c ****   }
 141:../src/stm32f30x_gpio.c ****   else if(GPIOx == GPIOD)
  89              		.loc 1 141 0
  90 007a 7A68     		ldr	r2, [r7, #4]
  91 007c 4FF44063 		mov	r3, #3072
  92 0080 C4F60003 		movt	r3, 18432
  93 0084 9A42     		cmp	r2, r3
  94 0086 0CD1     		bne	.L6
 142:../src/stm32f30x_gpio.c ****   {
 143:../src/stm32f30x_gpio.c ****     RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOD, ENABLE);
  95              		.loc 1 143 0
  96 0088 4FF48010 		mov	r0, #1048576
  97 008c 4FF00101 		mov	r1, #1
  98 0090 FFF7FEFF 		bl	RCC_AHBPeriphResetCmd
 144:../src/stm32f30x_gpio.c ****     RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOD, DISABLE);
  99              		.loc 1 144 0
 100 0094 4FF48010 		mov	r0, #1048576
 101 0098 4FF00001 		mov	r1, #0
 102 009c FFF7FEFF 		bl	RCC_AHBPeriphResetCmd
 103 00a0 26E0     		b	.L1
 104              	.L6:
 145:../src/stm32f30x_gpio.c ****   }
 146:../src/stm32f30x_gpio.c ****   else if(GPIOx == GPIOE)
 105              		.loc 1 146 0
 106 00a2 7A68     		ldr	r2, [r7, #4]
 107 00a4 4FF48053 		mov	r3, #4096
 108 00a8 C4F60003 		movt	r3, 18432
 109 00ac 9A42     		cmp	r2, r3
 110 00ae 0CD1     		bne	.L7
 147:../src/stm32f30x_gpio.c ****   {
 148:../src/stm32f30x_gpio.c ****     RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOE, ENABLE);
 111              		.loc 1 148 0
 112 00b0 4FF40010 		mov	r0, #2097152
 113 00b4 4FF00101 		mov	r1, #1
 114 00b8 FFF7FEFF 		bl	RCC_AHBPeriphResetCmd
 149:../src/stm32f30x_gpio.c ****     RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOE, DISABLE);
 115              		.loc 1 149 0
 116 00bc 4FF40010 		mov	r0, #2097152
 117 00c0 4FF00001 		mov	r1, #0
 118 00c4 FFF7FEFF 		bl	RCC_AHBPeriphResetCmd
 119 00c8 12E0     		b	.L1
 120              	.L7:
 150:../src/stm32f30x_gpio.c ****   }
 151:../src/stm32f30x_gpio.c ****   else
 152:../src/stm32f30x_gpio.c ****   {
 153:../src/stm32f30x_gpio.c ****     if(GPIOx == GPIOF)
 121              		.loc 1 153 0
 122 00ca 7A68     		ldr	r2, [r7, #4]
 123 00cc 4FF4A053 		mov	r3, #5120
 124 00d0 C4F60003 		movt	r3, 18432
 125 00d4 9A42     		cmp	r2, r3
 126 00d6 0BD1     		bne	.L1
 154:../src/stm32f30x_gpio.c ****     {
 155:../src/stm32f30x_gpio.c ****       RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOF, ENABLE);
 127              		.loc 1 155 0
 128 00d8 4FF48000 		mov	r0, #4194304
 129 00dc 4FF00101 		mov	r1, #1
 130 00e0 FFF7FEFF 		bl	RCC_AHBPeriphResetCmd
 156:../src/stm32f30x_gpio.c ****       RCC_AHBPeriphResetCmd(RCC_AHBPeriph_GPIOF, DISABLE);
 131              		.loc 1 156 0
 132 00e4 4FF48000 		mov	r0, #4194304
 133 00e8 4FF00001 		mov	r1, #0
 134 00ec FFF7FEFF 		bl	RCC_AHBPeriphResetCmd
 135              	.L1:
 157:../src/stm32f30x_gpio.c ****     }
 158:../src/stm32f30x_gpio.c ****   }
 159:../src/stm32f30x_gpio.c **** }
 136              		.loc 1 159 0
 137 00f0 07F10807 		add	r7, r7, #8
 138 00f4 BD46     		mov	sp, r7
 139 00f6 80BD     		pop	{r7, pc}
 140              		.cfi_endproc
 141              	.LFE111:
 143              		.align	2
 144              		.global	GPIO_Init
 145              		.thumb
 146              		.thumb_func
 148              	GPIO_Init:
 149              	.LFB112:
 160:../src/stm32f30x_gpio.c **** 
 161:../src/stm32f30x_gpio.c **** /**
 162:../src/stm32f30x_gpio.c ****   * @brief  Initializes the GPIOx peripheral according to the specified 
 163:../src/stm32f30x_gpio.c ****   *         parameters in the GPIO_InitStruct.
 164:../src/stm32f30x_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 165:../src/stm32f30x_gpio.c ****   * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that 
 166:../src/stm32f30x_gpio.c ****   *         contains the configuration information for the specified GPIO
 167:../src/stm32f30x_gpio.c ****   *         peripheral.
 168:../src/stm32f30x_gpio.c ****   * @note   GPIO_Pin: selects the pin to be configured:
 169:../src/stm32f30x_gpio.c ****   *         GPIO_Pin_0->GPIO_Pin_15 for GPIOA, GPIOB, GPIOC, GPIOD and GPIOE;
 170:../src/stm32f30x_gpio.c ****   *         GPIO_Pin_0->GPIO_Pin_2, GPIO_Pin_4, GPIO_Pin_6, GPIO_Pin_9 
 171:../src/stm32f30x_gpio.c ****   *                       and GPIO_Pin_10 for GPIOF.
 172:../src/stm32f30x_gpio.c ****   * @retval None
 173:../src/stm32f30x_gpio.c ****   */
 174:../src/stm32f30x_gpio.c **** void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
 175:../src/stm32f30x_gpio.c **** { 
 150              		.loc 1 175 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 24
 153              		@ frame_needed = 1, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 00f8 80B4     		push	{r7}
 156              	.LCFI3:
 157              		.cfi_def_cfa_offset 4
 158              		.cfi_offset 7, -4
 159 00fa 87B0     		sub	sp, sp, #28
 160              	.LCFI4:
 161              		.cfi_def_cfa_offset 32
 162 00fc 00AF     		add	r7, sp, #0
 163              	.LCFI5:
 164              		.cfi_def_cfa_register 7
 165 00fe 7860     		str	r0, [r7, #4]
 166 0100 3960     		str	r1, [r7, #0]
 176:../src/stm32f30x_gpio.c ****   uint32_t pinpos = 0x00, pos = 0x00 , currentpin = 0x00;
 167              		.loc 1 176 0
 168 0102 4FF00003 		mov	r3, #0
 169 0106 7B61     		str	r3, [r7, #20]
 170 0108 4FF00003 		mov	r3, #0
 171 010c 3B61     		str	r3, [r7, #16]
 172 010e 4FF00003 		mov	r3, #0
 173 0112 FB60     		str	r3, [r7, #12]
 177:../src/stm32f30x_gpio.c **** 
 178:../src/stm32f30x_gpio.c ****   /* Check the parameters */
 179:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 180:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));
 181:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
 182:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_PUPD(GPIO_InitStruct->GPIO_PuPd));
 183:../src/stm32f30x_gpio.c **** 
 184:../src/stm32f30x_gpio.c ****   /*-------------------------- Configure the port pins -----------------------*/
 185:../src/stm32f30x_gpio.c ****   /*-- GPIO Mode Configuration --*/
 186:../src/stm32f30x_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 174              		.loc 1 186 0
 175 0114 4FF00003 		mov	r3, #0
 176 0118 7B61     		str	r3, [r7, #20]
 177 011a 8CE0     		b	.L9
 178              	.L13:
 187:../src/stm32f30x_gpio.c ****   {
 188:../src/stm32f30x_gpio.c ****     pos = ((uint32_t)0x01) << pinpos;
 179              		.loc 1 188 0
 180 011c 7B69     		ldr	r3, [r7, #20]
 181 011e 4FF00102 		mov	r2, #1
 182 0122 02FA03F3 		lsl	r3, r2, r3
 183 0126 3B61     		str	r3, [r7, #16]
 189:../src/stm32f30x_gpio.c **** 
 190:../src/stm32f30x_gpio.c ****     /* Get the port pins position */
 191:../src/stm32f30x_gpio.c ****     currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 184              		.loc 1 191 0
 185 0128 3B68     		ldr	r3, [r7, #0]
 186 012a 1A68     		ldr	r2, [r3, #0]
 187 012c 3B69     		ldr	r3, [r7, #16]
 188 012e 1340     		ands	r3, r3, r2
 189 0130 FB60     		str	r3, [r7, #12]
 192:../src/stm32f30x_gpio.c **** 
 193:../src/stm32f30x_gpio.c ****     if (currentpin == pos)
 190              		.loc 1 193 0
 191 0132 FA68     		ldr	r2, [r7, #12]
 192 0134 3B69     		ldr	r3, [r7, #16]
 193 0136 9A42     		cmp	r2, r3
 194 0138 79D1     		bne	.L10
 194:../src/stm32f30x_gpio.c ****     {
 195:../src/stm32f30x_gpio.c ****       if ((GPIO_InitStruct->GPIO_Mode == GPIO_Mode_OUT) || (GPIO_InitStruct->GPIO_Mode == GPIO_Mode
 195              		.loc 1 195 0
 196 013a 3B68     		ldr	r3, [r7, #0]
 197 013c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 198 013e 012B     		cmp	r3, #1
 199 0140 03D0     		beq	.L11
 200              		.loc 1 195 0 is_stmt 0 discriminator 1
 201 0142 3B68     		ldr	r3, [r7, #0]
 202 0144 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 203 0146 022B     		cmp	r3, #2
 204 0148 3AD1     		bne	.L12
 205              	.L11:
 196:../src/stm32f30x_gpio.c ****       {
 197:../src/stm32f30x_gpio.c ****         /* Check Speed mode parameters */
 198:../src/stm32f30x_gpio.c ****         assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
 199:../src/stm32f30x_gpio.c **** 
 200:../src/stm32f30x_gpio.c ****         /* Speed mode configuration */
 201:../src/stm32f30x_gpio.c ****         GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (pinpos * 2));
 206              		.loc 1 201 0 is_stmt 1
 207 014a 7B68     		ldr	r3, [r7, #4]
 208 014c 9A68     		ldr	r2, [r3, #8]
 209 014e 7B69     		ldr	r3, [r7, #20]
 210 0150 4FEA4303 		lsl	r3, r3, #1
 211 0154 4FF00301 		mov	r1, #3
 212 0158 01FA03F3 		lsl	r3, r1, r3
 213 015c 6FEA0303 		mvn	r3, r3
 214 0160 1A40     		ands	r2, r2, r3
 215 0162 7B68     		ldr	r3, [r7, #4]
 216 0164 9A60     		str	r2, [r3, #8]
 202:../src/stm32f30x_gpio.c ****         GPIOx->OSPEEDR |= ((uint32_t)(GPIO_InitStruct->GPIO_Speed) << (pinpos * 2));
 217              		.loc 1 202 0
 218 0166 7B68     		ldr	r3, [r7, #4]
 219 0168 9A68     		ldr	r2, [r3, #8]
 220 016a 3B68     		ldr	r3, [r7, #0]
 221 016c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 222 016e 1946     		mov	r1, r3
 223 0170 7B69     		ldr	r3, [r7, #20]
 224 0172 4FEA4303 		lsl	r3, r3, #1
 225 0176 01FA03F3 		lsl	r3, r1, r3
 226 017a 1A43     		orrs	r2, r2, r3
 227 017c 7B68     		ldr	r3, [r7, #4]
 228 017e 9A60     		str	r2, [r3, #8]
 203:../src/stm32f30x_gpio.c **** 
 204:../src/stm32f30x_gpio.c ****         /* Check Output mode parameters */
 205:../src/stm32f30x_gpio.c ****         assert_param(IS_GPIO_OTYPE(GPIO_InitStruct->GPIO_OType));
 206:../src/stm32f30x_gpio.c **** 
 207:../src/stm32f30x_gpio.c ****         /* Output mode configuration */
 208:../src/stm32f30x_gpio.c ****         GPIOx->OTYPER &= ~((GPIO_OTYPER_OT_0) << ((uint16_t)pinpos));
 229              		.loc 1 208 0
 230 0180 7B68     		ldr	r3, [r7, #4]
 231 0182 9B88     		ldrh	r3, [r3, #4]	@ movhi
 232 0184 9AB2     		uxth	r2, r3
 233 0186 7B69     		ldr	r3, [r7, #20]
 234 0188 9BB2     		uxth	r3, r3
 235 018a 4FF00101 		mov	r1, #1
 236 018e 01FA03F3 		lsl	r3, r1, r3
 237 0192 9BB2     		uxth	r3, r3
 238 0194 6FEA0303 		mvn	r3, r3
 239 0198 9BB2     		uxth	r3, r3
 240 019a 1340     		ands	r3, r3, r2
 241 019c 9AB2     		uxth	r2, r3
 242 019e 7B68     		ldr	r3, [r7, #4]
 243 01a0 9A80     		strh	r2, [r3, #4]	@ movhi
 209:../src/stm32f30x_gpio.c ****         GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
 244              		.loc 1 209 0
 245 01a2 7B68     		ldr	r3, [r7, #4]
 246 01a4 9B88     		ldrh	r3, [r3, #4]	@ movhi
 247 01a6 9AB2     		uxth	r2, r3
 248 01a8 3B68     		ldr	r3, [r7, #0]
 249 01aa 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 250 01ac 1946     		mov	r1, r3
 251 01ae 7B69     		ldr	r3, [r7, #20]
 252 01b0 9BB2     		uxth	r3, r3
 253 01b2 01FA03F3 		lsl	r3, r1, r3
 254 01b6 9BB2     		uxth	r3, r3
 255 01b8 1343     		orrs	r3, r3, r2
 256 01ba 9AB2     		uxth	r2, r3
 257 01bc 7B68     		ldr	r3, [r7, #4]
 258 01be 9A80     		strh	r2, [r3, #4]	@ movhi
 259              	.L12:
 210:../src/stm32f30x_gpio.c ****       }
 211:../src/stm32f30x_gpio.c ****       
 212:../src/stm32f30x_gpio.c ****       GPIOx->MODER  &= ~(GPIO_MODER_MODER0 << (pinpos * 2));
 260              		.loc 1 212 0
 261 01c0 7B68     		ldr	r3, [r7, #4]
 262 01c2 1A68     		ldr	r2, [r3, #0]
 263 01c4 7B69     		ldr	r3, [r7, #20]
 264 01c6 4FEA4303 		lsl	r3, r3, #1
 265 01ca 4FF00301 		mov	r1, #3
 266 01ce 01FA03F3 		lsl	r3, r1, r3
 267 01d2 6FEA0303 		mvn	r3, r3
 268 01d6 1A40     		ands	r2, r2, r3
 269 01d8 7B68     		ldr	r3, [r7, #4]
 270 01da 1A60     		str	r2, [r3, #0]
 213:../src/stm32f30x_gpio.c **** 
 214:../src/stm32f30x_gpio.c ****       GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
 271              		.loc 1 214 0
 272 01dc 7B68     		ldr	r3, [r7, #4]
 273 01de 1A68     		ldr	r2, [r3, #0]
 274 01e0 3B68     		ldr	r3, [r7, #0]
 275 01e2 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 276 01e4 1946     		mov	r1, r3
 277 01e6 7B69     		ldr	r3, [r7, #20]
 278 01e8 4FEA4303 		lsl	r3, r3, #1
 279 01ec 01FA03F3 		lsl	r3, r1, r3
 280 01f0 1A43     		orrs	r2, r2, r3
 281 01f2 7B68     		ldr	r3, [r7, #4]
 282 01f4 1A60     		str	r2, [r3, #0]
 215:../src/stm32f30x_gpio.c **** 
 216:../src/stm32f30x_gpio.c ****       /* Pull-up Pull down resistor configuration */
 217:../src/stm32f30x_gpio.c ****       GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << ((uint16_t)pinpos * 2));
 283              		.loc 1 217 0
 284 01f6 7B68     		ldr	r3, [r7, #4]
 285 01f8 DA68     		ldr	r2, [r3, #12]
 286 01fa 7B69     		ldr	r3, [r7, #20]
 287 01fc 9BB2     		uxth	r3, r3
 288 01fe 4FEA4303 		lsl	r3, r3, #1
 289 0202 4FF00301 		mov	r1, #3
 290 0206 01FA03F3 		lsl	r3, r1, r3
 291 020a 6FEA0303 		mvn	r3, r3
 292 020e 1A40     		ands	r2, r2, r3
 293 0210 7B68     		ldr	r3, [r7, #4]
 294 0212 DA60     		str	r2, [r3, #12]
 218:../src/stm32f30x_gpio.c ****       GPIOx->PUPDR |= (((uint32_t)GPIO_InitStruct->GPIO_PuPd) << (pinpos * 2));
 295              		.loc 1 218 0
 296 0214 7B68     		ldr	r3, [r7, #4]
 297 0216 DA68     		ldr	r2, [r3, #12]
 298 0218 3B68     		ldr	r3, [r7, #0]
 299 021a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 300 021c 1946     		mov	r1, r3
 301 021e 7B69     		ldr	r3, [r7, #20]
 302 0220 4FEA4303 		lsl	r3, r3, #1
 303 0224 01FA03F3 		lsl	r3, r1, r3
 304 0228 1A43     		orrs	r2, r2, r3
 305 022a 7B68     		ldr	r3, [r7, #4]
 306 022c DA60     		str	r2, [r3, #12]
 307              	.L10:
 186:../src/stm32f30x_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 308              		.loc 1 186 0
 309 022e 7B69     		ldr	r3, [r7, #20]
 310 0230 03F10103 		add	r3, r3, #1
 311 0234 7B61     		str	r3, [r7, #20]
 312              	.L9:
 186:../src/stm32f30x_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 313              		.loc 1 186 0 is_stmt 0 discriminator 1
 314 0236 7B69     		ldr	r3, [r7, #20]
 315 0238 0F2B     		cmp	r3, #15
 316 023a 7FF66FAF 		bls	.L13
 219:../src/stm32f30x_gpio.c ****     }
 220:../src/stm32f30x_gpio.c ****   }
 221:../src/stm32f30x_gpio.c **** }
 317              		.loc 1 221 0 is_stmt 1
 318 023e 07F11C07 		add	r7, r7, #28
 319 0242 BD46     		mov	sp, r7
 320 0244 80BC     		pop	{r7}
 321 0246 7047     		bx	lr
 322              		.cfi_endproc
 323              	.LFE112:
 325              		.align	2
 326              		.global	GPIO_StructInit
 327              		.thumb
 328              		.thumb_func
 330              	GPIO_StructInit:
 331              	.LFB113:
 222:../src/stm32f30x_gpio.c **** 
 223:../src/stm32f30x_gpio.c **** /**
 224:../src/stm32f30x_gpio.c ****   * @brief  Fills each GPIO_InitStruct member with its default value.
 225:../src/stm32f30x_gpio.c ****   * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure which will 
 226:../src/stm32f30x_gpio.c ****   *         be initialized.
 227:../src/stm32f30x_gpio.c ****   * @retval None
 228:../src/stm32f30x_gpio.c ****   */
 229:../src/stm32f30x_gpio.c **** void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
 230:../src/stm32f30x_gpio.c **** {
 332              		.loc 1 230 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 8
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 337 0248 80B4     		push	{r7}
 338              	.LCFI6:
 339              		.cfi_def_cfa_offset 4
 340              		.cfi_offset 7, -4
 341 024a 83B0     		sub	sp, sp, #12
 342              	.LCFI7:
 343              		.cfi_def_cfa_offset 16
 344 024c 00AF     		add	r7, sp, #0
 345              	.LCFI8:
 346              		.cfi_def_cfa_register 7
 347 024e 7860     		str	r0, [r7, #4]
 231:../src/stm32f30x_gpio.c ****   /* Reset GPIO init structure parameters values */
 232:../src/stm32f30x_gpio.c ****   GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
 348              		.loc 1 232 0
 349 0250 7B68     		ldr	r3, [r7, #4]
 350 0252 4FF6FF72 		movw	r2, #65535
 351 0256 1A60     		str	r2, [r3, #0]
 233:../src/stm32f30x_gpio.c ****   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN;
 352              		.loc 1 233 0
 353 0258 7B68     		ldr	r3, [r7, #4]
 354 025a 4FF00002 		mov	r2, #0
 355 025e 1A71     		strb	r2, [r3, #4]
 234:../src/stm32f30x_gpio.c ****   GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
 356              		.loc 1 234 0
 357 0260 7B68     		ldr	r3, [r7, #4]
 358 0262 4FF00202 		mov	r2, #2
 359 0266 5A71     		strb	r2, [r3, #5]
 235:../src/stm32f30x_gpio.c ****   GPIO_InitStruct->GPIO_OType = GPIO_OType_PP;
 360              		.loc 1 235 0
 361 0268 7B68     		ldr	r3, [r7, #4]
 362 026a 4FF00002 		mov	r2, #0
 363 026e 9A71     		strb	r2, [r3, #6]
 236:../src/stm32f30x_gpio.c ****   GPIO_InitStruct->GPIO_PuPd = GPIO_PuPd_NOPULL;
 364              		.loc 1 236 0
 365 0270 7B68     		ldr	r3, [r7, #4]
 366 0272 4FF00002 		mov	r2, #0
 367 0276 DA71     		strb	r2, [r3, #7]
 237:../src/stm32f30x_gpio.c **** }
 368              		.loc 1 237 0
 369 0278 07F10C07 		add	r7, r7, #12
 370 027c BD46     		mov	sp, r7
 371 027e 80BC     		pop	{r7}
 372 0280 7047     		bx	lr
 373              		.cfi_endproc
 374              	.LFE113:
 376 0282 00BF     		.align	2
 377              		.global	GPIO_PinLockConfig
 378              		.thumb
 379              		.thumb_func
 381              	GPIO_PinLockConfig:
 382              	.LFB114:
 238:../src/stm32f30x_gpio.c **** 
 239:../src/stm32f30x_gpio.c **** /**
 240:../src/stm32f30x_gpio.c ****   * @brief  Locks GPIO Pins configuration registers.
 241:../src/stm32f30x_gpio.c ****   *         The locked registers are GPIOx_MODER, GPIOx_OTYPER, GPIOx_OSPEEDR,
 242:../src/stm32f30x_gpio.c ****   *         GPIOx_PUPDR, GPIOx_AFRL and GPIOx_AFRH.
 243:../src/stm32f30x_gpio.c ****   * @note   The configuration of the locked GPIO pins can no longer be modified
 244:../src/stm32f30x_gpio.c ****   *         until the next reset.
 245:../src/stm32f30x_gpio.c ****   * @param  GPIOx: where x can be (A or B or D) to select the GPIO peripheral.
 246:../src/stm32f30x_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
 247:../src/stm32f30x_gpio.c ****   *   This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 248:../src/stm32f30x_gpio.c ****   * @retval None
 249:../src/stm32f30x_gpio.c ****   */
 250:../src/stm32f30x_gpio.c **** void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 251:../src/stm32f30x_gpio.c **** {
 383              		.loc 1 251 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 16
 386              		@ frame_needed = 1, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 388 0284 80B4     		push	{r7}
 389              	.LCFI9:
 390              		.cfi_def_cfa_offset 4
 391              		.cfi_offset 7, -4
 392 0286 85B0     		sub	sp, sp, #20
 393              	.LCFI10:
 394              		.cfi_def_cfa_offset 24
 395 0288 00AF     		add	r7, sp, #0
 396              	.LCFI11:
 397              		.cfi_def_cfa_register 7
 398 028a 7860     		str	r0, [r7, #4]
 399 028c 0B46     		mov	r3, r1
 400 028e 7B80     		strh	r3, [r7, #2]	@ movhi
 252:../src/stm32f30x_gpio.c ****   uint32_t tmp = 0x00010000;
 401              		.loc 1 252 0
 402 0290 4FF48033 		mov	r3, #65536
 403 0294 FB60     		str	r3, [r7, #12]
 253:../src/stm32f30x_gpio.c ****   
 254:../src/stm32f30x_gpio.c ****   /* Check the parameters */
 255:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_LIST_PERIPH(GPIOx));
 256:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 257:../src/stm32f30x_gpio.c ****   
 258:../src/stm32f30x_gpio.c ****   tmp |= GPIO_Pin;
 404              		.loc 1 258 0
 405 0296 7B88     		ldrh	r3, [r7, #2]
 406 0298 FA68     		ldr	r2, [r7, #12]
 407 029a 1343     		orrs	r3, r3, r2
 408 029c FB60     		str	r3, [r7, #12]
 259:../src/stm32f30x_gpio.c ****   /* Set LCKK bit */
 260:../src/stm32f30x_gpio.c ****   GPIOx->LCKR = tmp;
 409              		.loc 1 260 0
 410 029e 7B68     		ldr	r3, [r7, #4]
 411 02a0 FA68     		ldr	r2, [r7, #12]
 412 02a2 DA61     		str	r2, [r3, #28]
 261:../src/stm32f30x_gpio.c ****   /* Reset LCKK bit */
 262:../src/stm32f30x_gpio.c ****   GPIOx->LCKR =  GPIO_Pin;
 413              		.loc 1 262 0
 414 02a4 7A88     		ldrh	r2, [r7, #2]
 415 02a6 7B68     		ldr	r3, [r7, #4]
 416 02a8 DA61     		str	r2, [r3, #28]
 263:../src/stm32f30x_gpio.c ****   /* Set LCKK bit */
 264:../src/stm32f30x_gpio.c ****   GPIOx->LCKR = tmp;
 417              		.loc 1 264 0
 418 02aa 7B68     		ldr	r3, [r7, #4]
 419 02ac FA68     		ldr	r2, [r7, #12]
 420 02ae DA61     		str	r2, [r3, #28]
 265:../src/stm32f30x_gpio.c ****   /* Read LCKK bit */
 266:../src/stm32f30x_gpio.c ****   tmp = GPIOx->LCKR;
 421              		.loc 1 266 0
 422 02b0 7B68     		ldr	r3, [r7, #4]
 423 02b2 DB69     		ldr	r3, [r3, #28]
 424 02b4 FB60     		str	r3, [r7, #12]
 267:../src/stm32f30x_gpio.c ****   /* Read LCKK bit */
 268:../src/stm32f30x_gpio.c ****   tmp = GPIOx->LCKR;
 425              		.loc 1 268 0
 426 02b6 7B68     		ldr	r3, [r7, #4]
 427 02b8 DB69     		ldr	r3, [r3, #28]
 428 02ba FB60     		str	r3, [r7, #12]
 269:../src/stm32f30x_gpio.c **** }
 429              		.loc 1 269 0
 430 02bc 07F11407 		add	r7, r7, #20
 431 02c0 BD46     		mov	sp, r7
 432 02c2 80BC     		pop	{r7}
 433 02c4 7047     		bx	lr
 434              		.cfi_endproc
 435              	.LFE114:
 437 02c6 00BF     		.align	2
 438              		.global	GPIO_ReadInputDataBit
 439              		.thumb
 440              		.thumb_func
 442              	GPIO_ReadInputDataBit:
 443              	.LFB115:
 270:../src/stm32f30x_gpio.c **** 
 271:../src/stm32f30x_gpio.c **** /**
 272:../src/stm32f30x_gpio.c ****   * @}
 273:../src/stm32f30x_gpio.c ****   */
 274:../src/stm32f30x_gpio.c ****   
 275:../src/stm32f30x_gpio.c **** /** @defgroup GPIO_Group2 GPIO Read and Write
 276:../src/stm32f30x_gpio.c ****  *  @brief    GPIO Read and Write
 277:../src/stm32f30x_gpio.c ****  *
 278:../src/stm32f30x_gpio.c **** @verbatim
 279:../src/stm32f30x_gpio.c ****  ===============================================================================
 280:../src/stm32f30x_gpio.c ****                   ##### GPIO Read and Write #####
 281:../src/stm32f30x_gpio.c ****  ===============================================================================  
 282:../src/stm32f30x_gpio.c **** 
 283:../src/stm32f30x_gpio.c **** @endverbatim
 284:../src/stm32f30x_gpio.c ****   * @{
 285:../src/stm32f30x_gpio.c ****   */   
 286:../src/stm32f30x_gpio.c **** 
 287:../src/stm32f30x_gpio.c **** /**
 288:../src/stm32f30x_gpio.c ****   * @brief  Reads the specified input port pin.
 289:../src/stm32f30x_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 290:../src/stm32f30x_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 291:../src/stm32f30x_gpio.c ****   * @note   This parameter can be GPIO_Pin_x where x can be :
 292:../src/stm32f30x_gpio.c ****   *         (0..15) for GPIOA, GPIOB, GPIOC, GPIOD or GPIOE;
 293:../src/stm32f30x_gpio.c ****   *         (0..2, 4, 6, 9..10) for GPIOF.
 294:../src/stm32f30x_gpio.c ****   * @retval The input port pin value.
 295:../src/stm32f30x_gpio.c ****   */
 296:../src/stm32f30x_gpio.c **** uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 297:../src/stm32f30x_gpio.c **** {
 444              		.loc 1 297 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 16
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448              		@ link register save eliminated.
 449 02c8 80B4     		push	{r7}
 450              	.LCFI12:
 451              		.cfi_def_cfa_offset 4
 452              		.cfi_offset 7, -4
 453 02ca 85B0     		sub	sp, sp, #20
 454              	.LCFI13:
 455              		.cfi_def_cfa_offset 24
 456 02cc 00AF     		add	r7, sp, #0
 457              	.LCFI14:
 458              		.cfi_def_cfa_register 7
 459 02ce 7860     		str	r0, [r7, #4]
 460 02d0 0B46     		mov	r3, r1
 461 02d2 7B80     		strh	r3, [r7, #2]	@ movhi
 298:../src/stm32f30x_gpio.c ****   uint8_t bitstatus = 0x00;
 462              		.loc 1 298 0
 463 02d4 4FF00003 		mov	r3, #0
 464 02d8 FB73     		strb	r3, [r7, #15]
 299:../src/stm32f30x_gpio.c ****   
 300:../src/stm32f30x_gpio.c ****   /* Check the parameters */
 301:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 302:../src/stm32f30x_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 303:../src/stm32f30x_gpio.c **** 
 304:../src/stm32f30x_gpio.c ****   if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)Bit_RESET)
 465              		.loc 1 304 0
 466 02da 7B68     		ldr	r3, [r7, #4]
 467 02dc 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 468 02de 9AB2     		uxth	r2, r3
 469 02e0 7B88     		ldrh	r3, [r7, #2]	@ movhi
 470 02e2 1340     		ands	r3, r3, r2
 471 02e4 9BB2     		uxth	r3, r3
 472 02e6 002B     		cmp	r3, #0
 473 02e8 03D0     		beq	.L17
 305:../src/stm32f30x_gpio.c ****   {
 306:../src/stm32f30x_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 474              		.loc 1 306 0
 475 02ea 4FF00103 		mov	r3, #1
 476 02ee FB73     		strb	r3, [r7, #15]
 477 02f0 02E0     		b	.L18
 478              	.L17:
 307:../src/stm32f30x_gpio.c ****   }
 308:../src/stm32f30x_gpio.c ****   else
 309:../src/stm32f30x_gpio.c ****   {
 310:../src/stm32f30x_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 479              		.loc 1 310 0
 480 02f2 4FF00003 		mov	r3, #0
 481 02f6 FB73     		strb	r3, [r7, #15]
 482              	.L18:
 311:../src/stm32f30x_gpio.c ****   }
 312:../src/stm32f30x_gpio.c ****   return bitstatus;
 483              		.loc 1 312 0
 484 02f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 313:../src/stm32f30x_gpio.c **** }
 485              		.loc 1 313 0
 486 02fa 1846     		mov	r0, r3
 487 02fc 07F11407 		add	r7, r7, #20
 488 0300 BD46     		mov	sp, r7
 489 0302 80BC     		pop	{r7}
 490 0304 7047     		bx	lr
 491              		.cfi_endproc
 492              	.LFE115:
 494 0306 00BF     		.align	2
 495              		.global	GPIO_ReadInputData
 496              		.thumb
 497              		.thumb_func
 499              	GPIO_ReadInputData:
 500              	.LFB116:
 314:../src/stm32f30x_gpio.c **** 
 315:../src/stm32f30x_gpio.c **** /**
 316:../src/stm32f30x_gpio.c ****   * @brief  Reads the specified input port pin.
 317:../src/stm32f30x_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 318:../src/stm32f30x_gpio.c ****   * @retval The input port pin value.
 319:../src/stm32f30x_gpio.c ****   */
 320:../src/stm32f30x_gpio.c **** uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
 321:../src/stm32f30x_gpio.c **** {
 501              		.loc 1 321 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 8
 504              		@ frame_needed = 1, uses_anonymous_args = 0
 505              		@ link register save eliminated.
 506 0308 80B4     		push	{r7}
 507              	.LCFI15:
 508              		.cfi_def_cfa_offset 4
 509              		.cfi_offset 7, -4
 510 030a 83B0     		sub	sp, sp, #12
 511              	.LCFI16:
 512              		.cfi_def_cfa_offset 16
 513 030c 00AF     		add	r7, sp, #0
 514              	.LCFI17:
 515              		.cfi_def_cfa_register 7
 516 030e 7860     		str	r0, [r7, #4]
 322:../src/stm32f30x_gpio.c ****   /* Check the parameters */
 323:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 324:../src/stm32f30x_gpio.c **** 
 325:../src/stm32f30x_gpio.c ****   return ((uint16_t)GPIOx->IDR);
 517              		.loc 1 325 0
 518 0310 7B68     		ldr	r3, [r7, #4]
 519 0312 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 520 0314 9BB2     		uxth	r3, r3
 326:../src/stm32f30x_gpio.c **** }
 521              		.loc 1 326 0
 522 0316 1846     		mov	r0, r3
 523 0318 07F10C07 		add	r7, r7, #12
 524 031c BD46     		mov	sp, r7
 525 031e 80BC     		pop	{r7}
 526 0320 7047     		bx	lr
 527              		.cfi_endproc
 528              	.LFE116:
 530 0322 00BF     		.align	2
 531              		.global	GPIO_ReadOutputDataBit
 532              		.thumb
 533              		.thumb_func
 535              	GPIO_ReadOutputDataBit:
 536              	.LFB117:
 327:../src/stm32f30x_gpio.c **** 
 328:../src/stm32f30x_gpio.c **** /**
 329:../src/stm32f30x_gpio.c ****   * @brief  Reads the specified output data port bit.
 330:../src/stm32f30x_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 331:../src/stm32f30x_gpio.c ****   * @param  GPIO_Pin: Specifies the port bit to read.
 332:../src/stm32f30x_gpio.c ****   * @note   This parameter can be GPIO_Pin_x where x can be :
 333:../src/stm32f30x_gpio.c ****   *         (0..15) for GPIOA, GPIOB, GPIOC, GPIOD or GPIOE;
 334:../src/stm32f30x_gpio.c ****   *         (0..2, 4, 6, 9..10) for GPIOF.
 335:../src/stm32f30x_gpio.c ****   * @retval The output port pin value.
 336:../src/stm32f30x_gpio.c ****   */
 337:../src/stm32f30x_gpio.c **** uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 338:../src/stm32f30x_gpio.c **** {
 537              		.loc 1 338 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 16
 540              		@ frame_needed = 1, uses_anonymous_args = 0
 541              		@ link register save eliminated.
 542 0324 80B4     		push	{r7}
 543              	.LCFI18:
 544              		.cfi_def_cfa_offset 4
 545              		.cfi_offset 7, -4
 546 0326 85B0     		sub	sp, sp, #20
 547              	.LCFI19:
 548              		.cfi_def_cfa_offset 24
 549 0328 00AF     		add	r7, sp, #0
 550              	.LCFI20:
 551              		.cfi_def_cfa_register 7
 552 032a 7860     		str	r0, [r7, #4]
 553 032c 0B46     		mov	r3, r1
 554 032e 7B80     		strh	r3, [r7, #2]	@ movhi
 339:../src/stm32f30x_gpio.c ****   uint8_t bitstatus = 0x00;
 555              		.loc 1 339 0
 556 0330 4FF00003 		mov	r3, #0
 557 0334 FB73     		strb	r3, [r7, #15]
 340:../src/stm32f30x_gpio.c **** 
 341:../src/stm32f30x_gpio.c ****   /* Check the parameters */
 342:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 343:../src/stm32f30x_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 344:../src/stm32f30x_gpio.c ****   
 345:../src/stm32f30x_gpio.c ****   if ((GPIOx->ODR & GPIO_Pin) != (uint32_t)Bit_RESET)
 558              		.loc 1 345 0
 559 0336 7B68     		ldr	r3, [r7, #4]
 560 0338 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 561 033a 9AB2     		uxth	r2, r3
 562 033c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 563 033e 1340     		ands	r3, r3, r2
 564 0340 9BB2     		uxth	r3, r3
 565 0342 002B     		cmp	r3, #0
 566 0344 03D0     		beq	.L23
 346:../src/stm32f30x_gpio.c ****   {
 347:../src/stm32f30x_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 567              		.loc 1 347 0
 568 0346 4FF00103 		mov	r3, #1
 569 034a FB73     		strb	r3, [r7, #15]
 570 034c 02E0     		b	.L24
 571              	.L23:
 348:../src/stm32f30x_gpio.c ****   }
 349:../src/stm32f30x_gpio.c ****   else
 350:../src/stm32f30x_gpio.c ****   {
 351:../src/stm32f30x_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 572              		.loc 1 351 0
 573 034e 4FF00003 		mov	r3, #0
 574 0352 FB73     		strb	r3, [r7, #15]
 575              	.L24:
 352:../src/stm32f30x_gpio.c ****   }
 353:../src/stm32f30x_gpio.c ****   return bitstatus;
 576              		.loc 1 353 0
 577 0354 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 354:../src/stm32f30x_gpio.c **** }
 578              		.loc 1 354 0
 579 0356 1846     		mov	r0, r3
 580 0358 07F11407 		add	r7, r7, #20
 581 035c BD46     		mov	sp, r7
 582 035e 80BC     		pop	{r7}
 583 0360 7047     		bx	lr
 584              		.cfi_endproc
 585              	.LFE117:
 587 0362 00BF     		.align	2
 588              		.global	GPIO_ReadOutputData
 589              		.thumb
 590              		.thumb_func
 592              	GPIO_ReadOutputData:
 593              	.LFB118:
 355:../src/stm32f30x_gpio.c **** 
 356:../src/stm32f30x_gpio.c **** /**
 357:../src/stm32f30x_gpio.c ****   * @brief  Reads the specified GPIO output data port.
 358:../src/stm32f30x_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 359:../src/stm32f30x_gpio.c ****   * @retval GPIO output data port value.
 360:../src/stm32f30x_gpio.c ****   */
 361:../src/stm32f30x_gpio.c **** uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
 362:../src/stm32f30x_gpio.c **** {
 594              		.loc 1 362 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 8
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 599 0364 80B4     		push	{r7}
 600              	.LCFI21:
 601              		.cfi_def_cfa_offset 4
 602              		.cfi_offset 7, -4
 603 0366 83B0     		sub	sp, sp, #12
 604              	.LCFI22:
 605              		.cfi_def_cfa_offset 16
 606 0368 00AF     		add	r7, sp, #0
 607              	.LCFI23:
 608              		.cfi_def_cfa_register 7
 609 036a 7860     		str	r0, [r7, #4]
 363:../src/stm32f30x_gpio.c ****   /* Check the parameters */
 364:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 365:../src/stm32f30x_gpio.c ****   
 366:../src/stm32f30x_gpio.c ****   return ((uint16_t)GPIOx->ODR);
 610              		.loc 1 366 0
 611 036c 7B68     		ldr	r3, [r7, #4]
 612 036e 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 613 0370 9BB2     		uxth	r3, r3
 367:../src/stm32f30x_gpio.c **** }
 614              		.loc 1 367 0
 615 0372 1846     		mov	r0, r3
 616 0374 07F10C07 		add	r7, r7, #12
 617 0378 BD46     		mov	sp, r7
 618 037a 80BC     		pop	{r7}
 619 037c 7047     		bx	lr
 620              		.cfi_endproc
 621              	.LFE118:
 623 037e 00BF     		.align	2
 624              		.global	GPIO_SetBits
 625              		.thumb
 626              		.thumb_func
 628              	GPIO_SetBits:
 629              	.LFB119:
 368:../src/stm32f30x_gpio.c **** 
 369:../src/stm32f30x_gpio.c **** /**
 370:../src/stm32f30x_gpio.c ****   * @brief  Sets the selected data port bits.
 371:../src/stm32f30x_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 372:../src/stm32f30x_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 373:../src/stm32f30x_gpio.c ****   * @note   This parameter can be GPIO_Pin_x where x can be :
 374:../src/stm32f30x_gpio.c ****   *         (0..15) for GPIOA, GPIOB, GPIOC, GPIOD or GPIOE;
 375:../src/stm32f30x_gpio.c ****   *         (0..2, 4, 6, 9..10) for GPIOF.
 376:../src/stm32f30x_gpio.c ****   * @retval None
 377:../src/stm32f30x_gpio.c ****   */
 378:../src/stm32f30x_gpio.c **** void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 379:../src/stm32f30x_gpio.c **** {
 630              		.loc 1 379 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 8
 633              		@ frame_needed = 1, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 635 0380 80B4     		push	{r7}
 636              	.LCFI24:
 637              		.cfi_def_cfa_offset 4
 638              		.cfi_offset 7, -4
 639 0382 83B0     		sub	sp, sp, #12
 640              	.LCFI25:
 641              		.cfi_def_cfa_offset 16
 642 0384 00AF     		add	r7, sp, #0
 643              	.LCFI26:
 644              		.cfi_def_cfa_register 7
 645 0386 7860     		str	r0, [r7, #4]
 646 0388 0B46     		mov	r3, r1
 647 038a 7B80     		strh	r3, [r7, #2]	@ movhi
 380:../src/stm32f30x_gpio.c ****   /* Check the parameters */
 381:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 382:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 383:../src/stm32f30x_gpio.c ****   
 384:../src/stm32f30x_gpio.c ****   GPIOx->BSRR = GPIO_Pin;
 648              		.loc 1 384 0
 649 038c 7A88     		ldrh	r2, [r7, #2]
 650 038e 7B68     		ldr	r3, [r7, #4]
 651 0390 9A61     		str	r2, [r3, #24]
 385:../src/stm32f30x_gpio.c **** }
 652              		.loc 1 385 0
 653 0392 07F10C07 		add	r7, r7, #12
 654 0396 BD46     		mov	sp, r7
 655 0398 80BC     		pop	{r7}
 656 039a 7047     		bx	lr
 657              		.cfi_endproc
 658              	.LFE119:
 660              		.align	2
 661              		.global	GPIO_ResetBits
 662              		.thumb
 663              		.thumb_func
 665              	GPIO_ResetBits:
 666              	.LFB120:
 386:../src/stm32f30x_gpio.c **** 
 387:../src/stm32f30x_gpio.c **** /**
 388:../src/stm32f30x_gpio.c ****   * @brief  Clears the selected data port bits.
 389:../src/stm32f30x_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 390:../src/stm32f30x_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 391:../src/stm32f30x_gpio.c ****   * @note   This parameter can be GPIO_Pin_x where x can be :
 392:../src/stm32f30x_gpio.c ****   *         (0..15) for GPIOA, GPIOB, GPIOC, GPIOD or GPIOE;
 393:../src/stm32f30x_gpio.c ****   *         (0..2, 4, 6, 9..10) for GPIOF.
 394:../src/stm32f30x_gpio.c ****   * @retval None
 395:../src/stm32f30x_gpio.c ****   */
 396:../src/stm32f30x_gpio.c **** void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 397:../src/stm32f30x_gpio.c **** {
 667              		.loc 1 397 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 8
 670              		@ frame_needed = 1, uses_anonymous_args = 0
 671              		@ link register save eliminated.
 672 039c 80B4     		push	{r7}
 673              	.LCFI27:
 674              		.cfi_def_cfa_offset 4
 675              		.cfi_offset 7, -4
 676 039e 83B0     		sub	sp, sp, #12
 677              	.LCFI28:
 678              		.cfi_def_cfa_offset 16
 679 03a0 00AF     		add	r7, sp, #0
 680              	.LCFI29:
 681              		.cfi_def_cfa_register 7
 682 03a2 7860     		str	r0, [r7, #4]
 683 03a4 0B46     		mov	r3, r1
 684 03a6 7B80     		strh	r3, [r7, #2]	@ movhi
 398:../src/stm32f30x_gpio.c ****   /* Check the parameters */
 399:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 400:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 401:../src/stm32f30x_gpio.c ****   
 402:../src/stm32f30x_gpio.c ****   GPIOx->BRR = GPIO_Pin;
 685              		.loc 1 402 0
 686 03a8 7B68     		ldr	r3, [r7, #4]
 687 03aa 7A88     		ldrh	r2, [r7, #2]	@ movhi
 688 03ac 1A85     		strh	r2, [r3, #40]	@ movhi
 403:../src/stm32f30x_gpio.c **** }
 689              		.loc 1 403 0
 690 03ae 07F10C07 		add	r7, r7, #12
 691 03b2 BD46     		mov	sp, r7
 692 03b4 80BC     		pop	{r7}
 693 03b6 7047     		bx	lr
 694              		.cfi_endproc
 695              	.LFE120:
 697              		.align	2
 698              		.global	GPIO_WriteBit
 699              		.thumb
 700              		.thumb_func
 702              	GPIO_WriteBit:
 703              	.LFB121:
 404:../src/stm32f30x_gpio.c **** 
 405:../src/stm32f30x_gpio.c **** /**
 406:../src/stm32f30x_gpio.c ****   * @brief  Sets or clears the selected data port bit.
 407:../src/stm32f30x_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 408:../src/stm32f30x_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
 409:../src/stm32f30x_gpio.c ****   * @note   This parameter can be GPIO_Pin_x where x can be :
 410:../src/stm32f30x_gpio.c ****   *         (0..15) for GPIOA, GPIOB, GPIOC, GPIOD or GPIOE;
 411:../src/stm32f30x_gpio.c ****   *         (0..2, 4, 6, 9..10) for GPIOF.
 412:../src/stm32f30x_gpio.c ****   * @param  BitVal: specifies the value to be written to the selected bit.
 413:../src/stm32f30x_gpio.c ****   *   This parameter can be one of the BitAction enumeration values:
 414:../src/stm32f30x_gpio.c ****   *     @arg Bit_RESET: to clear the port pin
 415:../src/stm32f30x_gpio.c ****   *     @arg Bit_SET: to set the port pin
 416:../src/stm32f30x_gpio.c ****   * @retval None
 417:../src/stm32f30x_gpio.c ****   */
 418:../src/stm32f30x_gpio.c **** void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
 419:../src/stm32f30x_gpio.c **** {
 704              		.loc 1 419 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 8
 707              		@ frame_needed = 1, uses_anonymous_args = 0
 708              		@ link register save eliminated.
 709 03b8 80B4     		push	{r7}
 710              	.LCFI30:
 711              		.cfi_def_cfa_offset 4
 712              		.cfi_offset 7, -4
 713 03ba 83B0     		sub	sp, sp, #12
 714              	.LCFI31:
 715              		.cfi_def_cfa_offset 16
 716 03bc 00AF     		add	r7, sp, #0
 717              	.LCFI32:
 718              		.cfi_def_cfa_register 7
 719 03be 7860     		str	r0, [r7, #4]
 720 03c0 1346     		mov	r3, r2
 721 03c2 0A46     		mov	r2, r1	@ movhi
 722 03c4 7A80     		strh	r2, [r7, #2]	@ movhi
 723 03c6 7B70     		strb	r3, [r7, #1]
 420:../src/stm32f30x_gpio.c ****   /* Check the parameters */
 421:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 422:../src/stm32f30x_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 423:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_BIT_ACTION(BitVal));
 424:../src/stm32f30x_gpio.c ****   
 425:../src/stm32f30x_gpio.c ****   if (BitVal != Bit_RESET)
 724              		.loc 1 425 0
 725 03c8 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 726 03ca 002B     		cmp	r3, #0
 727 03cc 03D0     		beq	.L31
 426:../src/stm32f30x_gpio.c ****   {
 427:../src/stm32f30x_gpio.c ****     GPIOx->BSRR = GPIO_Pin;
 728              		.loc 1 427 0
 729 03ce 7A88     		ldrh	r2, [r7, #2]
 730 03d0 7B68     		ldr	r3, [r7, #4]
 731 03d2 9A61     		str	r2, [r3, #24]
 732 03d4 02E0     		b	.L30
 733              	.L31:
 428:../src/stm32f30x_gpio.c ****   }
 429:../src/stm32f30x_gpio.c ****   else
 430:../src/stm32f30x_gpio.c ****   {
 431:../src/stm32f30x_gpio.c ****     GPIOx->BRR = GPIO_Pin ;
 734              		.loc 1 431 0
 735 03d6 7B68     		ldr	r3, [r7, #4]
 736 03d8 7A88     		ldrh	r2, [r7, #2]	@ movhi
 737 03da 1A85     		strh	r2, [r3, #40]	@ movhi
 738              	.L30:
 432:../src/stm32f30x_gpio.c ****   }
 433:../src/stm32f30x_gpio.c **** }
 739              		.loc 1 433 0
 740 03dc 07F10C07 		add	r7, r7, #12
 741 03e0 BD46     		mov	sp, r7
 742 03e2 80BC     		pop	{r7}
 743 03e4 7047     		bx	lr
 744              		.cfi_endproc
 745              	.LFE121:
 747 03e6 00BF     		.align	2
 748              		.global	GPIO_Write
 749              		.thumb
 750              		.thumb_func
 752              	GPIO_Write:
 753              	.LFB122:
 434:../src/stm32f30x_gpio.c **** 
 435:../src/stm32f30x_gpio.c **** /**
 436:../src/stm32f30x_gpio.c ****   * @brief  Writes data to the specified GPIO data port.
 437:../src/stm32f30x_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 438:../src/stm32f30x_gpio.c ****   * @param  PortVal: specifies the value to be written to the port output data 
 439:../src/stm32f30x_gpio.c ****   *                  register.
 440:../src/stm32f30x_gpio.c ****   * @retval None
 441:../src/stm32f30x_gpio.c ****   */
 442:../src/stm32f30x_gpio.c **** void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal)
 443:../src/stm32f30x_gpio.c **** {
 754              		.loc 1 443 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 8
 757              		@ frame_needed = 1, uses_anonymous_args = 0
 758              		@ link register save eliminated.
 759 03e8 80B4     		push	{r7}
 760              	.LCFI33:
 761              		.cfi_def_cfa_offset 4
 762              		.cfi_offset 7, -4
 763 03ea 83B0     		sub	sp, sp, #12
 764              	.LCFI34:
 765              		.cfi_def_cfa_offset 16
 766 03ec 00AF     		add	r7, sp, #0
 767              	.LCFI35:
 768              		.cfi_def_cfa_register 7
 769 03ee 7860     		str	r0, [r7, #4]
 770 03f0 0B46     		mov	r3, r1
 771 03f2 7B80     		strh	r3, [r7, #2]	@ movhi
 444:../src/stm32f30x_gpio.c ****   /* Check the parameters */
 445:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 446:../src/stm32f30x_gpio.c ****   
 447:../src/stm32f30x_gpio.c ****   GPIOx->ODR = PortVal;
 772              		.loc 1 447 0
 773 03f4 7B68     		ldr	r3, [r7, #4]
 774 03f6 7A88     		ldrh	r2, [r7, #2]	@ movhi
 775 03f8 9A82     		strh	r2, [r3, #20]	@ movhi
 448:../src/stm32f30x_gpio.c **** }
 776              		.loc 1 448 0
 777 03fa 07F10C07 		add	r7, r7, #12
 778 03fe BD46     		mov	sp, r7
 779 0400 80BC     		pop	{r7}
 780 0402 7047     		bx	lr
 781              		.cfi_endproc
 782              	.LFE122:
 784              		.align	2
 785              		.global	GPIO_PinAFConfig
 786              		.thumb
 787              		.thumb_func
 789              	GPIO_PinAFConfig:
 790              	.LFB123:
 449:../src/stm32f30x_gpio.c **** 
 450:../src/stm32f30x_gpio.c **** /**
 451:../src/stm32f30x_gpio.c ****   * @}
 452:../src/stm32f30x_gpio.c ****   */
 453:../src/stm32f30x_gpio.c **** 
 454:../src/stm32f30x_gpio.c **** /** @defgroup GPIO_Group3 GPIO Alternate functions configuration functions
 455:../src/stm32f30x_gpio.c ****  *  @brief   GPIO Alternate functions configuration functions
 456:../src/stm32f30x_gpio.c ****  *
 457:../src/stm32f30x_gpio.c **** @verbatim
 458:../src/stm32f30x_gpio.c ****  ===============================================================================
 459:../src/stm32f30x_gpio.c ****           ##### GPIO Alternate functions configuration functions #####
 460:../src/stm32f30x_gpio.c ****  ===============================================================================
 461:../src/stm32f30x_gpio.c **** 
 462:../src/stm32f30x_gpio.c **** @endverbatim
 463:../src/stm32f30x_gpio.c ****   * @{
 464:../src/stm32f30x_gpio.c ****   */
 465:../src/stm32f30x_gpio.c **** 
 466:../src/stm32f30x_gpio.c **** /**
 467:../src/stm32f30x_gpio.c ****   * @brief  Writes data to the specified GPIO data port.
 468:../src/stm32f30x_gpio.c ****   * @param  GPIOx: where x can be (A, B, C, D, E or F) to select the GPIO peripheral.
 469:../src/stm32f30x_gpio.c ****   * @param  GPIO_PinSource: specifies the pin for the Alternate function.
 470:../src/stm32f30x_gpio.c ****   *   This parameter can be GPIO_PinSourcex where x can be (0..15).
 471:../src/stm32f30x_gpio.c ****   * @param  GPIO_AF: selects the pin to be used as Alternate function.  
 472:../src/stm32f30x_gpio.c ****   *   This parameter can be one of the following value:
 473:../src/stm32f30x_gpio.c ****   *     @arg GPIO_AF_0:  JTCK-SWCLK, JTDI, JTDO/TRACESW0, JTMS-SWDAT, MCO, NJTRST, 
 474:../src/stm32f30x_gpio.c ****   *                      TRACED, TRACECK.
 475:../src/stm32f30x_gpio.c ****   *     @arg GPIO_AF_1:  OUT, TIM2, TIM15, TIM16, TIM17.
 476:../src/stm32f30x_gpio.c ****   *     @arg GPIO_AF_2:  COMP1_OUT, TIM1, TIM2, TIM3, TIM4, TIM8, TIM15.
 477:../src/stm32f30x_gpio.c ****   *     @arg GPIO_AF_3:  COMP7_OUT, TIM8, TIM15, Touch.
 478:../src/stm32f30x_gpio.c ****   *     @arg GPIO_AF_4:  I2C1, I2C2, TIM1, TIM8, TIM16, TIM17.
 479:../src/stm32f30x_gpio.c ****   *     @arg GPIO_AF_5:  IR_OUT, I2S2, I2S3, SPI1, SPI2, TIM8, USART4, USART5
 480:../src/stm32f30x_gpio.c ****   *     @arg GPIO_AF_6:  IR_OUT, I2S2, I2S3, SPI2, SPI3, TIM1, TIM8
 481:../src/stm32f30x_gpio.c ****   *     @arg GPIO_AF_7:  AOP2_OUT, CAN, COMP3_OUT, COMP5_OUT, COMP6_OUT, USART1, 
 482:../src/stm32f30x_gpio.c ****   *                      USART2, USART3.
 483:../src/stm32f30x_gpio.c ****   *     @arg GPIO_AF_8:  COMP1_OUT, COMP2_OUT, COMP3_OUT, COMP4_OUT, COMP5_OUT, 
 484:../src/stm32f30x_gpio.c ****   *                      COMP6_OUT.
 485:../src/stm32f30x_gpio.c ****   *     @arg GPIO_AF_9:  AOP4_OUT, CAN, TIM1, TIM8, TIM15.
 486:../src/stm32f30x_gpio.c ****   *     @arg GPIO_AF_10: AOP1_OUT, AOP3_OUT, TIM2, TIM3, TIM4, TIM8, TIM17. 
 487:../src/stm32f30x_gpio.c ****   *     @arg GPIO_AF_11: TIM1, TIM8.
 488:../src/stm32f30x_gpio.c ****   *     @arg GPIO_AF_12: TIM1.
 489:../src/stm32f30x_gpio.c ****   *     @arg GPIO_AF_14: USBDM, USBDP.
 490:../src/stm32f30x_gpio.c ****   *     @arg GPIO_AF_15: OUT.             
 491:../src/stm32f30x_gpio.c ****   * @note  The pin should already been configured in Alternate Function mode(AF)
 492:../src/stm32f30x_gpio.c ****   *        using GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
 493:../src/stm32f30x_gpio.c ****   * @note  Refer to the Alternate function mapping table in the device datasheet 
 494:../src/stm32f30x_gpio.c ****   *        for the detailed mapping of the system and peripherals alternate 
 495:../src/stm32f30x_gpio.c ****   *        function I/O pins.
 496:../src/stm32f30x_gpio.c ****   * @retval None
 497:../src/stm32f30x_gpio.c ****   */
 498:../src/stm32f30x_gpio.c **** void GPIO_PinAFConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF)
 499:../src/stm32f30x_gpio.c **** {
 791              		.loc 1 499 0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 16
 794              		@ frame_needed = 1, uses_anonymous_args = 0
 795              		@ link register save eliminated.
 796 0404 80B4     		push	{r7}
 797              	.LCFI36:
 798              		.cfi_def_cfa_offset 4
 799              		.cfi_offset 7, -4
 800 0406 85B0     		sub	sp, sp, #20
 801              	.LCFI37:
 802              		.cfi_def_cfa_offset 24
 803 0408 00AF     		add	r7, sp, #0
 804              	.LCFI38:
 805              		.cfi_def_cfa_register 7
 806 040a 7860     		str	r0, [r7, #4]
 807 040c 1346     		mov	r3, r2
 808 040e 0A46     		mov	r2, r1	@ movhi
 809 0410 7A80     		strh	r2, [r7, #2]	@ movhi
 810 0412 7B70     		strb	r3, [r7, #1]
 500:../src/stm32f30x_gpio.c ****   uint32_t temp = 0x00;
 811              		.loc 1 500 0
 812 0414 4FF00003 		mov	r3, #0
 813 0418 FB60     		str	r3, [r7, #12]
 501:../src/stm32f30x_gpio.c ****   uint32_t temp_2 = 0x00;
 814              		.loc 1 501 0
 815 041a 4FF00003 		mov	r3, #0
 816 041e BB60     		str	r3, [r7, #8]
 502:../src/stm32f30x_gpio.c ****   
 503:../src/stm32f30x_gpio.c ****   /* Check the parameters */
 504:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 505:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
 506:../src/stm32f30x_gpio.c ****   assert_param(IS_GPIO_AF(GPIO_AF));
 507:../src/stm32f30x_gpio.c ****   
 508:../src/stm32f30x_gpio.c ****   temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4));
 817              		.loc 1 508 0
 818 0420 7A78     		ldrb	r2, [r7, #1]	@ zero_extendqisi2
 819 0422 7B88     		ldrh	r3, [r7, #2]
 820 0424 03F00703 		and	r3, r3, #7
 821 0428 4FEA8303 		lsl	r3, r3, #2
 822 042c 02FA03F3 		lsl	r3, r2, r3
 823 0430 FB60     		str	r3, [r7, #12]
 509:../src/stm32f30x_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] &= ~((uint32_t)0xF << ((uint32_t)((uint32_t)GPIO_PinSource & (
 824              		.loc 1 509 0
 825 0432 7B88     		ldrh	r3, [r7, #2]
 826 0434 4FEAD303 		lsr	r3, r3, #3
 827 0438 9BB2     		uxth	r3, r3
 828 043a 1A46     		mov	r2, r3
 829 043c 7B88     		ldrh	r3, [r7, #2]
 830 043e 4FEAD303 		lsr	r3, r3, #3
 831 0442 9BB2     		uxth	r3, r3
 832 0444 1946     		mov	r1, r3
 833 0446 7B68     		ldr	r3, [r7, #4]
 834 0448 01F10801 		add	r1, r1, #8
 835 044c 53F82110 		ldr	r1, [r3, r1, lsl #2]
 836 0450 7B88     		ldrh	r3, [r7, #2]
 837 0452 03F00703 		and	r3, r3, #7
 838 0456 4FEA8303 		lsl	r3, r3, #2
 839 045a 4FF00F00 		mov	r0, #15
 840 045e 00FA03F3 		lsl	r3, r0, r3
 841 0462 6FEA0303 		mvn	r3, r3
 842 0466 1940     		ands	r1, r1, r3
 843 0468 7B68     		ldr	r3, [r7, #4]
 844 046a 02F10802 		add	r2, r2, #8
 845 046e 43F82210 		str	r1, [r3, r2, lsl #2]
 510:../src/stm32f30x_gpio.c ****   temp_2 = GPIOx->AFR[GPIO_PinSource >> 0x03] | temp;
 846              		.loc 1 510 0
 847 0472 7B88     		ldrh	r3, [r7, #2]
 848 0474 4FEAD303 		lsr	r3, r3, #3
 849 0478 9BB2     		uxth	r3, r3
 850 047a 1A46     		mov	r2, r3
 851 047c 7B68     		ldr	r3, [r7, #4]
 852 047e 02F10802 		add	r2, r2, #8
 853 0482 53F82220 		ldr	r2, [r3, r2, lsl #2]
 854 0486 FB68     		ldr	r3, [r7, #12]
 855 0488 1343     		orrs	r3, r3, r2
 856 048a BB60     		str	r3, [r7, #8]
 511:../src/stm32f30x_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] = temp_2;
 857              		.loc 1 511 0
 858 048c 7B88     		ldrh	r3, [r7, #2]
 859 048e 4FEAD303 		lsr	r3, r3, #3
 860 0492 9BB2     		uxth	r3, r3
 861 0494 1A46     		mov	r2, r3
 862 0496 7B68     		ldr	r3, [r7, #4]
 863 0498 02F10802 		add	r2, r2, #8
 864 049c B968     		ldr	r1, [r7, #8]
 865 049e 43F82210 		str	r1, [r3, r2, lsl #2]
 512:../src/stm32f30x_gpio.c **** }
 866              		.loc 1 512 0
 867 04a2 07F11407 		add	r7, r7, #20
 868 04a6 BD46     		mov	sp, r7
 869 04a8 80BC     		pop	{r7}
 870 04aa 7047     		bx	lr
 871              		.cfi_endproc
 872              	.LFE123:
 874              	.Letext0:
 875              		.file 2 "/home/aghosh01/gcc-arm-none-eabi-4_7-2012q4/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../.
 876              		.file 3 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x.h"
 877              		.file 4 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/stm32f30x_gpio.h"
 878              		.file 5 "/home/aghosh01/git/Trinity2013/STM32F3x/inc/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f30x_gpio.c
     /tmp/ccGqnRIl.s:19     .text:00000000 $t
     /tmp/ccGqnRIl.s:24     .text:00000000 GPIO_DeInit
     /tmp/ccGqnRIl.s:148    .text:000000f8 GPIO_Init
     /tmp/ccGqnRIl.s:330    .text:00000248 GPIO_StructInit
     /tmp/ccGqnRIl.s:381    .text:00000284 GPIO_PinLockConfig
     /tmp/ccGqnRIl.s:442    .text:000002c8 GPIO_ReadInputDataBit
     /tmp/ccGqnRIl.s:499    .text:00000308 GPIO_ReadInputData
     /tmp/ccGqnRIl.s:535    .text:00000324 GPIO_ReadOutputDataBit
     /tmp/ccGqnRIl.s:592    .text:00000364 GPIO_ReadOutputData
     /tmp/ccGqnRIl.s:628    .text:00000380 GPIO_SetBits
     /tmp/ccGqnRIl.s:665    .text:0000039c GPIO_ResetBits
     /tmp/ccGqnRIl.s:702    .text:000003b8 GPIO_WriteBit
     /tmp/ccGqnRIl.s:752    .text:000003e8 GPIO_Write
     /tmp/ccGqnRIl.s:789    .text:00000404 GPIO_PinAFConfig
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.323dce8664331a0daf4a2675e107c70c
                           .group:00000000 wm4.stm32f30x.h.56.6f19c65e98e3319a61449cb2b2455af5
                           .group:00000000 wm4.core_cm4.h.32.1434cd257ff5806b1b03cd32ab0641e9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cmInstr.h.25.d8165482ef3061013a2fc83e2d85f3d9
                           .group:00000000 wm4.core_cm4_simd.h.29.013e5bcf58dba2d27c60184174208e07
                           .group:00000000 wm4.core_cm4.h.155.cf7c793e178943e1bbf613f1b21cd51a
                           .group:00000000 wm4.stm32f30x.h.294.d8a54360eca16e4157694b52a095202d
                           .group:00000000 wm4.stm32f30x_adc.h.130.cbebad91f78fb87381fe0860eea6104e
                           .group:00000000 wm4.stm32f30x_can.h.50.8b8f5d301152c422a6e50622b33ef620
                           .group:00000000 wm4.stm32f30x_crc.h.54.66d4c5e565e18566aebd9abfd4bcd4b0
                           .group:00000000 wm4.stm32f30x_comp.h.91.06ae44150aaaa82c077b71df8db3541a
                           .group:00000000 wm4.stm32f30x_dac.h.49.b1b5b26e4ca241dbe67fa16dc86a615f
                           .group:00000000 wm4.stm32f30x_dbgmcu.h.53.b238a263ce6a2cc83f610cc35302a38b
                           .group:00000000 wm4.stm32f30x_dma.h.96.d7a2ddd10023e12781aa8ff5ac15d212
                           .group:00000000 wm4.stm32f30x_exti.h.60.8ca0809491a21dec6fc69cf7471e2bab
                           .group:00000000 wm4.stm32f30x_flash.h.70.32613455dfe7328932f786a224daac23
                           .group:00000000 wm4.stm32f30x_syscfg.h.58.4cadeb4ec8e47d36b972bbb6b96b7161
                           .group:00000000 wm4.stm32f30x_i2c.h.86.3d51d4edc0e3b9ee9aae045ccbb7739a
                           .group:00000000 wm4.stm32f30x_iwdg.h.59.467d704fb073a015941f19b50fa6470a
                           .group:00000000 wm4.stm32f30x_opamp.h.75.704e2e5e2aab039de307aaa2dcc99fa5
                           .group:00000000 wm4.stm32f30x_pwr.h.59.5c85acff2a3e3c5085b2140c06025cfc
                           .group:00000000 wm4.stm32f30x_rcc.h.79.5ba7cac1e74879861a72556c25322aa4
                           .group:00000000 wm4.stm32f30x_rtc.h.133.d184e08ff40bda44db4bed94f9633384
                           .group:00000000 wm4.stm32f30x_spi.h.119.4d21ec94ec14f3553a127e61c0a9874f
                           .group:00000000 wm4.stm32f30x_tim.h.175.d4a93cff2e7924577147254e501271b6
                           .group:00000000 wm4.stm32f30x_usart.h.110.c89016273702821ff4f9fe43881f70b5
                           .group:00000000 wm4.stm32f30x_wwdg.h.58.4688eee61a2709866472b4b4c07d9275
                           .group:00000000 wm4.stm32f30x_misc.h.113.6a52e4fe7c3825a3ab05990f30dddf92
                           .group:00000000 wm4.stm32f30x_gpio.h.50.408e1f6250246e4cc28221970909d34c

UNDEFINED SYMBOLS
RCC_AHBPeriphResetCmd
